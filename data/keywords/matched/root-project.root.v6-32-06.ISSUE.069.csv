id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/11160:323,usability,behavi,behavior,323,"Wrong Xrootd SHA256 has in release v6-26-06; - [ ] Checked for duplicates. ### Describe the bug. Compilation of Root v6-26-06 from github release fails. The SHA256 hash is wrong and has been corrected after this release on. https://github.com/root-project/root/commit/ce4ca3e1537be6776b93ef7bf8cd39d942c7de27. ### Expected behavior. Compilation of Root v6-26-06 from github release succeeds. ### To Reproduce. Steps to reproduce the behavior:. 1. git clone http://root.cern.ch/git/root.git. 2. rootvers=""6-26-06""; git checkout v$rootvers. 3. mkdir ../root-build; cd ../root-build. 4. cmake -DCMAKE_INSTALL_PREFIX=$rootinstall -Dbuiltin_xrootd=ON -Droofit=ON -Dpythia8=ON -Dmysql=OFF ../root-sources. ### Setup. 1. ROOT version v6-26-06. 2. Operating system Linux Fedora 36. 3. git clone http://root.cern.ch/git/root.git.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11160
https://github.com/root-project/root/issues/11160:433,usability,behavi,behavior,433,"Wrong Xrootd SHA256 has in release v6-26-06; - [ ] Checked for duplicates. ### Describe the bug. Compilation of Root v6-26-06 from github release fails. The SHA256 hash is wrong and has been corrected after this release on. https://github.com/root-project/root/commit/ce4ca3e1537be6776b93ef7bf8cd39d942c7de27. ### Expected behavior. Compilation of Root v6-26-06 from github release succeeds. ### To Reproduce. Steps to reproduce the behavior:. 1. git clone http://root.cern.ch/git/root.git. 2. rootvers=""6-26-06""; git checkout v$rootvers. 3. mkdir ../root-build; cd ../root-build. 4. cmake -DCMAKE_INSTALL_PREFIX=$rootinstall -Dbuiltin_xrootd=ON -Droofit=ON -Dpythia8=ON -Dmysql=OFF ../root-sources. ### Setup. 1. ROOT version v6-26-06. 2. Operating system Linux Fedora 36. 3. git clone http://root.cern.ch/git/root.git.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11160
https://github.com/root-project/root/pull/11161:323,availability,redund,redundant,323,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:177,deployability,updat,updateCoefficients,177,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:323,deployability,redundan,redundant,323,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:220,energy efficiency,Reduc,Reduce,220,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:74,integrability,Batch,BatchMode,74,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:374,integrability,Batch,BatchMode,374,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:74,performance,Batch,BatchMode,74,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:240,performance,cach,cache,240,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:374,performance,Batch,BatchMode,374,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:397,performance,perform,performance,397,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:323,reliability,redundan,redundant,323,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:150,safety,Avoid,Avoid,150,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:177,safety,updat,updateCoefficients,177,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:280,safety,avoid,avoid,280,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:317,safety,Avoid,Avoid,317,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:323,safety,redund,redundant,323,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:177,security,updat,updateCoefficients,177,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:397,usability,perform,performance,397,"[RF] Multiple RooAddPdf improvements that also speed up the evaluation in BatchMode; This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel. 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars. 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11162:23,deployability,integr,integration,23,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:60,deployability,Integr,Integrating,60,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:301,deployability,integr,integral,301,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:352,deployability,integr,integral,352,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:439,deployability,integr,integral,439,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1086,deployability,integr,integral,1086,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1189,deployability,integr,integration,1189,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1341,deployability,integr,integration,1341,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:386,energy efficiency,current,current,386,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:23,integrability,integr,integration,23,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:60,integrability,Integr,Integrating,60,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:301,integrability,integr,integral,301,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:352,integrability,integr,integral,352,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:439,integrability,integr,integral,439,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1086,integrability,integr,integral,1086,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1189,integrability,integr,integration,1189,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1341,integrability,integr,integration,1341,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:23,interoperability,integr,integration,23,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:60,interoperability,Integr,Integrating,60,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:301,interoperability,integr,integral,301,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:352,interoperability,integr,integral,352,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:439,interoperability,integr,integral,439,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1086,interoperability,integr,integral,1086,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1189,interoperability,integr,integration,1189,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1341,interoperability,integr,integration,1341,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:23,modifiability,integr,integration,23,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:60,modifiability,Integr,Integrating,60,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:301,modifiability,integr,integral,301,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:352,modifiability,integr,integral,352,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:407,modifiability,variab,variable,407,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:439,modifiability,integr,integral,439,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1086,modifiability,integr,integral,1086,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1189,modifiability,integr,integration,1189,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1341,modifiability,integr,integration,1341,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:23,reliability,integr,integration,23,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:60,reliability,Integr,Integrating,60,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:109,reliability,doe,doesn,109,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:301,reliability,integr,integral,301,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:352,reliability,integr,integral,352,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:439,reliability,integr,integral,439,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1086,reliability,integr,integral,1086,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1189,reliability,integr,integration,1189,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1341,reliability,integr,integration,1341,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:735,safety,test,tests,735,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:746,safety,test,testRooWrapperPdf,746,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:832,safety,test,test,832,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:837,safety,test,testRooWrapperPdf,837,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:868,safety,test,testNestedPDFs,868,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:967,safety,test,testNestedPDFs,967,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1009,safety,test,tests,1009,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1296,safety,test,tests,1296,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1389,safety,except,exception,1389,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:23,security,integr,integration,23,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:60,security,Integr,Integrating,60,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:301,security,integr,integral,301,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:352,security,integr,integral,352,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:439,security,integr,integral,439,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1086,security,integr,integral,1086,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1189,security,integr,integration,1189,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1341,security,integr,integration,1341,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:23,testability,integr,integration,23,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:60,testability,Integr,Integrating,60,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:301,testability,integr,integral,301,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:352,testability,integr,integral,352,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:439,testability,integr,integral,439,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:730,testability,unit,unit,730,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:735,testability,test,tests,735,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:746,testability,test,testRooWrapperPdf,746,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:832,testability,test,test,832,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:837,testability,test,testRooWrapperPdf,837,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:868,testability,test,testNestedPDFs,868,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:967,testability,test,testNestedPDFs,967,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1009,testability,test,tests,1009,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1086,testability,integr,integral,1086,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1189,testability,integr,integration,1189,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1291,testability,unit,unit,1291,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1296,testability,test,tests,1296,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1341,testability,integr,integration,1341,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:422,usability,user,users,422,"[RF] Explicitly forbid integration of a `RooAbsRealLValue`; Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,. which one can check with this code:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};. xint->Print();. ```. The integral of x from -5 to 5 should be zero, but the integral object. only returns the current value of the variable. Some users expect the integral to work, and give the same result as. this, which correctly prints out zero:. ```C++. RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};. RooProduct xId{""xId"", ""xId"", RooArgList{x}};. std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};. xint->Print();. ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27). * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the. same as its integral! As soon as the x value or limits would change, the. results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was. not used anywhere outside artificial unit tests, this commit suggests so. prohibit the integration of RooAbsRealLValues by throwing an exception. if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11163:59,deployability,releas,released,59,[RF] Qualify calls to std::move in RooPolyFunc; Soon-to-be-released Clang 15 will complain:. ```. warning: unqualified call to 'std::move' [-Wunqualified-std-cast-call]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11163
https://github.com/root-project/root/pull/11163:82,safety,compl,complain,82,[RF] Qualify calls to std::move in RooPolyFunc; Soon-to-be-released Clang 15 will complain:. ```. warning: unqualified call to 'std::move' [-Wunqualified-std-cast-call]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11163
https://github.com/root-project/root/pull/11163:82,security,compl,complain,82,[RF] Qualify calls to std::move in RooPolyFunc; Soon-to-be-released Clang 15 will complain:. ```. warning: unqualified call to 'std::move' [-Wunqualified-std-cast-call]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11163
https://github.com/root-project/root/pull/11164:16,deployability,Updat,Update,16,"Revert ""[cmake] Update xrootd hash after a new version of the xrootd …; …tar file (#11106)"". This reverts commit ce4ca3e1537be6776b93ef7bf8cd39d942c7de27.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11164
https://github.com/root-project/root/pull/11164:47,deployability,version,version,47,"Revert ""[cmake] Update xrootd hash after a new version of the xrootd …; …tar file (#11106)"". This reverts commit ce4ca3e1537be6776b93ef7bf8cd39d942c7de27.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11164
https://github.com/root-project/root/pull/11164:47,integrability,version,version,47,"Revert ""[cmake] Update xrootd hash after a new version of the xrootd …; …tar file (#11106)"". This reverts commit ce4ca3e1537be6776b93ef7bf8cd39d942c7de27.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11164
https://github.com/root-project/root/pull/11164:47,modifiability,version,version,47,"Revert ""[cmake] Update xrootd hash after a new version of the xrootd …; …tar file (#11106)"". This reverts commit ce4ca3e1537be6776b93ef7bf8cd39d942c7de27.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11164
https://github.com/root-project/root/pull/11164:16,safety,Updat,Update,16,"Revert ""[cmake] Update xrootd hash after a new version of the xrootd …; …tar file (#11106)"". This reverts commit ce4ca3e1537be6776b93ef7bf8cd39d942c7de27.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11164
https://github.com/root-project/root/pull/11164:16,security,Updat,Update,16,"Revert ""[cmake] Update xrootd hash after a new version of the xrootd …; …tar file (#11106)"". This reverts commit ce4ca3e1537be6776b93ef7bf8cd39d942c7de27.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11164
https://github.com/root-project/root/pull/11164:30,security,hash,hash,30,"Revert ""[cmake] Update xrootd hash after a new version of the xrootd …; …tar file (#11106)"". This reverts commit ce4ca3e1537be6776b93ef7bf8cd39d942c7de27.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11164
https://github.com/root-project/root/pull/11165:24,deployability,Updat,Update,24,"[v6-26] Revert ""[cmake] Update xrootd hash after a new version of the…; … xrootd tar file (#11106)"". This reverts commit 0c9a4e605b48f355461065f9292dd905ec209f31.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11165
https://github.com/root-project/root/pull/11165:55,deployability,version,version,55,"[v6-26] Revert ""[cmake] Update xrootd hash after a new version of the…; … xrootd tar file (#11106)"". This reverts commit 0c9a4e605b48f355461065f9292dd905ec209f31.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11165
https://github.com/root-project/root/pull/11165:55,integrability,version,version,55,"[v6-26] Revert ""[cmake] Update xrootd hash after a new version of the…; … xrootd tar file (#11106)"". This reverts commit 0c9a4e605b48f355461065f9292dd905ec209f31.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11165
https://github.com/root-project/root/pull/11165:55,modifiability,version,version,55,"[v6-26] Revert ""[cmake] Update xrootd hash after a new version of the…; … xrootd tar file (#11106)"". This reverts commit 0c9a4e605b48f355461065f9292dd905ec209f31.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11165
https://github.com/root-project/root/pull/11165:24,safety,Updat,Update,24,"[v6-26] Revert ""[cmake] Update xrootd hash after a new version of the…; … xrootd tar file (#11106)"". This reverts commit 0c9a4e605b48f355461065f9292dd905ec209f31.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11165
https://github.com/root-project/root/pull/11165:24,security,Updat,Update,24,"[v6-26] Revert ""[cmake] Update xrootd hash after a new version of the…; … xrootd tar file (#11106)"". This reverts commit 0c9a4e605b48f355461065f9292dd905ec209f31.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11165
https://github.com/root-project/root/pull/11165:38,security,hash,hash,38,"[v6-26] Revert ""[cmake] Update xrootd hash after a new version of the…; … xrootd tar file (#11106)"". This reverts commit 0c9a4e605b48f355461065f9292dd905ec209f31.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11165
https://github.com/root-project/root/pull/11167:55,deployability,releas,released,55,core/clib: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11167
https://github.com/root-project/root/pull/11167:153,deployability,version,versions,153,core/clib: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11167
https://github.com/root-project/root/pull/11167:0,energy efficiency,core,core,0,core/clib: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11167
https://github.com/root-project/root/pull/11167:153,integrability,version,versions,153,core/clib: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11167
https://github.com/root-project/root/pull/11167:153,modifiability,version,versions,153,core/clib: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11167
https://github.com/root-project/root/pull/11167:73,safety,compl,complains,73,core/clib: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11167
https://github.com/root-project/root/pull/11167:73,security,compl,complains,73,core/clib: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11167
https://github.com/root-project/root/pull/11167:122,usability,prototyp,prototype,122,core/clib: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11167
https://github.com/root-project/root/pull/11167:178,usability,support,supported,178,core/clib: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11167
https://github.com/root-project/root/pull/11167:213,usability,prototyp,prototype,213,core/clib: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11167
https://github.com/root-project/root/pull/11168:99,deployability,releas,released,99,rmkdepend: Remove K&R function definitions and add arguments to function pointer types; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```. and. ```. passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11168
https://github.com/root-project/root/pull/11168:197,deployability,version,versions,197,rmkdepend: Remove K&R function definitions and add arguments to function pointer types; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```. and. ```. passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11168
https://github.com/root-project/root/pull/11168:357,deployability,version,versions,357,rmkdepend: Remove K&R function definitions and add arguments to function pointer types; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```. and. ```. passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11168
https://github.com/root-project/root/pull/11168:197,integrability,version,versions,197,rmkdepend: Remove K&R function definitions and add arguments to function pointer types; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```. and. ```. passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11168
https://github.com/root-project/root/pull/11168:357,integrability,version,versions,357,rmkdepend: Remove K&R function definitions and add arguments to function pointer types; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```. and. ```. passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11168
https://github.com/root-project/root/pull/11168:197,modifiability,version,versions,197,rmkdepend: Remove K&R function definitions and add arguments to function pointer types; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```. and. ```. passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11168
https://github.com/root-project/root/pull/11168:357,modifiability,version,versions,357,rmkdepend: Remove K&R function definitions and add arguments to function pointer types; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```. and. ```. passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11168
https://github.com/root-project/root/pull/11168:117,safety,compl,complains,117,rmkdepend: Remove K&R function definitions and add arguments to function pointer types; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```. and. ```. passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11168
https://github.com/root-project/root/pull/11168:117,security,compl,complains,117,rmkdepend: Remove K&R function definitions and add arguments to function pointer types; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```. and. ```. passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11168
https://github.com/root-project/root/pull/11168:166,usability,prototyp,prototype,166,rmkdepend: Remove K&R function definitions and add arguments to function pointer types; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```. and. ```. passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11168
https://github.com/root-project/root/pull/11168:222,usability,support,supported,222,rmkdepend: Remove K&R function definitions and add arguments to function pointer types; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```. and. ```. passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11168
https://github.com/root-project/root/pull/11168:257,usability,prototyp,prototype,257,rmkdepend: Remove K&R function definitions and add arguments to function pointer types; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```. and. ```. passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11168
https://github.com/root-project/root/pull/11168:326,usability,prototyp,prototype,326,rmkdepend: Remove K&R function definitions and add arguments to function pointer types; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```. and. ```. passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11168
https://github.com/root-project/root/pull/11168:382,usability,support,supported,382,rmkdepend: Remove K&R function definitions and add arguments to function pointer types; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```. and. ```. passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11168
https://github.com/root-project/root/pull/11168:417,usability,prototyp,prototype,417,rmkdepend: Remove K&R function definitions and add arguments to function pointer types; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```. and. ```. passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11168
https://github.com/root-project/root/pull/11169:68,deployability,releas,released,68,"graf2d/x11, graf3d/x3d: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11169
https://github.com/root-project/root/pull/11169:166,deployability,version,versions,166,"graf2d/x11, graf3d/x3d: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11169
https://github.com/root-project/root/pull/11169:166,integrability,version,versions,166,"graf2d/x11, graf3d/x3d: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11169
https://github.com/root-project/root/pull/11169:166,modifiability,version,versions,166,"graf2d/x11, graf3d/x3d: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11169
https://github.com/root-project/root/pull/11169:86,safety,compl,complains,86,"graf2d/x11, graf3d/x3d: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11169
https://github.com/root-project/root/pull/11169:86,security,compl,complains,86,"graf2d/x11, graf3d/x3d: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11169
https://github.com/root-project/root/pull/11169:135,usability,prototyp,prototype,135,"graf2d/x11, graf3d/x3d: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11169
https://github.com/root-project/root/pull/11169:191,usability,support,supported,191,"graf2d/x11, graf3d/x3d: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11169
https://github.com/root-project/root/pull/11169:226,usability,prototyp,prototype,226,"graf2d/x11, graf3d/x3d: Remove K&R function definitions; Soon-to-be-released Clang 15 complains:. ```. a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11169
https://github.com/root-project/root/pull/11170:140,availability,uptim,uptimal,140,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:100,integrability,Batch,BatchMode,100,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:136,integrability,sub,sub-uptimal,136,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:183,integrability,interfac,interface,183,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:656,integrability,batch,batch,656,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:183,interoperability,interfac,interface,183,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:183,modifiability,interfac,interface,183,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:100,performance,Batch,BatchMode,100,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:445,performance,time,times,445,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:656,performance,batch,batch,656,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:140,reliability,uptim,uptimal,140,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:537,safety,test,testParamHistFunc,537,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:561,safety,test,test,561,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:589,safety,valid,validate,589,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:589,security,validat,validate,589,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:537,testability,test,testParamHistFunc,537,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:556,testability,unit,unit,556,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:561,testability,test,test,561,"[RF] Better ParamHistFunc::computeBatch with RooAbsBinning::binNumbers; So far, the `ParamHistFunc` BatchMode implementation was still. sub-uptimal because it used the non-vectorized interface of the. RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up. multiple bin indices at once, the implementaiton can be improved and. sped. In the three-dimensional many-bin case, the new implementation is a bit. more than three times faster than the old one. This should benefit. HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the. results of a ParamHistFunc both with and without the batch mode,. comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11171:1027,deployability,updat,updated,1027,"[RF] Vectorize weight evaluation with ```RooDataHist::weights()```; This PR improves the speed for evaluating weights in `RooHistPdf`. and `RooHistFunc` for one dimensional histograms with no interpolation. In the future, `RooDataHist::weights()` can be extended to cover. cases with higher dimensions and interpolation. The function `RooDataHist::weights()` was implemented to enable. vectorized evaluations of bin weights. In `RooHistPdf` it is implemented. using the new function `RooHistPdf::computeBatch()`, which calls. `RooDataHist::weights()` in the case of no interpolation and 1D. histograms, and `RooAbsReal::computeBatch()` otherwise. In. `RooHistFunc::computeBatch`, `RooDataHist::weights()` is called in the. case of no interpolation and 1D histograms and is unchanged in the other cases. To calculate the weight, bin indices are stored as a vector. using `RooAbsBinning::binNumbers`, which was implemented in #11151. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11171
https://github.com/root-project/root/pull/11171:254,modifiability,exten,extended,254,"[RF] Vectorize weight evaluation with ```RooDataHist::weights()```; This PR improves the speed for evaluating weights in `RooHistPdf`. and `RooHistFunc` for one dimensional histograms with no interpolation. In the future, `RooDataHist::weights()` can be extended to cover. cases with higher dimensions and interpolation. The function `RooDataHist::weights()` was implemented to enable. vectorized evaluations of bin weights. In `RooHistPdf` it is implemented. using the new function `RooHistPdf::computeBatch()`, which calls. `RooDataHist::weights()` in the case of no interpolation and 1D. histograms, and `RooAbsReal::computeBatch()` otherwise. In. `RooHistFunc::computeBatch`, `RooDataHist::weights()` is called in the. case of no interpolation and 1D histograms and is unchanged in the other cases. To calculate the weight, bin indices are stored as a vector. using `RooAbsBinning::binNumbers`, which was implemented in #11151. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11171
https://github.com/root-project/root/pull/11171:997,safety,test,tested,997,"[RF] Vectorize weight evaluation with ```RooDataHist::weights()```; This PR improves the speed for evaluating weights in `RooHistPdf`. and `RooHistFunc` for one dimensional histograms with no interpolation. In the future, `RooDataHist::weights()` can be extended to cover. cases with higher dimensions and interpolation. The function `RooDataHist::weights()` was implemented to enable. vectorized evaluations of bin weights. In `RooHistPdf` it is implemented. using the new function `RooHistPdf::computeBatch()`, which calls. `RooDataHist::weights()` in the case of no interpolation and 1D. histograms, and `RooAbsReal::computeBatch()` otherwise. In. `RooHistFunc::computeBatch`, `RooDataHist::weights()` is called in the. case of no interpolation and 1D histograms and is unchanged in the other cases. To calculate the weight, bin indices are stored as a vector. using `RooAbsBinning::binNumbers`, which was implemented in #11151. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11171
https://github.com/root-project/root/pull/11171:1027,safety,updat,updated,1027,"[RF] Vectorize weight evaluation with ```RooDataHist::weights()```; This PR improves the speed for evaluating weights in `RooHistPdf`. and `RooHistFunc` for one dimensional histograms with no interpolation. In the future, `RooDataHist::weights()` can be extended to cover. cases with higher dimensions and interpolation. The function `RooDataHist::weights()` was implemented to enable. vectorized evaluations of bin weights. In `RooHistPdf` it is implemented. using the new function `RooHistPdf::computeBatch()`, which calls. `RooDataHist::weights()` in the case of no interpolation and 1D. histograms, and `RooAbsReal::computeBatch()` otherwise. In. `RooHistFunc::computeBatch`, `RooDataHist::weights()` is called in the. case of no interpolation and 1D histograms and is unchanged in the other cases. To calculate the weight, bin indices are stored as a vector. using `RooAbsBinning::binNumbers`, which was implemented in #11151. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11171
https://github.com/root-project/root/pull/11171:1027,security,updat,updated,1027,"[RF] Vectorize weight evaluation with ```RooDataHist::weights()```; This PR improves the speed for evaluating weights in `RooHistPdf`. and `RooHistFunc` for one dimensional histograms with no interpolation. In the future, `RooDataHist::weights()` can be extended to cover. cases with higher dimensions and interpolation. The function `RooDataHist::weights()` was implemented to enable. vectorized evaluations of bin weights. In `RooHistPdf` it is implemented. using the new function `RooHistPdf::computeBatch()`, which calls. `RooDataHist::weights()` in the case of no interpolation and 1D. histograms, and `RooAbsReal::computeBatch()` otherwise. In. `RooHistFunc::computeBatch`, `RooDataHist::weights()` is called in the. case of no interpolation and 1D histograms and is unchanged in the other cases. To calculate the weight, bin indices are stored as a vector. using `RooAbsBinning::binNumbers`, which was implemented in #11151. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11171
https://github.com/root-project/root/pull/11171:997,testability,test,tested,997,"[RF] Vectorize weight evaluation with ```RooDataHist::weights()```; This PR improves the speed for evaluating weights in `RooHistPdf`. and `RooHistFunc` for one dimensional histograms with no interpolation. In the future, `RooDataHist::weights()` can be extended to cover. cases with higher dimensions and interpolation. The function `RooDataHist::weights()` was implemented to enable. vectorized evaluations of bin weights. In `RooHistPdf` it is implemented. using the new function `RooHistPdf::computeBatch()`, which calls. `RooDataHist::weights()` in the case of no interpolation and 1D. histograms, and `RooAbsReal::computeBatch()` otherwise. In. `RooHistFunc::computeBatch`, `RooDataHist::weights()` is called in the. case of no interpolation and 1D histograms and is unchanged in the other cases. To calculate the weight, bin indices are stored as a vector. using `RooAbsBinning::binNumbers`, which was implemented in #11151. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11171
https://github.com/root-project/root/pull/11172:434,availability,fault,fault,434,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:30,energy efficiency,alloc,allocation,30,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:144,energy efficiency,alloc,allocated,144,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:404,energy efficiency,Draw,Draw,404,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:434,energy efficiency,fault,fault,434,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:570,energy efficiency,alloc,allocating,570,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:683,energy efficiency,alloc,allocating,683,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:434,performance,fault,fault,434,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:662,performance,memor,memory,662,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:434,reliability,fault,fault,434,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:324,safety,test,test,324,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:364,safety,test,test,364,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:371,safety,test,test,371,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:434,safety,fault,fault,434,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:763,security,access,access,763,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:324,testability,test,test,324,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:364,testability,test,test,364,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:371,testability,test,test,371,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:662,usability,memor,memory,662,"[libNewDelete] Over-align the allocation.; By leveraging std::max_align_t, insure that the return addressed (offset-ed. compared to the address allocated by TStorage::ObjectAlloc) is still well. aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing. in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""). TH1 *h=new TH1F(""test"",""test"",100,-5,5). h->Fill (0). h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating. the TMethodCall, the address returned was aligned on a 16 bit. boundary but the memory counting over-allocating was shifting. the address by 'only' 8 bits, leading to a mis-aligned access. by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/issues/11173:399,availability,Error,Error,399,"[DF] Some special characters in Filter titles break `SaveGraph`; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RDFHelpers.hxx>. #include <cstdlib>. int main(). {. auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");. ROOT::RDF::SaveGraph(df, ""out.dot"");. std::system(""dot -Tpng out.dot > out.png"");. }. ```. yields:. ```. Error: not well-formed (invalid token) in line 1. ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ... in label of node 1. ```. `out.dot` has the following contents:. ```dot. digraph {. 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot. digraph {. 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11173
https://github.com/root-project/root/issues/11173:32,integrability,Filter,Filter,32,"[DF] Some special characters in Filter titles break `SaveGraph`; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RDFHelpers.hxx>. #include <cstdlib>. int main(). {. auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");. ROOT::RDF::SaveGraph(df, ""out.dot"");. std::system(""dot -Tpng out.dot > out.png"");. }. ```. yields:. ```. Error: not well-formed (invalid token) in line 1. ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ... in label of node 1. ```. `out.dot` has the following contents:. ```dot. digraph {. 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot. digraph {. 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11173
https://github.com/root-project/root/issues/11173:216,integrability,Filter,Filter,216,"[DF] Some special characters in Filter titles break `SaveGraph`; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RDFHelpers.hxx>. #include <cstdlib>. int main(). {. auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");. ROOT::RDF::SaveGraph(df, ""out.dot"");. std::system(""dot -Tpng out.dot > out.png"");. }. ```. yields:. ```. Error: not well-formed (invalid token) in line 1. ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ... in label of node 1. ```. `out.dot` has the following contents:. ```dot. digraph {. 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot. digraph {. 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11173
https://github.com/root-project/root/issues/11173:949,integrability,sub,substituting,949,"[DF] Some special characters in Filter titles break `SaveGraph`; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RDFHelpers.hxx>. #include <cstdlib>. int main(). {. auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");. ROOT::RDF::SaveGraph(df, ""out.dot"");. std::system(""dot -Tpng out.dot > out.png"");. }. ```. yields:. ```. Error: not well-formed (invalid token) in line 1. ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ... in label of node 1. ```. `out.dot` has the following contents:. ```dot. digraph {. 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot. digraph {. 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11173
https://github.com/root-project/root/issues/11173:1377,integrability,sub,substitutions,1377,"[DF] Some special characters in Filter titles break `SaveGraph`; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RDFHelpers.hxx>. #include <cstdlib>. int main(). {. auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");. ROOT::RDF::SaveGraph(df, ""out.dot"");. std::system(""dot -Tpng out.dot > out.png"");. }. ```. yields:. ```. Error: not well-formed (invalid token) in line 1. ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ... in label of node 1. ```. `out.dot` has the following contents:. ```dot. digraph {. 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot. digraph {. 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11173
https://github.com/root-project/root/issues/11173:399,performance,Error,Error,399,"[DF] Some special characters in Filter titles break `SaveGraph`; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RDFHelpers.hxx>. #include <cstdlib>. int main(). {. auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");. ROOT::RDF::SaveGraph(df, ""out.dot"");. std::system(""dot -Tpng out.dot > out.png"");. }. ```. yields:. ```. Error: not well-formed (invalid token) in line 1. ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ... in label of node 1. ```. `out.dot` has the following contents:. ```dot. digraph {. 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot. digraph {. 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11173
https://github.com/root-project/root/issues/11173:561,performance,content,contents,561,"[DF] Some special characters in Filter titles break `SaveGraph`; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RDFHelpers.hxx>. #include <cstdlib>. int main(). {. auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");. ROOT::RDF::SaveGraph(df, ""out.dot"");. std::system(""dot -Tpng out.dot > out.png"");. }. ```. yields:. ```. Error: not well-formed (invalid token) in line 1. ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ... in label of node 1. ```. `out.dot` has the following contents:. ```dot. digraph {. 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot. digraph {. 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11173
https://github.com/root-project/root/issues/11173:399,safety,Error,Error,399,"[DF] Some special characters in Filter titles break `SaveGraph`; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RDFHelpers.hxx>. #include <cstdlib>. int main(). {. auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");. ROOT::RDF::SaveGraph(df, ""out.dot"");. std::system(""dot -Tpng out.dot > out.png"");. }. ```. yields:. ```. Error: not well-formed (invalid token) in line 1. ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ... in label of node 1. ```. `out.dot` has the following contents:. ```dot. digraph {. 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot. digraph {. 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11173
https://github.com/root-project/root/issues/11173:431,security,token,token,431,"[DF] Some special characters in Filter titles break `SaveGraph`; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RDFHelpers.hxx>. #include <cstdlib>. int main(). {. auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");. ROOT::RDF::SaveGraph(df, ""out.dot"");. std::system(""dot -Tpng out.dot > out.png"");. }. ```. yields:. ```. Error: not well-formed (invalid token) in line 1. ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ... in label of node 1. ```. `out.dot` has the following contents:. ```dot. digraph {. 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot. digraph {. 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11173
https://github.com/root-project/root/issues/11173:1370,testability,simpl,simple,1370,"[DF] Some special characters in Filter titles break `SaveGraph`; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RDFHelpers.hxx>. #include <cstdlib>. int main(). {. auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");. ROOT::RDF::SaveGraph(df, ""out.dot"");. std::system(""dot -Tpng out.dot > out.png"");. }. ```. yields:. ```. Error: not well-formed (invalid token) in line 1. ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ... in label of node 1. ```. `out.dot` has the following contents:. ```dot. digraph {. 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot. digraph {. 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11173
https://github.com/root-project/root/issues/11173:399,usability,Error,Error,399,"[DF] Some special characters in Filter titles break `SaveGraph`; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RDFHelpers.hxx>. #include <cstdlib>. int main(). {. auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");. ROOT::RDF::SaveGraph(df, ""out.dot"");. std::system(""dot -Tpng out.dot > out.png"");. }. ```. yields:. ```. Error: not well-formed (invalid token) in line 1. ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ... in label of node 1. ```. `out.dot` has the following contents:. ```dot. digraph {. 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot. digraph {. 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11173
https://github.com/root-project/root/issues/11173:1370,usability,simpl,simple,1370,"[DF] Some special characters in Filter titles break `SaveGraph`; Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RDFHelpers.hxx>. #include <cstdlib>. int main(). {. auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");. ROOT::RDF::SaveGraph(df, ""out.dot"");. std::system(""dot -Tpng out.dot > out.png"");. }. ```. yields:. ```. Error: not well-formed (invalid token) in line 1. ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ... in label of node 1. ```. `out.dot` has the following contents:. ```dot. digraph {. 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot. digraph {. 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];. 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];. 	0 -> 1;. }. ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11173
https://github.com/root-project/root/pull/11174:145,availability,error,errors,145,"[cling] Try to avoid crashes in llvm::identify_magic; The overload taking a path opens the file and then `mmap` its contents. This can cause bus errors when another process truncates the file while we are trying to read it. Instead just read the first 1024 bytes, which should be enough for `identify_magic` to do its work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11174
https://github.com/root-project/root/pull/11174:116,performance,content,contents,116,"[cling] Try to avoid crashes in llvm::identify_magic; The overload taking a path opens the file and then `mmap` its contents. This can cause bus errors when another process truncates the file while we are trying to read it. Instead just read the first 1024 bytes, which should be enough for `identify_magic` to do its work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11174
https://github.com/root-project/root/pull/11174:145,performance,error,errors,145,"[cling] Try to avoid crashes in llvm::identify_magic; The overload taking a path opens the file and then `mmap` its contents. This can cause bus errors when another process truncates the file while we are trying to read it. Instead just read the first 1024 bytes, which should be enough for `identify_magic` to do its work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11174
https://github.com/root-project/root/pull/11174:15,safety,avoid,avoid,15,"[cling] Try to avoid crashes in llvm::identify_magic; The overload taking a path opens the file and then `mmap` its contents. This can cause bus errors when another process truncates the file while we are trying to read it. Instead just read the first 1024 bytes, which should be enough for `identify_magic` to do its work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11174
https://github.com/root-project/root/pull/11174:145,safety,error,errors,145,"[cling] Try to avoid crashes in llvm::identify_magic; The overload taking a path opens the file and then `mmap` its contents. This can cause bus errors when another process truncates the file while we are trying to read it. Instead just read the first 1024 bytes, which should be enough for `identify_magic` to do its work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11174
https://github.com/root-project/root/pull/11174:145,usability,error,errors,145,"[cling] Try to avoid crashes in llvm::identify_magic; The overload taking a path opens the file and then `mmap` its contents. This can cause bus errors when another process truncates the file while we are trying to read it. Instead just read the first 1024 bytes, which should be enough for `identify_magic` to do its work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11174
https://github.com/root-project/root/pull/11176:1680,availability,failur,failures,1680,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:488,deployability,observ,observables,488,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:772,deployability,compos,composite,772,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:893,deployability,depend,depend,893,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:1674,deployability,build,build,1674,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:1680,deployability,fail,failures,1680,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:797,energy efficiency,model,model,797,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:804,energy efficiency,model,model,804,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:813,energy efficiency,model,model,813,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:973,energy efficiency,model,model,973,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:1017,energy efficiency,model,model,1017,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:1456,energy efficiency,current,current,1456,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:893,integrability,depend,depend,893,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:772,modifiability,compos,composite,772,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:893,modifiability,depend,depend,893,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:381,performance,memor,memory,381,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:1680,performance,failur,failures,1680,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:1512,reliability,doe,does,1512,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:1680,reliability,fail,failures,1680,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:22,safety,detect,detect,22,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:893,safety,depend,depend,893,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:1443,safety,input,input,1443,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:1571,safety,avoid,avoid,1571,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:22,security,detect,detect,22,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:575,security,sign,signal,575,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:797,security,model,model,797,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:804,security,model,model,804,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:813,security,model,model,813,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:973,security,model,model,973,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:1017,security,model,model,1017,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:488,testability,observ,observables,488,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:893,testability,depend,depend,893,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:381,usability,memor,memory,381,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:1443,usability,input,input,1443,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:1480,usability,shortcut,shortcuts,1480,"[RF] New mechanism to detect if `_normSet` in RooAbsPdf is invalid; In RooAbsPdf, the following check is done to check if the normalization. set has changed:. ```C++. RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet). ```. This works, but like the previous pointer comparison it still gives. false results if the `_normSet` was replaced buy another RooArgSet at. the same memory location. The problem can be reproduced with this code:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y). RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf. RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution. // which should not be the case! std::cout << model.getVal(x) << std::endl;. std::cout << model.getVal({x, y}) << std::endl;. ```. The solution would be to replace the `_normSet` member directly with. its unique ID value, but then it could not be used anymore. Hence we. need both. This commit also adds a new private `RooAbsPdf` member functions to set. the `_normSet` together with the new `_normSetId` member, and one. protected `isActiveNormSet(RooArgSet const*)` function. The latter. function is comparing the input to the current `_normSet`, but shortcuts. to `false` is the ID does not match with the last `_normSet` ID. Like. this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in. RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/issues/11177:107,deployability,observ,observables,107,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:466,deployability,depend,depending,466,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:729,deployability,observ,observables,729,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:2609,deployability,observ,observables,2609,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:63,energy efficiency,model,model,63,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:498,energy efficiency,model,model,498,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1139,energy efficiency,model,model,1139," and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1240,energy efficiency,model,model,1240,"uld be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ``",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1278,energy efficiency,model,modelx,1278,"sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1286,energy efficiency,model,modelx,1286,"roducts:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1296,energy efficiency,model,modelx,1296,"```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1342,energy efficiency,model,modely,1342,"b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1350,energy efficiency,model,modely,1350,"(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1360,energy efficiency,model,modely,1360,"All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1407,energy efficiency,model,model,1407,"ms. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong va",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1414,energy efficiency,model,model,1414,"ever, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, sh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1423,energy efficiency,model,model,1423,"RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1432,energy efficiency,model,modelx,1432,"ou get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1440,energy efficiency,model,modely,1440,"ifferent probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1524,energy efficiency,model,modelx,1524," sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https:/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1586,energy efficiency,model,modely,1586," be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1655,energy efficiency,model,model,1655,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1735,energy efficiency,model,model,1735,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1855,energy efficiency,model,model,1855,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1862,energy efficiency,model,model,1862,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1871,energy efficiency,model,model,1871,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1981,energy efficiency,model,model,1981,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:2042,energy efficiency,model,model,2042,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:2110,energy efficiency,model,model,2110,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:160,integrability,compon,component,160,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:466,integrability,depend,depending,466,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:160,interoperability,compon,component,160,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:160,modifiability,compon,component,160,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:466,modifiability,depend,depending,466,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:27,reliability,doe,doesn,27,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:606,reliability,doe,doesn,606,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:74,safety,compl,completely,74,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:466,safety,depend,depending,466,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:63,security,model,model,63,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:74,security,compl,completely,74,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:97,security,ident,identical,97,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:136,security,sign,signal,136,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:498,security,model,model,498,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:818,security,sign,signal,818,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1139,security,model,model,1139," and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1240,security,model,model,1240,"uld be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ``",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1278,security,model,modelx,1278,"sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1286,security,model,modelx,1286,"roducts:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1296,security,model,modelx,1296,"```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1342,security,model,modely,1342,"b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1350,security,model,modely,1350,"(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1360,security,model,modely,1360,"All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1407,security,model,model,1407,"ms. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong va",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1414,security,model,model,1414,"ever, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, sh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1423,security,model,model,1423,"RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1432,security,model,modelx,1432,"ou get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1440,security,model,modely,1440,"ifferent probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1524,security,model,modelx,1524," sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https:/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1586,security,model,modely,1586," be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1655,security,model,model,1655,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1735,security,model,model,1735,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1855,security,model,model,1855,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1862,security,model,model,1862,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1871,security,model,model,1871,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:1981,security,model,model,1981,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:2042,security,model,model,2042,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:2110,security,model,model,2110,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:107,testability,observ,observables,107,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:466,testability,depend,depending,466,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:729,testability,observ,observables,729,"[RF] RooAddPdf of products doesn't factorize correctly; Take a model with completely independent identical observables that have both a signal and a background component:. ```. p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) . ```. It should be equivalent to define this as a sum of products:. ```. p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y). ```. All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:2609,testability,observ,observables,2609,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/issues/11177:2557,usability,behavi,behaviour-for-multidimensional-pdf-with-conditional-observables,2557,"ectly. This can be reproduced with the following script:. ```C++. using namespace RooFit;. // Create observables. RooRealVar x(""x"", ""x"", -5, 5);. RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y. RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));. RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y. RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));. RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation. RooArgSet nsetx{x};. RooArgSet nsety{y};. RooArgSet nsetxy{x, y};. {. // Formulate model as a product of sums. RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));. RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));. RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;. std::cout << std::endl;. }. {. // Formulate model as a sum of products. RooProdPdf sig(""sig"", ""sig"", {gx, gy});. RooProdPdf bkg(""bkg"", ""bkg"", {px, py});. RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;. std::cout << ""p(y) = "" << model.getVal(nsety) << std::endl;. std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy). << "" -> wrong value, should be p(x) * p(y)!"" << std::endl;. std::cout << std::endl;. }. ```. The output is:. ```. Product of sums:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0161267. Sum of products:. p(x) = 0.126991. p(y) = 0.126991. p(x) * p(y) = 0.0243442 -> wrong value, should be p(x) * p(y)! ```. It is very likely that this following forum post is related to the problem:. https://root-forum.cern.ch/t/strange-behaviour-for-multidimensional-pdf-with-conditional-observables/51012/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/pull/11178:148,availability,error,error,148,"[io] Make case values constant expressions [v6.26]; Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit ac36d879629f. An alternative solution appears to be replacing `EProperty` (which refers to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. Closes #11128. (cherry picked from commit cc28da57f0b8e2878a2c047504a49762d7d8dfb5). Backport of PR https://github.com/root-project/root/pull/11148",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11178
https://github.com/root-project/root/pull/11178:592,availability,mask,mask,592,"[io] Make case values constant expressions [v6.26]; Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit ac36d879629f. An alternative solution appears to be replacing `EProperty` (which refers to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. Closes #11128. (cherry picked from commit cc28da57f0b8e2878a2c047504a49762d7d8dfb5). Backport of PR https://github.com/root-project/root/pull/11148",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11178
https://github.com/root-project/root/pull/11178:193,deployability,releas,released,193,"[io] Make case values constant expressions [v6.26]; Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit ac36d879629f. An alternative solution appears to be replacing `EProperty` (which refers to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. Closes #11128. (cherry picked from commit cc28da57f0b8e2878a2c047504a49762d7d8dfb5). Backport of PR https://github.com/root-project/root/pull/11148",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11178
https://github.com/root-project/root/pull/11178:52,energy efficiency,Current,Current,52,"[io] Make case values constant expressions [v6.26]; Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit ac36d879629f. An alternative solution appears to be replacing `EProperty` (which refers to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. Closes #11128. (cherry picked from commit cc28da57f0b8e2878a2c047504a49762d7d8dfb5). Backport of PR https://github.com/root-project/root/pull/11148",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11178
https://github.com/root-project/root/pull/11178:148,performance,error,error,148,"[io] Make case values constant expressions [v6.26]; Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit ac36d879629f. An alternative solution appears to be replacing `EProperty` (which refers to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. Closes #11128. (cherry picked from commit cc28da57f0b8e2878a2c047504a49762d7d8dfb5). Backport of PR https://github.com/root-project/root/pull/11148",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11178
https://github.com/root-project/root/pull/11178:81,safety,compl,complains,81,"[io] Make case values constant expressions [v6.26]; Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit ac36d879629f. An alternative solution appears to be replacing `EProperty` (which refers to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. Closes #11128. (cherry picked from commit cc28da57f0b8e2878a2c047504a49762d7d8dfb5). Backport of PR https://github.com/root-project/root/pull/11148",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11178
https://github.com/root-project/root/pull/11178:148,safety,error,error,148,"[io] Make case values constant expressions [v6.26]; Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit ac36d879629f. An alternative solution appears to be replacing `EProperty` (which refers to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. Closes #11128. (cherry picked from commit cc28da57f0b8e2878a2c047504a49762d7d8dfb5). Backport of PR https://github.com/root-project/root/pull/11148",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11178
https://github.com/root-project/root/pull/11178:81,security,compl,complains,81,"[io] Make case values constant expressions [v6.26]; Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit ac36d879629f. An alternative solution appears to be replacing `EProperty` (which refers to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. Closes #11128. (cherry picked from commit cc28da57f0b8e2878a2c047504a49762d7d8dfb5). Backport of PR https://github.com/root-project/root/pull/11148",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11178
https://github.com/root-project/root/pull/11178:148,usability,error,error,148,"[io] Make case values constant expressions [v6.26]; Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit ac36d879629f. An alternative solution appears to be replacing `EProperty` (which refers to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. Closes #11128. (cherry picked from commit cc28da57f0b8e2878a2c047504a49762d7d8dfb5). Backport of PR https://github.com/root-project/root/pull/11148",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11178
https://github.com/root-project/root/pull/11178:705,usability,Close,Closes,705,"[io] Make case values constant expressions [v6.26]; Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit ac36d879629f. An alternative solution appears to be replacing `EProperty` (which refers to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. Closes #11128. (cherry picked from commit cc28da57f0b8e2878a2c047504a49762d7d8dfb5). Backport of PR https://github.com/root-project/root/pull/11148",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11178
https://github.com/root-project/root/issues/11179:162,availability,error,error,162,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:236,availability,error,error,236,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:456,availability,error,error,456,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:679,availability,error,error,679,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:864,availability,error,errors,864,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:30,deployability,version,versions,30,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:962,deployability,releas,release,962,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:994,deployability,upgrad,upgrade,994,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:30,integrability,version,versions,30,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:347,interoperability,convers,conversion,347,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:567,interoperability,convers,conversion,567,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:790,interoperability,convers,conversion,790,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:30,modifiability,version,versions,30,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:994,modifiability,upgrad,upgrade,994,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:162,performance,error,error,162,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:236,performance,error,error,236,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:456,performance,error,error,456,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:679,performance,error,error,679,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:864,performance,error,errors,864,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:162,safety,error,error,162,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:236,safety,error,error,236,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:274,safety,valid,valid,274,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:456,safety,error,error,456,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:494,safety,valid,valid,494,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:679,safety,error,error,679,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:717,safety,valid,valid,717,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:864,safety,error,errors,864,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:162,usability,error,error,162,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:236,usability,error,error,236,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:456,usability,error,error,456,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:679,usability,error,error,679,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:864,usability,error,errors,864,"TBB will be broken with newer versions of Clang; Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:. ```. ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type binding_completed = kind_type(bound+1);. ^. ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type detached = kind_type(binding_completed+1);. ^. ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] . static const kind_type dying = kind_type(detached+1);. ^. 3 errors generated. ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues. * https://github.com/root-project/root/issues/7063. * https://github.com/root-project/root/issues/8260. * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/pull/11180:67,energy efficiency,draw,drawing,67,[GL] Add scaling factors for width and bounding-box size used when drawing simple axes in TGLViewer; Use as:. ```. TGLUtil::SetSimpleAxisWidthScale(4). TGLUtil::SetSimpleAxisBBoxScale(1.1). ```. Requested by Rene.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11180
https://github.com/root-project/root/pull/11180:9,modifiability,scal,scaling,9,[GL] Add scaling factors for width and bounding-box size used when drawing simple axes in TGLViewer; Use as:. ```. TGLUtil::SetSimpleAxisWidthScale(4). TGLUtil::SetSimpleAxisBBoxScale(1.1). ```. Requested by Rene.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11180
https://github.com/root-project/root/pull/11180:75,testability,simpl,simple,75,[GL] Add scaling factors for width and bounding-box size used when drawing simple axes in TGLViewer; Use as:. ```. TGLUtil::SetSimpleAxisWidthScale(4). TGLUtil::SetSimpleAxisBBoxScale(1.1). ```. Requested by Rene.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11180
https://github.com/root-project/root/pull/11180:75,usability,simpl,simple,75,[GL] Add scaling factors for width and bounding-box size used when drawing simple axes in TGLViewer; Use as:. ```. TGLUtil::SetSimpleAxisWidthScale(4). TGLUtil::SetSimpleAxisBBoxScale(1.1). ```. Requested by Rene.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11180
https://github.com/root-project/root/pull/11181:9,integrability,Batch,BatchMode,9,[RF] Use BatchMode for data projection plots; WIP,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11181
https://github.com/root-project/root/pull/11181:9,performance,Batch,BatchMode,9,[RF] Use BatchMode for data projection plots; WIP,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11181
https://github.com/root-project/root/issues/11182:48,deployability,instal,install,48,h2root/g2root man pages should be excluded from install when fortran is disabled; - [x] Checked for duplicates. ### Describe the bug. `make install` installs h2root.1 and g2root.1 man pages. . ### Expected behavior. h2root.1 is not installed. ### To Reproduce. ```. cmake -Dfortran:BOOL=OFF ... make. make install. ```. ### Setup. 1. ROOT version: 6.26.06. ### Additional context. https://github.com/root-project/root/blob/6018b5fd4598094ce75f8ab293ba5b115e8b66d8/CMakeLists.txt#L590-L595. `h2root.1` and `g2root.1` should be conditionally added to `MAN_PATT_EXCLUDE`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11182
https://github.com/root-project/root/issues/11182:140,deployability,instal,install,140,h2root/g2root man pages should be excluded from install when fortran is disabled; - [x] Checked for duplicates. ### Describe the bug. `make install` installs h2root.1 and g2root.1 man pages. . ### Expected behavior. h2root.1 is not installed. ### To Reproduce. ```. cmake -Dfortran:BOOL=OFF ... make. make install. ```. ### Setup. 1. ROOT version: 6.26.06. ### Additional context. https://github.com/root-project/root/blob/6018b5fd4598094ce75f8ab293ba5b115e8b66d8/CMakeLists.txt#L590-L595. `h2root.1` and `g2root.1` should be conditionally added to `MAN_PATT_EXCLUDE`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11182
https://github.com/root-project/root/issues/11182:149,deployability,instal,installs,149,h2root/g2root man pages should be excluded from install when fortran is disabled; - [x] Checked for duplicates. ### Describe the bug. `make install` installs h2root.1 and g2root.1 man pages. . ### Expected behavior. h2root.1 is not installed. ### To Reproduce. ```. cmake -Dfortran:BOOL=OFF ... make. make install. ```. ### Setup. 1. ROOT version: 6.26.06. ### Additional context. https://github.com/root-project/root/blob/6018b5fd4598094ce75f8ab293ba5b115e8b66d8/CMakeLists.txt#L590-L595. `h2root.1` and `g2root.1` should be conditionally added to `MAN_PATT_EXCLUDE`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11182
https://github.com/root-project/root/issues/11182:232,deployability,instal,installed,232,h2root/g2root man pages should be excluded from install when fortran is disabled; - [x] Checked for duplicates. ### Describe the bug. `make install` installs h2root.1 and g2root.1 man pages. . ### Expected behavior. h2root.1 is not installed. ### To Reproduce. ```. cmake -Dfortran:BOOL=OFF ... make. make install. ```. ### Setup. 1. ROOT version: 6.26.06. ### Additional context. https://github.com/root-project/root/blob/6018b5fd4598094ce75f8ab293ba5b115e8b66d8/CMakeLists.txt#L590-L595. `h2root.1` and `g2root.1` should be conditionally added to `MAN_PATT_EXCLUDE`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11182
https://github.com/root-project/root/issues/11182:306,deployability,instal,install,306,h2root/g2root man pages should be excluded from install when fortran is disabled; - [x] Checked for duplicates. ### Describe the bug. `make install` installs h2root.1 and g2root.1 man pages. . ### Expected behavior. h2root.1 is not installed. ### To Reproduce. ```. cmake -Dfortran:BOOL=OFF ... make. make install. ```. ### Setup. 1. ROOT version: 6.26.06. ### Additional context. https://github.com/root-project/root/blob/6018b5fd4598094ce75f8ab293ba5b115e8b66d8/CMakeLists.txt#L590-L595. `h2root.1` and `g2root.1` should be conditionally added to `MAN_PATT_EXCLUDE`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11182
https://github.com/root-project/root/issues/11182:339,deployability,version,version,339,h2root/g2root man pages should be excluded from install when fortran is disabled; - [x] Checked for duplicates. ### Describe the bug. `make install` installs h2root.1 and g2root.1 man pages. . ### Expected behavior. h2root.1 is not installed. ### To Reproduce. ```. cmake -Dfortran:BOOL=OFF ... make. make install. ```. ### Setup. 1. ROOT version: 6.26.06. ### Additional context. https://github.com/root-project/root/blob/6018b5fd4598094ce75f8ab293ba5b115e8b66d8/CMakeLists.txt#L590-L595. `h2root.1` and `g2root.1` should be conditionally added to `MAN_PATT_EXCLUDE`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11182
https://github.com/root-project/root/issues/11182:339,integrability,version,version,339,h2root/g2root man pages should be excluded from install when fortran is disabled; - [x] Checked for duplicates. ### Describe the bug. `make install` installs h2root.1 and g2root.1 man pages. . ### Expected behavior. h2root.1 is not installed. ### To Reproduce. ```. cmake -Dfortran:BOOL=OFF ... make. make install. ```. ### Setup. 1. ROOT version: 6.26.06. ### Additional context. https://github.com/root-project/root/blob/6018b5fd4598094ce75f8ab293ba5b115e8b66d8/CMakeLists.txt#L590-L595. `h2root.1` and `g2root.1` should be conditionally added to `MAN_PATT_EXCLUDE`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11182
https://github.com/root-project/root/issues/11182:339,modifiability,version,version,339,h2root/g2root man pages should be excluded from install when fortran is disabled; - [x] Checked for duplicates. ### Describe the bug. `make install` installs h2root.1 and g2root.1 man pages. . ### Expected behavior. h2root.1 is not installed. ### To Reproduce. ```. cmake -Dfortran:BOOL=OFF ... make. make install. ```. ### Setup. 1. ROOT version: 6.26.06. ### Additional context. https://github.com/root-project/root/blob/6018b5fd4598094ce75f8ab293ba5b115e8b66d8/CMakeLists.txt#L590-L595. `h2root.1` and `g2root.1` should be conditionally added to `MAN_PATT_EXCLUDE`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11182
https://github.com/root-project/root/issues/11182:372,testability,context,context,372,h2root/g2root man pages should be excluded from install when fortran is disabled; - [x] Checked for duplicates. ### Describe the bug. `make install` installs h2root.1 and g2root.1 man pages. . ### Expected behavior. h2root.1 is not installed. ### To Reproduce. ```. cmake -Dfortran:BOOL=OFF ... make. make install. ```. ### Setup. 1. ROOT version: 6.26.06. ### Additional context. https://github.com/root-project/root/blob/6018b5fd4598094ce75f8ab293ba5b115e8b66d8/CMakeLists.txt#L590-L595. `h2root.1` and `g2root.1` should be conditionally added to `MAN_PATT_EXCLUDE`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11182
https://github.com/root-project/root/issues/11182:206,usability,behavi,behavior,206,h2root/g2root man pages should be excluded from install when fortran is disabled; - [x] Checked for duplicates. ### Describe the bug. `make install` installs h2root.1 and g2root.1 man pages. . ### Expected behavior. h2root.1 is not installed. ### To Reproduce. ```. cmake -Dfortran:BOOL=OFF ... make. make install. ```. ### Setup. 1. ROOT version: 6.26.06. ### Additional context. https://github.com/root-project/root/blob/6018b5fd4598094ce75f8ab293ba5b115e8b66d8/CMakeLists.txt#L590-L595. `h2root.1` and `g2root.1` should be conditionally added to `MAN_PATT_EXCLUDE`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11182
https://github.com/root-project/root/pull/11183:1367,deployability,updat,updated,1367,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:115,interoperability,coordinat,coordinate,115,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:717,interoperability,BinD,BinData,717,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:812,interoperability,BinD,BinData,812,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:895,interoperability,BinD,BinData,895,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:1054,interoperability,BinD,BinData,1054,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:1207,interoperability,BinD,BinData,1207,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:1251,interoperability,coordinat,coordinate,1251,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:661,modifiability,paramet,parameter,661,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:717,modifiability,BinD,BinData,717,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:812,modifiability,BinD,BinData,812,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:895,modifiability,BinD,BinData,895,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:1054,modifiability,BinD,BinData,1054,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:1207,modifiability,BinD,BinData,1207,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:91,performance,memor,memory,91,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:865,performance,memor,memory,865,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:1326,safety,test,tested,1326,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:1367,safety,updat,updated,1367,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:695,security,Modif,Modifies,695,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:1098,security,govern,governs,1098,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:1367,security,updat,updated,1367,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:550,testability,simpl,simple,550,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:1326,testability,test,tested,1326,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:91,usability,memor,memory,91,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:458,usability,visual,visually,458,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:550,usability,simpl,simple,550,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:865,usability,memor,memory,865,"Fitting Tweak for TGraph; Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:. Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:. An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally. - [ not needed ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11185:25,availability,failur,failures,25,"[tmva] Fix tutorials for failures seen in CI; We need to veto RegressionKeras.py since it is too slow in evaluating the model, since it is doing on an event by event base. . We need to implement model evaluation using SOFIE. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11185
https://github.com/root-project/root/pull/11185:97,availability,slo,slow,97,"[tmva] Fix tutorials for failures seen in CI; We need to veto RegressionKeras.py since it is too slow in evaluating the model, since it is doing on an event by event base. . We need to implement model evaluation using SOFIE. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11185
https://github.com/root-project/root/pull/11185:25,deployability,fail,failures,25,"[tmva] Fix tutorials for failures seen in CI; We need to veto RegressionKeras.py since it is too slow in evaluating the model, since it is doing on an event by event base. . We need to implement model evaluation using SOFIE. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11185
https://github.com/root-project/root/pull/11185:120,energy efficiency,model,model,120,"[tmva] Fix tutorials for failures seen in CI; We need to veto RegressionKeras.py since it is too slow in evaluating the model, since it is doing on an event by event base. . We need to implement model evaluation using SOFIE. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11185
https://github.com/root-project/root/pull/11185:195,energy efficiency,model,model,195,"[tmva] Fix tutorials for failures seen in CI; We need to veto RegressionKeras.py since it is too slow in evaluating the model, since it is doing on an event by event base. . We need to implement model evaluation using SOFIE. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11185
https://github.com/root-project/root/pull/11185:151,integrability,event,event,151,"[tmva] Fix tutorials for failures seen in CI; We need to veto RegressionKeras.py since it is too slow in evaluating the model, since it is doing on an event by event base. . We need to implement model evaluation using SOFIE. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11185
https://github.com/root-project/root/pull/11185:160,integrability,event,event,160,"[tmva] Fix tutorials for failures seen in CI; We need to veto RegressionKeras.py since it is too slow in evaluating the model, since it is doing on an event by event base. . We need to implement model evaluation using SOFIE. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11185
https://github.com/root-project/root/pull/11185:25,performance,failur,failures,25,"[tmva] Fix tutorials for failures seen in CI; We need to veto RegressionKeras.py since it is too slow in evaluating the model, since it is doing on an event by event base. . We need to implement model evaluation using SOFIE. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11185
https://github.com/root-project/root/pull/11185:25,reliability,fail,failures,25,"[tmva] Fix tutorials for failures seen in CI; We need to veto RegressionKeras.py since it is too slow in evaluating the model, since it is doing on an event by event base. . We need to implement model evaluation using SOFIE. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11185
https://github.com/root-project/root/pull/11185:97,reliability,slo,slow,97,"[tmva] Fix tutorials for failures seen in CI; We need to veto RegressionKeras.py since it is too slow in evaluating the model, since it is doing on an event by event base. . We need to implement model evaluation using SOFIE. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11185
https://github.com/root-project/root/pull/11185:120,security,model,model,120,"[tmva] Fix tutorials for failures seen in CI; We need to veto RegressionKeras.py since it is too slow in evaluating the model, since it is doing on an event by event base. . We need to implement model evaluation using SOFIE. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11185
https://github.com/root-project/root/pull/11185:195,security,model,model,195,"[tmva] Fix tutorials for failures seen in CI; We need to veto RegressionKeras.py since it is too slow in evaluating the model, since it is doing on an event by event base. . We need to implement model evaluation using SOFIE. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11185
https://github.com/root-project/root/pull/11185:62,testability,Regress,RegressionKeras,62,"[tmva] Fix tutorials for failures seen in CI; We need to veto RegressionKeras.py since it is too slow in evaluating the model, since it is doing on an event by event base. . We need to implement model evaluation using SOFIE. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11185
https://github.com/root-project/root/issues/11186:1465,availability,operat,operator,1465,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1878,availability,operat,operator,1878,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:29,deployability,stack,stack-use-after-return,29,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:96,deployability,fail,failing,96,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:185,deployability,stack,stack-use-after-return,185,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:340,deployability,stack,stack-use-after-scope,340,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:938,deployability,stack,stack-use-after-return,938,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1287,deployability,stack,stack-use-after-return,1287,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1328,deployability,stack,stack,1328,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:2221,deployability,build,build,2221,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:96,reliability,fail,failing,96,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:86,safety,test,tests,86,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:162,safety,test,test-testRooPoisson,162,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:238,safety,test,test-testRooBinSamplingPdf,238,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:318,safety,test,test-testNaNPacker,318,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:392,safety,test,test-testRooSimultaneous,392,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:446,safety,test,test-stressroofit,446,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:493,safety,test,test-stressroofit-interpreted,493,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1355,safety,test,test,1355,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1861,safety,Test,TestBody,1861,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1954,safety,test,test,1954,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1959,safety,test,testRooPoisson,1959,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:2021,safety,Test,TestBody,2021,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:2070,safety,test,test,2070,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:2075,safety,test,testRooPoisson,2075,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:2146,safety,test,tests,2146,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:2236,safety,test,tests,2236,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:86,testability,test,tests,86,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:162,testability,test,test-testRooPoisson,162,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:238,testability,test,test-testRooBinSamplingPdf,238,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:318,testability,test,test-testNaNPacker,318,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:392,testability,test,test-testRooSimultaneous,392,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:446,testability,test,test-stressroofit,446,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:493,testability,test,test-stressroofit-interpreted,493,"[RF] heap-use-after-free and stack-use-after-return for RooFit::UniqueId; Many RooFit tests are failing when built with AddressSanitizer:. * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`). * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1334,testability,trace,trace,1334,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1355,testability,test,test,1355,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1861,testability,Test,TestBody,1861,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1954,testability,test,test,1954,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:1959,testability,test,testRooPoisson,1959,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:2021,testability,Test,TestBody,2021,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:2070,testability,test,test,2070,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:2075,testability,test,testRooPoisson,2075,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:2146,testability,test,tests,2146,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:2208,testability,instrument,instrumented,2208,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:2236,testability,test,tests,2236,"ingPdf` (`heap-use-after-free`). * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`). * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`). * `test-stressroofit` (`heap-use-after-free`). * `test-stressroofit-interpreted` (`heap-use-after-free`). * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`). * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`). * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`). * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`). * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`). * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`). * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:. ```. READ of size 8 at 0x7ff2148150b8 thread T0. #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38. #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36. #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29. #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5. #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:27:3. ```. Note: There may be other problems in the tests after this issue is fixed. Please check locally with an instrumented build that the tests pass afterwards!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/pull/11187:153,availability,error,errors,153,"[cling] Try to avoid crashes in llvm::identify_magic [v6.26]; The overload taking a path opens the file and then `mmap` its contents. This can cause bus errors when another process truncates the file while we are trying to read it. Instead just read the first 1024 bytes, which should be enough for `identify_magic` to do its work. (cherry picked from commit 588e13c4da4a63427ef156f2624f5a5a15bfd298). Backport of PR https://github.com/root-project/root/pull/11174",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11187
https://github.com/root-project/root/pull/11187:124,performance,content,contents,124,"[cling] Try to avoid crashes in llvm::identify_magic [v6.26]; The overload taking a path opens the file and then `mmap` its contents. This can cause bus errors when another process truncates the file while we are trying to read it. Instead just read the first 1024 bytes, which should be enough for `identify_magic` to do its work. (cherry picked from commit 588e13c4da4a63427ef156f2624f5a5a15bfd298). Backport of PR https://github.com/root-project/root/pull/11174",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11187
https://github.com/root-project/root/pull/11187:153,performance,error,errors,153,"[cling] Try to avoid crashes in llvm::identify_magic [v6.26]; The overload taking a path opens the file and then `mmap` its contents. This can cause bus errors when another process truncates the file while we are trying to read it. Instead just read the first 1024 bytes, which should be enough for `identify_magic` to do its work. (cherry picked from commit 588e13c4da4a63427ef156f2624f5a5a15bfd298). Backport of PR https://github.com/root-project/root/pull/11174",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11187
https://github.com/root-project/root/pull/11187:15,safety,avoid,avoid,15,"[cling] Try to avoid crashes in llvm::identify_magic [v6.26]; The overload taking a path opens the file and then `mmap` its contents. This can cause bus errors when another process truncates the file while we are trying to read it. Instead just read the first 1024 bytes, which should be enough for `identify_magic` to do its work. (cherry picked from commit 588e13c4da4a63427ef156f2624f5a5a15bfd298). Backport of PR https://github.com/root-project/root/pull/11174",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11187
https://github.com/root-project/root/pull/11187:153,safety,error,errors,153,"[cling] Try to avoid crashes in llvm::identify_magic [v6.26]; The overload taking a path opens the file and then `mmap` its contents. This can cause bus errors when another process truncates the file while we are trying to read it. Instead just read the first 1024 bytes, which should be enough for `identify_magic` to do its work. (cherry picked from commit 588e13c4da4a63427ef156f2624f5a5a15bfd298). Backport of PR https://github.com/root-project/root/pull/11174",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11187
https://github.com/root-project/root/pull/11187:153,usability,error,errors,153,"[cling] Try to avoid crashes in llvm::identify_magic [v6.26]; The overload taking a path opens the file and then `mmap` its contents. This can cause bus errors when another process truncates the file while we are trying to read it. Instead just read the first 1024 bytes, which should be enough for `identify_magic` to do its work. (cherry picked from commit 588e13c4da4a63427ef156f2624f5a5a15bfd298). Backport of PR https://github.com/root-project/root/pull/11174",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11187
https://github.com/root-project/root/issues/11188:307,availability,error,error,307,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1850,availability,error,error,1850,"p_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:3188,availability,Operat,Operating,3188,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:11,deployability,build,build,11,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:17,deployability,fail,fails,17,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:301,deployability,build,build,301,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:2827,deployability,Build,Build,2827,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:2844,deployability,fail,fail,2844,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:3088,deployability,build,build,3088,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:3149,deployability,version,version,3149,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:3281,deployability,Fail,Failing,3281,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:434,integrability,interfac,interface,434,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1232,integrability,interfac,interface,1232,"2545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:3149,integrability,version,version,3149,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:434,interoperability,interfac,interface,434,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1232,interoperability,interfac,interface,1232,"2545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:434,modifiability,interfac,interface,434,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1232,modifiability,interfac,interface,1232,"2545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1390,modifiability,Paramet,Parameter,1390,"-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1422,modifiability,Paramet,Parameter,1422,"lities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1454,modifiability,Paramet,Parameter,1454,"h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:3149,modifiability,version,version,3149,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:307,performance,error,error,307,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1850,performance,error,error,1850,"p_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:17,reliability,fail,fails,17,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:2844,reliability,fail,fail,2844,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:3281,reliability,Fail,Failing,3281,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:112,safety,test,testing,112,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:307,safety,error,error,307,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:366,safety,test,tests,366,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:511,safety,test,tests,511,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:579,safety,test,test,579,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:584,safety,test,testRooFitFunction,584,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:652,safety,test,tests,652,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:658,safety,test,testBuildDir,658,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1164,safety,test,tests,1164,"atest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1555,safety,test,tests,1555,"ysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigne",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1623,safety,test,test,1623,"enkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1628,safety,test,testRooFitFunction,1628,"pace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1719,safety,test,tests,1719,"66402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1725,safety,test,testBuildDir,1725,"73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1850,safety,error,error,1850,"p_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:2143,safety,test,tests,2143,"rkspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:2149,safety,test,testBuildDir,2149,"b-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT versio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:3042,safety,input,input,3042,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:3362,safety,test,test,3362,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:3367,safety,test,testRooFitFunction,3367,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:112,testability,test,testing,112,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:366,testability,test,tests,366,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:511,testability,test,tests,511,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:579,testability,test,test,579,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:584,testability,test,testRooFitFunction,584,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:652,testability,test,tests,652,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:658,testability,test,testBuildDir,658,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1164,testability,test,tests,1164,"atest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1555,testability,test,tests,1555,"ysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigne",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1623,testability,test,test,1623,"enkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1628,testability,test,testRooFitFunction,1628,"pace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1719,testability,test,tests,1719,"66402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1725,testability,test,testBuildDir,1725,"73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:2143,testability,test,tests,2143,"rkspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:2149,testability,test,testBuildDir,2149,"b-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT versio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:3272,testability,context,context,3272,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:3362,testability,test,test,3362,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:3367,testability,test,testRooFitFunction,3367,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:307,usability,error,error,307,"[RF] CMSSW build fails with root master 6018b5fd45; - [x] Checked for duplicates. ### Describe the bug. We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:. ```. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,. from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:1850,usability,error,error,1850,"p_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:2817,usability,behavi,behavior,2817,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:2897,usability,behavi,behavior,2897,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11188:3042,usability,input,input,3042,", funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'. 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'. 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,. | ^~~~. ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior. Build should not fail. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: master, commit 6018b5fd45. 2. Operating system: SLC7. 3. How you obtained ROOT: built from source. ### Additional context. Failing code: https://github.com/cms-sw/cmssw/blob/master/PhysicsTools/Utilities/test/testRooFitFunction.cpp#L29-L30. @smuzaffar FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11188
https://github.com/root-project/root/issues/11190:355,deployability,fail,failed,355,"ROOT compiled with `-Ddev=ON` crashes when type `#` in ROOT session; To reproduce, start ROOT and type `#`. ```. % root -l . root [0] #. root.exe: /home/linev/git/webgui/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:108: void cling::MetaLexer::LexAnyString(cling::Token&): Assertion `Tok.getBufStart() != curPos && ""It must consume at least on char""' failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11190
https://github.com/root-project/root/issues/11190:355,reliability,fail,failed,355,"ROOT compiled with `-Ddev=ON` crashes when type `#` in ROOT session; To reproduce, start ROOT and type `#`. ```. % root -l . root [0] #. root.exe: /home/linev/git/webgui/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:108: void cling::MetaLexer::LexAnyString(cling::Token&): Assertion `Tok.getBufStart() != curPos && ""It must consume at least on char""' failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11190
https://github.com/root-project/root/issues/11190:60,security,session,session,60,"ROOT compiled with `-Ddev=ON` crashes when type `#` in ROOT session; To reproduce, start ROOT and type `#`. ```. % root -l . root [0] #. root.exe: /home/linev/git/webgui/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:108: void cling::MetaLexer::LexAnyString(cling::Token&): Assertion `Tok.getBufStart() != curPos && ""It must consume at least on char""' failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11190
https://github.com/root-project/root/issues/11190:268,security,Token,Token,268,"ROOT compiled with `-Ddev=ON` crashes when type `#` in ROOT session; To reproduce, start ROOT and type `#`. ```. % root -l . root [0] #. root.exe: /home/linev/git/webgui/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:108: void cling::MetaLexer::LexAnyString(cling::Token&): Assertion `Tok.getBufStart() != curPos && ""It must consume at least on char""' failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11190
https://github.com/root-project/root/issues/11190:277,testability,Assert,Assertion,277,"ROOT compiled with `-Ddev=ON` crashes when type `#` in ROOT session; To reproduce, start ROOT and type `#`. ```. % root -l . root [0] #. root.exe: /home/linev/git/webgui/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:108: void cling::MetaLexer::LexAnyString(cling::Token&): Assertion `Tok.getBufStart() != curPos && ""It must consume at least on char""' failed. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11190
https://github.com/root-project/root/issues/11191:71,deployability,version,versions,71,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:294,deployability,version,version,294,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:461,deployability,version,version,461,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:488,deployability,version,version,488,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:526,deployability,instal,install,526,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:71,integrability,version,versions,71,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:294,integrability,version,version,294,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:461,integrability,version,version,461,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:488,integrability,version,version,488,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:71,modifiability,version,versions,71,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:294,modifiability,version,version,294,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:461,modifiability,version,version,461,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:488,modifiability,version,version,488,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:9,reliability,doe,does,9,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:206,usability,behavi,behavior,206,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:349,usability,behavi,behavior,349,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:651,usability,behavi,behaviour,651,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:745,usability,user,user-images,745,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/issues/11191:892,usability,user,user-images,892,"TBrowser does not show TGeo volume names; ### Describe the bug. Recent versions of ROOT's TBrowser on MacOS do not display the geometry tree correctly. In particular, volume names are missing. ### Expected behavior. I expect volume names to be displayed correctly. This is working correctly in version 6.22. ### To Reproduce. Steps to reproduce the behavior:. 1. `root geometryfile.root`. 2. `new TBrowser`. 3. click on the volume hierarchy. ### Setup. 1. ROOT version 6.26 (wrong); ROOT version 6.22 (ok). 4. MacOS. 5. `brew install` or manual compile. ### Additional information:. attaching screenshots demonstrating correct (6.22) and wrong (6.26) behaviour using the same. geometry file. <img width=""272"" alt=""CorrectBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670081-bb573972-3b2c-4e72-9960-4a51e5e6ef96.png"">. <img width=""266"" alt=""WrongBehaviour"" src=""https://user-images.githubusercontent.com/3536753/184670108-781c5318-d3e9-4e15-813f-ecaab4256eee.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11191
https://github.com/root-project/root/pull/11192:25,availability,failur,failures,25,[RF] Fix ASAN build test failures in RooFit; This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11192
https://github.com/root-project/root/pull/11192:89,availability,failur,failures,89,[RF] Fix ASAN build test failures in RooFit; This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11192
https://github.com/root-project/root/pull/11192:14,deployability,build,build,14,[RF] Fix ASAN build test failures in RooFit; This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11192
https://github.com/root-project/root/pull/11192:25,deployability,fail,failures,25,[RF] Fix ASAN build test failures in RooFit; This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11192
https://github.com/root-project/root/pull/11192:78,deployability,build,build,78,[RF] Fix ASAN build test failures in RooFit; This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11192
https://github.com/root-project/root/pull/11192:89,deployability,fail,failures,89,[RF] Fix ASAN build test failures in RooFit; This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11192
https://github.com/root-project/root/pull/11192:25,performance,failur,failures,25,[RF] Fix ASAN build test failures in RooFit; This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11192
https://github.com/root-project/root/pull/11192:89,performance,failur,failures,89,[RF] Fix ASAN build test failures in RooFit; This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11192
https://github.com/root-project/root/pull/11192:25,reliability,fail,failures,25,[RF] Fix ASAN build test failures in RooFit; This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11192
https://github.com/root-project/root/pull/11192:89,reliability,fail,failures,89,[RF] Fix ASAN build test failures in RooFit; This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11192
https://github.com/root-project/root/pull/11192:20,safety,test,test,20,[RF] Fix ASAN build test failures in RooFit; This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11192
https://github.com/root-project/root/pull/11192:84,safety,test,test,84,[RF] Fix ASAN build test failures in RooFit; This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11192
https://github.com/root-project/root/pull/11192:20,testability,test,test,20,[RF] Fix ASAN build test failures in RooFit; This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11192
https://github.com/root-project/root/pull/11192:84,testability,test,test,84,[RF] Fix ASAN build test failures in RooFit; This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11192
https://github.com/root-project/root/pull/11194:377,availability,failur,failures,377,"[RF] Don't forget to call `redirectServersHook()` of the base class ; If one overloads `RooAbsArg::redirectServersHook()`, one also needs to. call the `redirectServersHook()` of the base class. Otherwise, important. things that must be done when redirecting the servers of a `RooAbsReal`. or `RooAbsPdf` for example are not done. In particular, this fixes some ASAN build test failures where the. `RooAbsPdf::_normSet` member was not reset when redirecting servers. because `RooAbsPdf::redirectServersHook()` was not called. A second, minor commit in this PR cleans the includes in `stressRooFit_tests.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11194
https://github.com/root-project/root/pull/11194:366,deployability,build,build,366,"[RF] Don't forget to call `redirectServersHook()` of the base class ; If one overloads `RooAbsArg::redirectServersHook()`, one also needs to. call the `redirectServersHook()` of the base class. Otherwise, important. things that must be done when redirecting the servers of a `RooAbsReal`. or `RooAbsPdf` for example are not done. In particular, this fixes some ASAN build test failures where the. `RooAbsPdf::_normSet` member was not reset when redirecting servers. because `RooAbsPdf::redirectServersHook()` was not called. A second, minor commit in this PR cleans the includes in `stressRooFit_tests.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11194
https://github.com/root-project/root/pull/11194:377,deployability,fail,failures,377,"[RF] Don't forget to call `redirectServersHook()` of the base class ; If one overloads `RooAbsArg::redirectServersHook()`, one also needs to. call the `redirectServersHook()` of the base class. Otherwise, important. things that must be done when redirecting the servers of a `RooAbsReal`. or `RooAbsPdf` for example are not done. In particular, this fixes some ASAN build test failures where the. `RooAbsPdf::_normSet` member was not reset when redirecting servers. because `RooAbsPdf::redirectServersHook()` was not called. A second, minor commit in this PR cleans the includes in `stressRooFit_tests.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11194
https://github.com/root-project/root/pull/11194:377,performance,failur,failures,377,"[RF] Don't forget to call `redirectServersHook()` of the base class ; If one overloads `RooAbsArg::redirectServersHook()`, one also needs to. call the `redirectServersHook()` of the base class. Otherwise, important. things that must be done when redirecting the servers of a `RooAbsReal`. or `RooAbsPdf` for example are not done. In particular, this fixes some ASAN build test failures where the. `RooAbsPdf::_normSet` member was not reset when redirecting servers. because `RooAbsPdf::redirectServersHook()` was not called. A second, minor commit in this PR cleans the includes in `stressRooFit_tests.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11194
https://github.com/root-project/root/pull/11194:377,reliability,fail,failures,377,"[RF] Don't forget to call `redirectServersHook()` of the base class ; If one overloads `RooAbsArg::redirectServersHook()`, one also needs to. call the `redirectServersHook()` of the base class. Otherwise, important. things that must be done when redirecting the servers of a `RooAbsReal`. or `RooAbsPdf` for example are not done. In particular, this fixes some ASAN build test failures where the. `RooAbsPdf::_normSet` member was not reset when redirecting servers. because `RooAbsPdf::redirectServersHook()` was not called. A second, minor commit in this PR cleans the includes in `stressRooFit_tests.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11194
https://github.com/root-project/root/pull/11194:372,safety,test,test,372,"[RF] Don't forget to call `redirectServersHook()` of the base class ; If one overloads `RooAbsArg::redirectServersHook()`, one also needs to. call the `redirectServersHook()` of the base class. Otherwise, important. things that must be done when redirecting the servers of a `RooAbsReal`. or `RooAbsPdf` for example are not done. In particular, this fixes some ASAN build test failures where the. `RooAbsPdf::_normSet` member was not reset when redirecting servers. because `RooAbsPdf::redirectServersHook()` was not called. A second, minor commit in this PR cleans the includes in `stressRooFit_tests.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11194
https://github.com/root-project/root/pull/11194:372,testability,test,test,372,"[RF] Don't forget to call `redirectServersHook()` of the base class ; If one overloads `RooAbsArg::redirectServersHook()`, one also needs to. call the `redirectServersHook()` of the base class. Otherwise, important. things that must be done when redirecting the servers of a `RooAbsReal`. or `RooAbsPdf` for example are not done. In particular, this fixes some ASAN build test failures where the. `RooAbsPdf::_normSet` member was not reset when redirecting servers. because `RooAbsPdf::redirectServersHook()` was not called. A second, minor commit in this PR cleans the includes in `stressRooFit_tests.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11194
https://github.com/root-project/root/pull/11195:80,availability,failur,failures,80,[RF] Fix memory and server redirection issues in BatchMode; This fixes the ASAN failures that are related to the BatchMode. More detail can be found in the commit descriptions. Should be backported to 6.26.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11195
https://github.com/root-project/root/pull/11195:80,deployability,fail,failures,80,[RF] Fix memory and server redirection issues in BatchMode; This fixes the ASAN failures that are related to the BatchMode. More detail can be found in the commit descriptions. Should be backported to 6.26.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11195
https://github.com/root-project/root/pull/11195:49,integrability,Batch,BatchMode,49,[RF] Fix memory and server redirection issues in BatchMode; This fixes the ASAN failures that are related to the BatchMode. More detail can be found in the commit descriptions. Should be backported to 6.26.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11195
https://github.com/root-project/root/pull/11195:113,integrability,Batch,BatchMode,113,[RF] Fix memory and server redirection issues in BatchMode; This fixes the ASAN failures that are related to the BatchMode. More detail can be found in the commit descriptions. Should be backported to 6.26.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11195
https://github.com/root-project/root/pull/11195:9,performance,memor,memory,9,[RF] Fix memory and server redirection issues in BatchMode; This fixes the ASAN failures that are related to the BatchMode. More detail can be found in the commit descriptions. Should be backported to 6.26.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11195
https://github.com/root-project/root/pull/11195:49,performance,Batch,BatchMode,49,[RF] Fix memory and server redirection issues in BatchMode; This fixes the ASAN failures that are related to the BatchMode. More detail can be found in the commit descriptions. Should be backported to 6.26.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11195
https://github.com/root-project/root/pull/11195:80,performance,failur,failures,80,[RF] Fix memory and server redirection issues in BatchMode; This fixes the ASAN failures that are related to the BatchMode. More detail can be found in the commit descriptions. Should be backported to 6.26.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11195
https://github.com/root-project/root/pull/11195:113,performance,Batch,BatchMode,113,[RF] Fix memory and server redirection issues in BatchMode; This fixes the ASAN failures that are related to the BatchMode. More detail can be found in the commit descriptions. Should be backported to 6.26.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11195
https://github.com/root-project/root/pull/11195:80,reliability,fail,failures,80,[RF] Fix memory and server redirection issues in BatchMode; This fixes the ASAN failures that are related to the BatchMode. More detail can be found in the commit descriptions. Should be backported to 6.26.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11195
https://github.com/root-project/root/pull/11195:9,usability,memor,memory,9,[RF] Fix memory and server redirection issues in BatchMode; This fixes the ASAN failures that are related to the BatchMode. More detail can be found in the commit descriptions. Should be backported to 6.26.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11195
https://github.com/root-project/root/pull/11196:170,deployability,version,versioned,170,"Replace fwd decl of json with wrapper type; Since https://github.com/nlohmann/json/pull/3590, the `basic_json` class and the `json` `using`-declaration are located in a ""versioned, ABI-tagged inline namespace"". This makes it impossible to forward declare the type in `REveElement.hxx`. Instead introduce a new struct `REveJsonWrapper` that just wraps a `json` object (after including the full `nlohmann/json.hpp`). As the `struct` is under our control, we can easily forward declare the type and use it for method arguments. Fixes #11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11196
https://github.com/root-project/root/pull/11196:30,integrability,wrap,wrapper,30,"Replace fwd decl of json with wrapper type; Since https://github.com/nlohmann/json/pull/3590, the `basic_json` class and the `json` `using`-declaration are located in a ""versioned, ABI-tagged inline namespace"". This makes it impossible to forward declare the type in `REveElement.hxx`. Instead introduce a new struct `REveJsonWrapper` that just wraps a `json` object (after including the full `nlohmann/json.hpp`). As the `struct` is under our control, we can easily forward declare the type and use it for method arguments. Fixes #11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11196
https://github.com/root-project/root/pull/11196:170,integrability,version,versioned,170,"Replace fwd decl of json with wrapper type; Since https://github.com/nlohmann/json/pull/3590, the `basic_json` class and the `json` `using`-declaration are located in a ""versioned, ABI-tagged inline namespace"". This makes it impossible to forward declare the type in `REveElement.hxx`. Instead introduce a new struct `REveJsonWrapper` that just wraps a `json` object (after including the full `nlohmann/json.hpp`). As the `struct` is under our control, we can easily forward declare the type and use it for method arguments. Fixes #11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11196
https://github.com/root-project/root/pull/11196:345,integrability,wrap,wraps,345,"Replace fwd decl of json with wrapper type; Since https://github.com/nlohmann/json/pull/3590, the `basic_json` class and the `json` `using`-declaration are located in a ""versioned, ABI-tagged inline namespace"". This makes it impossible to forward declare the type in `REveElement.hxx`. Instead introduce a new struct `REveJsonWrapper` that just wraps a `json` object (after including the full `nlohmann/json.hpp`). As the `struct` is under our control, we can easily forward declare the type and use it for method arguments. Fixes #11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11196
https://github.com/root-project/root/pull/11196:30,interoperability,wrapper,wrapper,30,"Replace fwd decl of json with wrapper type; Since https://github.com/nlohmann/json/pull/3590, the `basic_json` class and the `json` `using`-declaration are located in a ""versioned, ABI-tagged inline namespace"". This makes it impossible to forward declare the type in `REveElement.hxx`. Instead introduce a new struct `REveJsonWrapper` that just wraps a `json` object (after including the full `nlohmann/json.hpp`). As the `struct` is under our control, we can easily forward declare the type and use it for method arguments. Fixes #11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11196
https://github.com/root-project/root/pull/11196:170,modifiability,version,versioned,170,"Replace fwd decl of json with wrapper type; Since https://github.com/nlohmann/json/pull/3590, the `basic_json` class and the `json` `using`-declaration are located in a ""versioned, ABI-tagged inline namespace"". This makes it impossible to forward declare the type in `REveElement.hxx`. Instead introduce a new struct `REveJsonWrapper` that just wraps a `json` object (after including the full `nlohmann/json.hpp`). As the `struct` is under our control, we can easily forward declare the type and use it for method arguments. Fixes #11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11196
https://github.com/root-project/root/pull/11196:444,security,control,control,444,"Replace fwd decl of json with wrapper type; Since https://github.com/nlohmann/json/pull/3590, the `basic_json` class and the `json` `using`-declaration are located in a ""versioned, ABI-tagged inline namespace"". This makes it impossible to forward declare the type in `REveElement.hxx`. Instead introduce a new struct `REveJsonWrapper` that just wraps a `json` object (after including the full `nlohmann/json.hpp`). As the `struct` is under our control, we can easily forward declare the type and use it for method arguments. Fixes #11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11196
https://github.com/root-project/root/pull/11196:444,testability,control,control,444,"Replace fwd decl of json with wrapper type; Since https://github.com/nlohmann/json/pull/3590, the `basic_json` class and the `json` `using`-declaration are located in a ""versioned, ABI-tagged inline namespace"". This makes it impossible to forward declare the type in `REveElement.hxx`. Instead introduce a new struct `REveJsonWrapper` that just wraps a `json` object (after including the full `nlohmann/json.hpp`). As the `struct` is under our control, we can easily forward declare the type and use it for method arguments. Fixes #11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11196
https://github.com/root-project/root/issues/11197:290,availability,down,downloadable,290,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:928,availability,consist,consistent,928,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:0,deployability,Build,Build,0,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:13,deployability,releas,release,13,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:26,deployability,version,version,26,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:34,deployability,releas,release,34,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:147,deployability,releas,released,147,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:184,deployability,releas,release-notes,184,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:203,deployability,releas,release-,203,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:277,deployability,releas,release,277,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:303,deployability,build,build,303,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:321,deployability,releas,release,321,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:383,deployability,releas,releases,383,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:454,deployability,releas,releases,454,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:581,deployability,releas,release,581,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:617,deployability,version,version,617,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:666,deployability,releas,release,666,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:679,deployability,build,build,679,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:824,deployability,build,build,824,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:246,energy efficiency,current,currently,246,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:26,integrability,version,version,26,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:617,integrability,version,version,617,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:812,integrability,pub,publish,812,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:705,interoperability,distribut,distributions,705,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:849,interoperability,distribut,distributions,849,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:26,modifiability,version,version,26,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:617,modifiability,version,version,617,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:490,reliability,doe,does,490,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:888,usability,user,users,888,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/issues/11197:928,usability,consist,consistent,928,"Build github release into version release procedure; ### Is your feature request related to a problem? Please describe. Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like. The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered. Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11197
https://github.com/root-project/root/pull/11198:29,availability,Operat,Operator,29,[GSOC][TMVA][SOFIE] Max ONNX Operator implemented with the corresponding unit tests; # This Pull request:. Adds the Max ONNX Operator and the corresponding unit tests to validate the code. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11198
https://github.com/root-project/root/pull/11198:125,availability,Operat,Operator,125,[GSOC][TMVA][SOFIE] Max ONNX Operator implemented with the corresponding unit tests; # This Pull request:. Adds the Max ONNX Operator and the corresponding unit tests to validate the code. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11198
https://github.com/root-project/root/pull/11198:78,safety,test,tests,78,[GSOC][TMVA][SOFIE] Max ONNX Operator implemented with the corresponding unit tests; # This Pull request:. Adds the Max ONNX Operator and the corresponding unit tests to validate the code. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11198
https://github.com/root-project/root/pull/11198:161,safety,test,tests,161,[GSOC][TMVA][SOFIE] Max ONNX Operator implemented with the corresponding unit tests; # This Pull request:. Adds the Max ONNX Operator and the corresponding unit tests to validate the code. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11198
https://github.com/root-project/root/pull/11198:170,safety,valid,validate,170,[GSOC][TMVA][SOFIE] Max ONNX Operator implemented with the corresponding unit tests; # This Pull request:. Adds the Max ONNX Operator and the corresponding unit tests to validate the code. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11198
https://github.com/root-project/root/pull/11198:195,safety,test,tested,195,[GSOC][TMVA][SOFIE] Max ONNX Operator implemented with the corresponding unit tests; # This Pull request:. Adds the Max ONNX Operator and the corresponding unit tests to validate the code. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11198
https://github.com/root-project/root/pull/11198:170,security,validat,validate,170,[GSOC][TMVA][SOFIE] Max ONNX Operator implemented with the corresponding unit tests; # This Pull request:. Adds the Max ONNX Operator and the corresponding unit tests to validate the code. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11198
https://github.com/root-project/root/pull/11198:73,testability,unit,unit,73,[GSOC][TMVA][SOFIE] Max ONNX Operator implemented with the corresponding unit tests; # This Pull request:. Adds the Max ONNX Operator and the corresponding unit tests to validate the code. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11198
https://github.com/root-project/root/pull/11198:78,testability,test,tests,78,[GSOC][TMVA][SOFIE] Max ONNX Operator implemented with the corresponding unit tests; # This Pull request:. Adds the Max ONNX Operator and the corresponding unit tests to validate the code. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11198
https://github.com/root-project/root/pull/11198:156,testability,unit,unit,156,[GSOC][TMVA][SOFIE] Max ONNX Operator implemented with the corresponding unit tests; # This Pull request:. Adds the Max ONNX Operator and the corresponding unit tests to validate the code. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11198
https://github.com/root-project/root/pull/11198:161,testability,test,tests,161,[GSOC][TMVA][SOFIE] Max ONNX Operator implemented with the corresponding unit tests; # This Pull request:. Adds the Max ONNX Operator and the corresponding unit tests to validate the code. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11198
https://github.com/root-project/root/pull/11198:195,testability,test,tested,195,[GSOC][TMVA][SOFIE] Max ONNX Operator implemented with the corresponding unit tests; # This Pull request:. Adds the Max ONNX Operator and the corresponding unit tests to validate the code. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11198
https://github.com/root-project/root/pull/11202:18,deployability,modul,module,18,Re-introduce json module; includes commit from https://github.com/root-project/root/pull/11201,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11202
https://github.com/root-project/root/pull/11202:18,modifiability,modul,module,18,Re-introduce json module; includes commit from https://github.com/root-project/root/pull/11201,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11202
https://github.com/root-project/root/pull/11202:18,safety,modul,module,18,Re-introduce json module; includes commit from https://github.com/root-project/root/pull/11201,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11202
https://github.com/root-project/root/pull/11203:159,reliability,doe,does,159,"[DF] Use strings instead of html in SaveGraph labels; HTML cannot recognize some special symbols, which are valid tree/chain/action names. Hence SaveGraph now does not put labels in HTML, but instead uses strings. Fix #11173.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11203
https://github.com/root-project/root/pull/11203:108,safety,valid,valid,108,"[DF] Use strings instead of html in SaveGraph labels; HTML cannot recognize some special symbols, which are valid tree/chain/action names. Hence SaveGraph now does not put labels in HTML, but instead uses strings. Fix #11173.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11203
https://github.com/root-project/root/pull/11204:51,availability,error,error,51,"[RF] Remove FillColor command for single curves in error band plots; When plotting the single curves in `RooAbsReal::plotOnWithErrorBand()`,. the `""FillColor""` command should be removed because it has no effect on. plotting single curves and would cause warnings, as can be seen when. running the `rf610_visualerror` tutorial. Closes https://github.com/root-project/root/issues/9859. This PR includes two other tangentially related commits for general code improvement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11204
https://github.com/root-project/root/pull/11204:51,performance,error,error,51,"[RF] Remove FillColor command for single curves in error band plots; When plotting the single curves in `RooAbsReal::plotOnWithErrorBand()`,. the `""FillColor""` command should be removed because it has no effect on. plotting single curves and would cause warnings, as can be seen when. running the `rf610_visualerror` tutorial. Closes https://github.com/root-project/root/issues/9859. This PR includes two other tangentially related commits for general code improvement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11204
https://github.com/root-project/root/pull/11204:51,safety,error,error,51,"[RF] Remove FillColor command for single curves in error band plots; When plotting the single curves in `RooAbsReal::plotOnWithErrorBand()`,. the `""FillColor""` command should be removed because it has no effect on. plotting single curves and would cause warnings, as can be seen when. running the `rf610_visualerror` tutorial. Closes https://github.com/root-project/root/issues/9859. This PR includes two other tangentially related commits for general code improvement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11204
https://github.com/root-project/root/pull/11204:22,usability,command,command,22,"[RF] Remove FillColor command for single curves in error band plots; When plotting the single curves in `RooAbsReal::plotOnWithErrorBand()`,. the `""FillColor""` command should be removed because it has no effect on. plotting single curves and would cause warnings, as can be seen when. running the `rf610_visualerror` tutorial. Closes https://github.com/root-project/root/issues/9859. This PR includes two other tangentially related commits for general code improvement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11204
https://github.com/root-project/root/pull/11204:51,usability,error,error,51,"[RF] Remove FillColor command for single curves in error band plots; When plotting the single curves in `RooAbsReal::plotOnWithErrorBand()`,. the `""FillColor""` command should be removed because it has no effect on. plotting single curves and would cause warnings, as can be seen when. running the `rf610_visualerror` tutorial. Closes https://github.com/root-project/root/issues/9859. This PR includes two other tangentially related commits for general code improvement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11204
https://github.com/root-project/root/pull/11204:160,usability,command,command,160,"[RF] Remove FillColor command for single curves in error band plots; When plotting the single curves in `RooAbsReal::plotOnWithErrorBand()`,. the `""FillColor""` command should be removed because it has no effect on. plotting single curves and would cause warnings, as can be seen when. running the `rf610_visualerror` tutorial. Closes https://github.com/root-project/root/issues/9859. This PR includes two other tangentially related commits for general code improvement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11204
https://github.com/root-project/root/pull/11204:327,usability,Close,Closes,327,"[RF] Remove FillColor command for single curves in error band plots; When plotting the single curves in `RooAbsReal::plotOnWithErrorBand()`,. the `""FillColor""` command should be removed because it has no effect on. plotting single curves and would cause warnings, as can be seen when. running the `rf610_visualerror` tutorial. Closes https://github.com/root-project/root/issues/9859. This PR includes two other tangentially related commits for general code improvement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11204
https://github.com/root-project/root/pull/11205:31,availability,avail,available,31,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:511,availability,avail,available,511,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:42,deployability,Version,Version,42,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:86,deployability,version,versioned,86,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:257,deployability,version,version,257,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:363,deployability,instal,installed,363,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:379,deployability,patch,patch,379,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:385,deployability,version,version,385,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:414,deployability,version,versions,414,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:484,deployability,instal,installed,484,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:42,integrability,Version,Version,42,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:86,integrability,version,versioned,86,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:257,integrability,version,version,257,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:385,integrability,version,version,385,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:414,integrability,version,versions,414,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:42,modifiability,Version,Version,42,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:86,modifiability,version,versioned,86,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:257,modifiability,version,version,257,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:385,modifiability,version,version,385,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:414,modifiability,version,versions,414,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:31,reliability,availab,available,31,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:511,reliability,availab,available,511,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:31,safety,avail,available,31,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:379,safety,patch,patch,379,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:511,safety,avail,available,511,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:31,security,availab,available,31,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:379,security,patch,patch,379,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11205:511,security,availab,available,511,"[eve7] Include json_fwd.hpp if available; Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For. earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11205
https://github.com/root-project/root/pull/11206:13,integrability,configur,configure,13,"[webgui] let configure default browser to used with web widgets; When specified `root --web=default` or `root --web=browser`, default web browser will be used to open web widgets. web display can be configured with `WebGui.Display` rootrc parameter or `ROOT_WEBDISPLAY` environment variable. Improve webgui documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11206
https://github.com/root-project/root/pull/11206:199,integrability,configur,configured,199,"[webgui] let configure default browser to used with web widgets; When specified `root --web=default` or `root --web=browser`, default web browser will be used to open web widgets. web display can be configured with `WebGui.Display` rootrc parameter or `ROOT_WEBDISPLAY` environment variable. Improve webgui documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11206
https://github.com/root-project/root/pull/11206:70,interoperability,specif,specified,70,"[webgui] let configure default browser to used with web widgets; When specified `root --web=default` or `root --web=browser`, default web browser will be used to open web widgets. web display can be configured with `WebGui.Display` rootrc parameter or `ROOT_WEBDISPLAY` environment variable. Improve webgui documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11206
https://github.com/root-project/root/pull/11206:13,modifiability,configur,configure,13,"[webgui] let configure default browser to used with web widgets; When specified `root --web=default` or `root --web=browser`, default web browser will be used to open web widgets. web display can be configured with `WebGui.Display` rootrc parameter or `ROOT_WEBDISPLAY` environment variable. Improve webgui documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11206
https://github.com/root-project/root/pull/11206:199,modifiability,configur,configured,199,"[webgui] let configure default browser to used with web widgets; When specified `root --web=default` or `root --web=browser`, default web browser will be used to open web widgets. web display can be configured with `WebGui.Display` rootrc parameter or `ROOT_WEBDISPLAY` environment variable. Improve webgui documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11206
https://github.com/root-project/root/pull/11206:239,modifiability,paramet,parameter,239,"[webgui] let configure default browser to used with web widgets; When specified `root --web=default` or `root --web=browser`, default web browser will be used to open web widgets. web display can be configured with `WebGui.Display` rootrc parameter or `ROOT_WEBDISPLAY` environment variable. Improve webgui documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11206
https://github.com/root-project/root/pull/11206:282,modifiability,variab,variable,282,"[webgui] let configure default browser to used with web widgets; When specified `root --web=default` or `root --web=browser`, default web browser will be used to open web widgets. web display can be configured with `WebGui.Display` rootrc parameter or `ROOT_WEBDISPLAY` environment variable. Improve webgui documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11206
https://github.com/root-project/root/pull/11206:13,security,configur,configure,13,"[webgui] let configure default browser to used with web widgets; When specified `root --web=default` or `root --web=browser`, default web browser will be used to open web widgets. web display can be configured with `WebGui.Display` rootrc parameter or `ROOT_WEBDISPLAY` environment variable. Improve webgui documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11206
https://github.com/root-project/root/pull/11206:199,security,configur,configured,199,"[webgui] let configure default browser to used with web widgets; When specified `root --web=default` or `root --web=browser`, default web browser will be used to open web widgets. web display can be configured with `WebGui.Display` rootrc parameter or `ROOT_WEBDISPLAY` environment variable. Improve webgui documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11206
https://github.com/root-project/root/pull/11206:56,usability,widget,widgets,56,"[webgui] let configure default browser to used with web widgets; When specified `root --web=default` or `root --web=browser`, default web browser will be used to open web widgets. web display can be configured with `WebGui.Display` rootrc parameter or `ROOT_WEBDISPLAY` environment variable. Improve webgui documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11206
https://github.com/root-project/root/pull/11206:171,usability,widget,widgets,171,"[webgui] let configure default browser to used with web widgets; When specified `root --web=default` or `root --web=browser`, default web browser will be used to open web widgets. web display can be configured with `WebGui.Display` rootrc parameter or `ROOT_WEBDISPLAY` environment variable. Improve webgui documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11206
https://github.com/root-project/root/pull/11206:307,usability,document,documentation,307,"[webgui] let configure default browser to used with web widgets; When specified `root --web=default` or `root --web=browser`, default web browser will be used to open web widgets. web display can be configured with `WebGui.Display` rootrc parameter or `ROOT_WEBDISPLAY` environment variable. Improve webgui documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11206
https://github.com/root-project/root/issues/11207:1006,availability,error,error,1006,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1213,availability,error,error,1213,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1403,availability,state,state,1403,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:320,deployability,build,build,320,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:47,integrability,sub,sub-branches,47,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:602,integrability,sub,substitutions,602,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:785,integrability,transform,transform,785,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:914,integrability,Filter,Filter,914,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1353,integrability,event,event,1353,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1403,integrability,state,state,1403,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1510,integrability,sub,substitution,1510,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1575,integrability,sub,substitute,1575,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:785,interoperability,transform,transform,785,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1610,modifiability,variab,variable,1610,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1006,performance,error,error,1006,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1213,performance,error,error,1213,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1243,performance,time,time,1243,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1496,performance,perform,perform,1496,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:363,safety,test,test,363,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:893,safety,valid,valid,893,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1006,safety,error,error,1006,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1213,safety,error,error,1213,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1448,security,sign,signal,1448,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:363,testability,test,test,363,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:391,testability,mock,mock,391,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:9,usability,interact,interaction,9,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1006,usability,error,error,1006,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1213,usability,error,error,1213,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1283,usability,indicat,indicate,1283,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/issues/11207:1496,usability,perform,perform,1496,"[DF] Bad interaction between `Alias` and TTree sub-branches; First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTree.h>. int main() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. // This is a weird way to build a tree, but for the purposes of this test. // we we just need to mock a TTree with branches ""topbranch"" and. // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch"". // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below). t.Branch(""topbranch"", &x);. t.Branch(""topbranch"", &x, ""a/I:b/I"");. t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");. // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,. // which is not valid C++. return df.Filter(""alias.a == 42"").Count().GetValue();. }. ```. which yields:. ```. input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'. auto func0(pair<int,int>& var0){return var0.a == 42. ~~~~ ^. terminate called after throwing an instance of 'std::runtime_error'. what():. RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort). ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11207
https://github.com/root-project/root/pull/11208:586,deployability,updat,updation,586,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:142,energy efficiency,model,models,142,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:305,integrability,graph-bas,graph-based,305,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:491,integrability,interfac,interface,491,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:436,interoperability,architectur,architectures,436,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:491,interoperability,interfac,interface,491,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:491,modifiability,interfac,interface,491,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:52,performance,Network,Networks,52,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:97,performance,perform,performing,97,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:134,performance,Network,Network,134,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:369,safety,input,inputs,369,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:586,safety,updat,updation,586,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:800,safety,Test,Tests,800,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:880,safety,Test,Tests,880,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:52,security,Network,Networks,52,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:134,security,Network,Network,134,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:142,security,model,models,142,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:586,security,updat,updation,586,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:800,testability,Test,Tests,800,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:880,testability,Test,Tests,880,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:14,usability,Support,Support,14,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:85,usability,support,support,85,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:97,usability,perform,performing,97,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:369,usability,input,inputs,369,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:463,usability,user,user,463,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11208:468,usability,custom,customized,468,"[TMVA][SOFIE] Support for Inference of Graph Neural Networks; This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**. - [x] RModel_GNN class. - [x] RFunction class for graph-based functions. - [x] GraphInput structure for providing inputs to the graph. - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface). - [x] Initialize & Generate function for RModel_GNN class. - [x] RFunction_MLP for updation. - [x] RFunction_Mean for aggregate. - [x] RFunction_Sum for aggregate. - [x] RModel_GraphIndependent class. - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions). - [x] Tests for RModel_GNN and RModel_GraphIndependent. - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11208
https://github.com/root-project/root/pull/11209:266,integrability,interfac,interface,266,"[math][fit] Fix Fitter class for temporary FitData (issue #11154); # This Pull request:. This PR implements the correct copy constructors for the FitData classes and, when the user provides to teh Fitter, a reference to a Fit data classes, the data are copied. . An interface using a `shared_ptr` to the data exists to avoid copying. . This PR fixes #11154.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11209
https://github.com/root-project/root/pull/11209:266,interoperability,interfac,interface,266,"[math][fit] Fix Fitter class for temporary FitData (issue #11154); # This Pull request:. This PR implements the correct copy constructors for the FitData classes and, when the user provides to teh Fitter, a reference to a Fit data classes, the data are copied. . An interface using a `shared_ptr` to the data exists to avoid copying. . This PR fixes #11154.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11209
https://github.com/root-project/root/pull/11209:266,modifiability,interfac,interface,266,"[math][fit] Fix Fitter class for temporary FitData (issue #11154); # This Pull request:. This PR implements the correct copy constructors for the FitData classes and, when the user provides to teh Fitter, a reference to a Fit data classes, the data are copied. . An interface using a `shared_ptr` to the data exists to avoid copying. . This PR fixes #11154.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11209
https://github.com/root-project/root/pull/11209:319,safety,avoid,avoid,319,"[math][fit] Fix Fitter class for temporary FitData (issue #11154); # This Pull request:. This PR implements the correct copy constructors for the FitData classes and, when the user provides to teh Fitter, a reference to a Fit data classes, the data are copied. . An interface using a `shared_ptr` to the data exists to avoid copying. . This PR fixes #11154.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11209
https://github.com/root-project/root/pull/11209:176,usability,user,user,176,"[math][fit] Fix Fitter class for temporary FitData (issue #11154); # This Pull request:. This PR implements the correct copy constructors for the FitData classes and, when the user provides to teh Fitter, a reference to a Fit data classes, the data are copied. . An interface using a `shared_ptr` to the data exists to avoid copying. . This PR fixes #11154.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11209
https://github.com/root-project/root/pull/11210:9,deployability,updat,update,9,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11210:19,deployability,version,version,19,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11210:613,deployability,Upgrad,Upgrade,613,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11210:630,deployability,version,version,630,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11210:19,integrability,version,version,19,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11210:630,integrability,version,version,630,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11210:19,modifiability,version,version,19,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11210:613,modifiability,Upgrad,Upgrade,613,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11210:630,modifiability,version,version,630,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11210:9,safety,updat,update,9,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11210:9,security,updat,update,9,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11210:738,security,modif,modify,738,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11210:478,testability,hook,hook,478,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11210:770,testability,context,context,770,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11210:352,usability,Support,Support,352,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11210:778,usability,menu,menu,778,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11210:793,usability,menu,menu,793,"[jsroot] update to version 7.2.0 with few extra fixes; ## Changes in dev. 1. Force MathJax rendering when `\` symbol is found (243). 2. Fix - use alfa channel for TColor when intended. ## Changes in 7.2.0. 1. Use TAxis attributes in lego plots - ticks/labels/title colors, sizes, offsets. 2. Correctly resize stats box when number of lines changes. 3. Support JSROOT usage with yarn and webpack. 4. Provide `FileProxy` class to let read ROOT files from arbitrary place. 5. Let 'hook' save file functionality to use alternative method to store image files. 6. Implement 'tabs' layout for objects display (238). 7. Upgrade d3.js to version 7.6.1. 8. Fix - adjust pad margins when moving palette and frame. ## Changes in 7.1.1. 1. Fix - let modify node visibility bits via context menu. 2. Fix - menu position adjusting. 3. Fix - tree_draw.js example, export treeDraw function from main.mjs. 4. Fix - TH3 scatter plot with large number of bins converted to box2. 5. Fix - create geo css entries also when expand object in hierarchy (240).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11210
https://github.com/root-project/root/pull/11211:1124,deployability,updat,updated,1124,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:1310,deployability,updat,updated,1310,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:1495,deployability,updat,updated,1495,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:744,energy efficiency,current,current,744,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:894,energy efficiency,current,current,894,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:564,integrability,event,event,564,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:619,integrability,event,event,619,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:801,integrability,event,event,801,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:667,interoperability,coordinat,coordinates,667,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:989,performance,perform,performed,989,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:1124,safety,updat,updated,1124,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:1310,safety,updat,updated,1310,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:1465,safety,test,tested,1465,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:1495,safety,updat,updated,1495,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:1124,security,updat,updated,1124,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:1310,security,updat,updated,1310,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:1495,security,updat,updated,1495,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:1465,testability,test,tested,1465,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/pull/11211:989,usability,perform,performed,989,"[RF] Enable vectorized first order interpolation for weight evaluation; With the function `RooDataHist::interpolateLinear` it is now possible to use. `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one. dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line. between two neighboring bin centers by solving a system of two linear. equations. With the coefficients of the straight line, the interpolated weight. for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. neighboring bin to the left. If the event is to the right of the bin center,. the weight is found by inteperpolating between the current bin center and the. one to the right. For the first and last bin, the interpolation is performed. either by mirroring the histogram outside its boundaries, or by applying cdf. boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateLinear()` when the interpolation order is one. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they call `RooDatahist::weights()` in the cases. where the histogram is one dimensional and the interpolation order is zero or. one. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11211
https://github.com/root-project/root/issues/11212:21,energy efficiency,draw,drawn,21,"[TH1] Wrong data are drawn when gPad->SetLogx is combined with Draw(""same""); ### Describe the bug. A TH1 is drawn incorrectly when combining `gPad->SetLogX()` with `TH1::Draw(""same"")` and zooming. I think it is a critical bug because 'wrong data' are displayed silently. It's not just a zooming issue. The histogram is shifted by one bin and thus if you put the event status bar, you would get wrong coordinates for your data. ### Expected behavior. No wrong (shifted) data are displayed when combining `SetLogX` with `Draw`. ### To Reproduce. See here: https://root-forum.cern.ch/t/undesired-behavior-with-setrangeuser-and-draw-same-bug/51231. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11212
https://github.com/root-project/root/issues/11212:63,energy efficiency,Draw,Draw,63,"[TH1] Wrong data are drawn when gPad->SetLogx is combined with Draw(""same""); ### Describe the bug. A TH1 is drawn incorrectly when combining `gPad->SetLogX()` with `TH1::Draw(""same"")` and zooming. I think it is a critical bug because 'wrong data' are displayed silently. It's not just a zooming issue. The histogram is shifted by one bin and thus if you put the event status bar, you would get wrong coordinates for your data. ### Expected behavior. No wrong (shifted) data are displayed when combining `SetLogX` with `Draw`. ### To Reproduce. See here: https://root-forum.cern.ch/t/undesired-behavior-with-setrangeuser-and-draw-same-bug/51231. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11212
https://github.com/root-project/root/issues/11212:108,energy efficiency,draw,drawn,108,"[TH1] Wrong data are drawn when gPad->SetLogx is combined with Draw(""same""); ### Describe the bug. A TH1 is drawn incorrectly when combining `gPad->SetLogX()` with `TH1::Draw(""same"")` and zooming. I think it is a critical bug because 'wrong data' are displayed silently. It's not just a zooming issue. The histogram is shifted by one bin and thus if you put the event status bar, you would get wrong coordinates for your data. ### Expected behavior. No wrong (shifted) data are displayed when combining `SetLogX` with `Draw`. ### To Reproduce. See here: https://root-forum.cern.ch/t/undesired-behavior-with-setrangeuser-and-draw-same-bug/51231. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11212
https://github.com/root-project/root/issues/11212:170,energy efficiency,Draw,Draw,170,"[TH1] Wrong data are drawn when gPad->SetLogx is combined with Draw(""same""); ### Describe the bug. A TH1 is drawn incorrectly when combining `gPad->SetLogX()` with `TH1::Draw(""same"")` and zooming. I think it is a critical bug because 'wrong data' are displayed silently. It's not just a zooming issue. The histogram is shifted by one bin and thus if you put the event status bar, you would get wrong coordinates for your data. ### Expected behavior. No wrong (shifted) data are displayed when combining `SetLogX` with `Draw`. ### To Reproduce. See here: https://root-forum.cern.ch/t/undesired-behavior-with-setrangeuser-and-draw-same-bug/51231. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11212
https://github.com/root-project/root/issues/11212:519,energy efficiency,Draw,Draw,519,"[TH1] Wrong data are drawn when gPad->SetLogx is combined with Draw(""same""); ### Describe the bug. A TH1 is drawn incorrectly when combining `gPad->SetLogX()` with `TH1::Draw(""same"")` and zooming. I think it is a critical bug because 'wrong data' are displayed silently. It's not just a zooming issue. The histogram is shifted by one bin and thus if you put the event status bar, you would get wrong coordinates for your data. ### Expected behavior. No wrong (shifted) data are displayed when combining `SetLogX` with `Draw`. ### To Reproduce. See here: https://root-forum.cern.ch/t/undesired-behavior-with-setrangeuser-and-draw-same-bug/51231. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11212
https://github.com/root-project/root/issues/11212:624,energy efficiency,draw,draw-same-bug,624,"[TH1] Wrong data are drawn when gPad->SetLogx is combined with Draw(""same""); ### Describe the bug. A TH1 is drawn incorrectly when combining `gPad->SetLogX()` with `TH1::Draw(""same"")` and zooming. I think it is a critical bug because 'wrong data' are displayed silently. It's not just a zooming issue. The histogram is shifted by one bin and thus if you put the event status bar, you would get wrong coordinates for your data. ### Expected behavior. No wrong (shifted) data are displayed when combining `SetLogX` with `Draw`. ### To Reproduce. See here: https://root-forum.cern.ch/t/undesired-behavior-with-setrangeuser-and-draw-same-bug/51231. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11212
https://github.com/root-project/root/issues/11212:362,integrability,event,event,362,"[TH1] Wrong data are drawn when gPad->SetLogx is combined with Draw(""same""); ### Describe the bug. A TH1 is drawn incorrectly when combining `gPad->SetLogX()` with `TH1::Draw(""same"")` and zooming. I think it is a critical bug because 'wrong data' are displayed silently. It's not just a zooming issue. The histogram is shifted by one bin and thus if you put the event status bar, you would get wrong coordinates for your data. ### Expected behavior. No wrong (shifted) data are displayed when combining `SetLogX` with `Draw`. ### To Reproduce. See here: https://root-forum.cern.ch/t/undesired-behavior-with-setrangeuser-and-draw-same-bug/51231. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11212
https://github.com/root-project/root/issues/11212:400,interoperability,coordinat,coordinates,400,"[TH1] Wrong data are drawn when gPad->SetLogx is combined with Draw(""same""); ### Describe the bug. A TH1 is drawn incorrectly when combining `gPad->SetLogX()` with `TH1::Draw(""same"")` and zooming. I think it is a critical bug because 'wrong data' are displayed silently. It's not just a zooming issue. The histogram is shifted by one bin and thus if you put the event status bar, you would get wrong coordinates for your data. ### Expected behavior. No wrong (shifted) data are displayed when combining `SetLogX` with `Draw`. ### To Reproduce. See here: https://root-forum.cern.ch/t/undesired-behavior-with-setrangeuser-and-draw-same-bug/51231. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11212
https://github.com/root-project/root/issues/11212:802,security,Team,Team,802,"[TH1] Wrong data are drawn when gPad->SetLogx is combined with Draw(""same""); ### Describe the bug. A TH1 is drawn incorrectly when combining `gPad->SetLogX()` with `TH1::Draw(""same"")` and zooming. I think it is a critical bug because 'wrong data' are displayed silently. It's not just a zooming issue. The histogram is shifted by one bin and thus if you put the event status bar, you would get wrong coordinates for your data. ### Expected behavior. No wrong (shifted) data are displayed when combining `SetLogX` with `Draw`. ### To Reproduce. See here: https://root-forum.cern.ch/t/undesired-behavior-with-setrangeuser-and-draw-same-bug/51231. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11212
https://github.com/root-project/root/issues/11212:368,usability,statu,status,368,"[TH1] Wrong data are drawn when gPad->SetLogx is combined with Draw(""same""); ### Describe the bug. A TH1 is drawn incorrectly when combining `gPad->SetLogX()` with `TH1::Draw(""same"")` and zooming. I think it is a critical bug because 'wrong data' are displayed silently. It's not just a zooming issue. The histogram is shifted by one bin and thus if you put the event status bar, you would get wrong coordinates for your data. ### Expected behavior. No wrong (shifted) data are displayed when combining `SetLogX` with `Draw`. ### To Reproduce. See here: https://root-forum.cern.ch/t/undesired-behavior-with-setrangeuser-and-draw-same-bug/51231. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11212
https://github.com/root-project/root/issues/11212:440,usability,behavi,behavior,440,"[TH1] Wrong data are drawn when gPad->SetLogx is combined with Draw(""same""); ### Describe the bug. A TH1 is drawn incorrectly when combining `gPad->SetLogX()` with `TH1::Draw(""same"")` and zooming. I think it is a critical bug because 'wrong data' are displayed silently. It's not just a zooming issue. The histogram is shifted by one bin and thus if you put the event status bar, you would get wrong coordinates for your data. ### Expected behavior. No wrong (shifted) data are displayed when combining `SetLogX` with `Draw`. ### To Reproduce. See here: https://root-forum.cern.ch/t/undesired-behavior-with-setrangeuser-and-draw-same-bug/51231. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11212
https://github.com/root-project/root/issues/11212:593,usability,behavi,behavior-with-setrangeuser-and-draw-same-bug,593,"[TH1] Wrong data are drawn when gPad->SetLogx is combined with Draw(""same""); ### Describe the bug. A TH1 is drawn incorrectly when combining `gPad->SetLogX()` with `TH1::Draw(""same"")` and zooming. I think it is a critical bug because 'wrong data' are displayed silently. It's not just a zooming issue. The histogram is shifted by one bin and thus if you put the event status bar, you would get wrong coordinates for your data. ### Expected behavior. No wrong (shifted) data are displayed when combining `SetLogX` with `Draw`. ### To Reproduce. See here: https://root-forum.cern.ch/t/undesired-behavior-with-setrangeuser-and-draw-same-bug/51231. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11212
https://github.com/root-project/root/issues/11212:1007,usability,help,help,1007,"[TH1] Wrong data are drawn when gPad->SetLogx is combined with Draw(""same""); ### Describe the bug. A TH1 is drawn incorrectly when combining `gPad->SetLogX()` with `TH1::Draw(""same"")` and zooming. I think it is a critical bug because 'wrong data' are displayed silently. It's not just a zooming issue. The histogram is shifted by one bin and thus if you put the event status bar, you would get wrong coordinates for your data. ### Expected behavior. No wrong (shifted) data are displayed when combining `SetLogX` with `Draw`. ### To Reproduce. See here: https://root-forum.cern.ch/t/undesired-behavior-with-setrangeuser-and-draw-same-bug/51231. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |. | From heads/master@v6-25-01-2870-gdac9b6398d |. | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11212
https://github.com/root-project/root/pull/11213:60,interoperability,specif,specified,60,"[webgui] introduce `WebGui.OnetimeKey` rootrc parameter; If specified, enforce unique key every time client connect to. web window. Once key used, it is not possible to use it again for reconnect. If one wants to connect to window again, one should. call RWebWindow::Show() method again. Now parameter is off, but once tested - will be enabled by default. This should significantly increase security for web applications. Fix problem with random seed for key generation . Add warning when browser on remote node is started - by checking DISPLAY variable .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11213
https://github.com/root-project/root/pull/11213:46,modifiability,paramet,parameter,46,"[webgui] introduce `WebGui.OnetimeKey` rootrc parameter; If specified, enforce unique key every time client connect to. web window. Once key used, it is not possible to use it again for reconnect. If one wants to connect to window again, one should. call RWebWindow::Show() method again. Now parameter is off, but once tested - will be enabled by default. This should significantly increase security for web applications. Fix problem with random seed for key generation . Add warning when browser on remote node is started - by checking DISPLAY variable .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11213
https://github.com/root-project/root/pull/11213:292,modifiability,paramet,parameter,292,"[webgui] introduce `WebGui.OnetimeKey` rootrc parameter; If specified, enforce unique key every time client connect to. web window. Once key used, it is not possible to use it again for reconnect. If one wants to connect to window again, one should. call RWebWindow::Show() method again. Now parameter is off, but once tested - will be enabled by default. This should significantly increase security for web applications. Fix problem with random seed for key generation . Add warning when browser on remote node is started - by checking DISPLAY variable .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11213
https://github.com/root-project/root/pull/11213:545,modifiability,variab,variable,545,"[webgui] introduce `WebGui.OnetimeKey` rootrc parameter; If specified, enforce unique key every time client connect to. web window. Once key used, it is not possible to use it again for reconnect. If one wants to connect to window again, one should. call RWebWindow::Show() method again. Now parameter is off, but once tested - will be enabled by default. This should significantly increase security for web applications. Fix problem with random seed for key generation . Add warning when browser on remote node is started - by checking DISPLAY variable .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11213
https://github.com/root-project/root/pull/11213:96,performance,time,time,96,"[webgui] introduce `WebGui.OnetimeKey` rootrc parameter; If specified, enforce unique key every time client connect to. web window. Once key used, it is not possible to use it again for reconnect. If one wants to connect to window again, one should. call RWebWindow::Show() method again. Now parameter is off, but once tested - will be enabled by default. This should significantly increase security for web applications. Fix problem with random seed for key generation . Add warning when browser on remote node is started - by checking DISPLAY variable .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11213
https://github.com/root-project/root/pull/11213:319,safety,test,tested,319,"[webgui] introduce `WebGui.OnetimeKey` rootrc parameter; If specified, enforce unique key every time client connect to. web window. Once key used, it is not possible to use it again for reconnect. If one wants to connect to window again, one should. call RWebWindow::Show() method again. Now parameter is off, but once tested - will be enabled by default. This should significantly increase security for web applications. Fix problem with random seed for key generation . Add warning when browser on remote node is started - by checking DISPLAY variable .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11213
https://github.com/root-project/root/pull/11213:368,security,sign,significantly,368,"[webgui] introduce `WebGui.OnetimeKey` rootrc parameter; If specified, enforce unique key every time client connect to. web window. Once key used, it is not possible to use it again for reconnect. If one wants to connect to window again, one should. call RWebWindow::Show() method again. Now parameter is off, but once tested - will be enabled by default. This should significantly increase security for web applications. Fix problem with random seed for key generation . Add warning when browser on remote node is started - by checking DISPLAY variable .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11213
https://github.com/root-project/root/pull/11213:391,security,secur,security,391,"[webgui] introduce `WebGui.OnetimeKey` rootrc parameter; If specified, enforce unique key every time client connect to. web window. Once key used, it is not possible to use it again for reconnect. If one wants to connect to window again, one should. call RWebWindow::Show() method again. Now parameter is off, but once tested - will be enabled by default. This should significantly increase security for web applications. Fix problem with random seed for key generation . Add warning when browser on remote node is started - by checking DISPLAY variable .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11213
https://github.com/root-project/root/pull/11213:319,testability,test,tested,319,"[webgui] introduce `WebGui.OnetimeKey` rootrc parameter; If specified, enforce unique key every time client connect to. web window. Once key used, it is not possible to use it again for reconnect. If one wants to connect to window again, one should. call RWebWindow::Show() method again. Now parameter is off, but once tested - will be enabled by default. This should significantly increase security for web applications. Fix problem with random seed for key generation . Add warning when browser on remote node is started - by checking DISPLAY variable .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11213
https://github.com/root-project/root/pull/11214:313,deployability,manag,manager,313,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:370,deployability,modul,module,370,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:8,energy efficiency,profil,profiling,8,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:59,energy efficiency,profil,profiling,59,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:123,energy efficiency,profil,profiling,123,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:313,energy efficiency,manag,manager,313,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:571,integrability,Event,Events,571,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:691,integrability,Filter,Filter,691,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:713,integrability,Event,Events,713,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:159,interoperability,distribut,distributed,159,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:358,interoperability,Distribut,Distributed,358,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:458,interoperability,Distribut,Distributed,458,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:524,interoperability,Distribut,Distributed,524,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:370,modifiability,modul,module,370,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:8,performance,profil,profiling,8,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:59,performance,profil,profiling,59,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:123,performance,profil,profiling,123,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:313,safety,manag,manager,313,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:370,safety,modul,module,370,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:322,security,access,accessed,322,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/pull/11214:200,usability,visual,visualization,200,"DistRDF profiling; The pr includes the implementation of a profiling mechanism for DistRDF. When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module. Usage example (dimuon analysis):. ```python. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile. ... df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client). with ClingProfile(df, filename=""flamegraph.svg""):. df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""). ... h.GetValue(). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11214
https://github.com/root-project/root/issues/11215:233,availability,Error,Error,233,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:643,availability,Error,Error,643,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:399,deployability,modul,module,399,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:441,deployability,build,build-foo,441,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:832,deployability,build,build-foo,832,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:407,energy efficiency,Core,Core,407,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:325,integrability,rout,routine,325,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:735,integrability,rout,routine,735,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:399,modifiability,modul,module,399,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:1,performance,I/O,I/O,1,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:233,performance,Error,Error,233,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:643,performance,Error,Error,643,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:233,safety,Error,Error,233,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:399,safety,modul,module,399,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:643,safety,Error,Error,643,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:233,usability,Error,Error,233,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/issues/11215:643,usability,Error,Error,643,"[I/O] Cannot create a `std::pair<int, int>` branch at prompt; Reproducer:. ```. root [0] auto x = std::make_pair(42, 84);. root [1] auto *xp = &x;. root [2] TTree t(""t"", ""t""). (TTree &) Name: t Title: t. root [3] t.Branch(""x"", &xp). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. root [4] t.Branch(""x"", &x). Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11215
https://github.com/root-project/root/pull/11216:33,integrability,sub,sub-branches,33,"[DF] Fix jitted expressions with sub-branches of aliases; Given a string expression such as ""alias.subbranch"" (where. `subbranch` is _not_ also the name of a valid data member of. the type of the ""alias"" top-level branch), we used to transform. the expression to `[](T &var0) { return var0.subbranch; }`,. which does not compile. Now aliases in jitted expressions are resolved in a first step. and only then we try to match the expression against known branch. names, fixing the problem. This PR fixes https://github.com/root-project/root/issues/11207 (and adds a test). - [x] add a less weird test, e.g. based on `std::vector<XYZVector>`, for which we should have dictionaries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11216
https://github.com/root-project/root/pull/11216:99,integrability,sub,subbranch,99,"[DF] Fix jitted expressions with sub-branches of aliases; Given a string expression such as ""alias.subbranch"" (where. `subbranch` is _not_ also the name of a valid data member of. the type of the ""alias"" top-level branch), we used to transform. the expression to `[](T &var0) { return var0.subbranch; }`,. which does not compile. Now aliases in jitted expressions are resolved in a first step. and only then we try to match the expression against known branch. names, fixing the problem. This PR fixes https://github.com/root-project/root/issues/11207 (and adds a test). - [x] add a less weird test, e.g. based on `std::vector<XYZVector>`, for which we should have dictionaries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11216
https://github.com/root-project/root/pull/11216:119,integrability,sub,subbranch,119,"[DF] Fix jitted expressions with sub-branches of aliases; Given a string expression such as ""alias.subbranch"" (where. `subbranch` is _not_ also the name of a valid data member of. the type of the ""alias"" top-level branch), we used to transform. the expression to `[](T &var0) { return var0.subbranch; }`,. which does not compile. Now aliases in jitted expressions are resolved in a first step. and only then we try to match the expression against known branch. names, fixing the problem. This PR fixes https://github.com/root-project/root/issues/11207 (and adds a test). - [x] add a less weird test, e.g. based on `std::vector<XYZVector>`, for which we should have dictionaries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11216
https://github.com/root-project/root/pull/11216:234,integrability,transform,transform,234,"[DF] Fix jitted expressions with sub-branches of aliases; Given a string expression such as ""alias.subbranch"" (where. `subbranch` is _not_ also the name of a valid data member of. the type of the ""alias"" top-level branch), we used to transform. the expression to `[](T &var0) { return var0.subbranch; }`,. which does not compile. Now aliases in jitted expressions are resolved in a first step. and only then we try to match the expression against known branch. names, fixing the problem. This PR fixes https://github.com/root-project/root/issues/11207 (and adds a test). - [x] add a less weird test, e.g. based on `std::vector<XYZVector>`, for which we should have dictionaries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11216
https://github.com/root-project/root/pull/11216:290,integrability,sub,subbranch,290,"[DF] Fix jitted expressions with sub-branches of aliases; Given a string expression such as ""alias.subbranch"" (where. `subbranch` is _not_ also the name of a valid data member of. the type of the ""alias"" top-level branch), we used to transform. the expression to `[](T &var0) { return var0.subbranch; }`,. which does not compile. Now aliases in jitted expressions are resolved in a first step. and only then we try to match the expression against known branch. names, fixing the problem. This PR fixes https://github.com/root-project/root/issues/11207 (and adds a test). - [x] add a less weird test, e.g. based on `std::vector<XYZVector>`, for which we should have dictionaries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11216
https://github.com/root-project/root/pull/11216:234,interoperability,transform,transform,234,"[DF] Fix jitted expressions with sub-branches of aliases; Given a string expression such as ""alias.subbranch"" (where. `subbranch` is _not_ also the name of a valid data member of. the type of the ""alias"" top-level branch), we used to transform. the expression to `[](T &var0) { return var0.subbranch; }`,. which does not compile. Now aliases in jitted expressions are resolved in a first step. and only then we try to match the expression against known branch. names, fixing the problem. This PR fixes https://github.com/root-project/root/issues/11207 (and adds a test). - [x] add a less weird test, e.g. based on `std::vector<XYZVector>`, for which we should have dictionaries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11216
https://github.com/root-project/root/pull/11216:312,reliability,doe,does,312,"[DF] Fix jitted expressions with sub-branches of aliases; Given a string expression such as ""alias.subbranch"" (where. `subbranch` is _not_ also the name of a valid data member of. the type of the ""alias"" top-level branch), we used to transform. the expression to `[](T &var0) { return var0.subbranch; }`,. which does not compile. Now aliases in jitted expressions are resolved in a first step. and only then we try to match the expression against known branch. names, fixing the problem. This PR fixes https://github.com/root-project/root/issues/11207 (and adds a test). - [x] add a less weird test, e.g. based on `std::vector<XYZVector>`, for which we should have dictionaries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11216
https://github.com/root-project/root/pull/11216:158,safety,valid,valid,158,"[DF] Fix jitted expressions with sub-branches of aliases; Given a string expression such as ""alias.subbranch"" (where. `subbranch` is _not_ also the name of a valid data member of. the type of the ""alias"" top-level branch), we used to transform. the expression to `[](T &var0) { return var0.subbranch; }`,. which does not compile. Now aliases in jitted expressions are resolved in a first step. and only then we try to match the expression against known branch. names, fixing the problem. This PR fixes https://github.com/root-project/root/issues/11207 (and adds a test). - [x] add a less weird test, e.g. based on `std::vector<XYZVector>`, for which we should have dictionaries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11216
https://github.com/root-project/root/pull/11216:564,safety,test,test,564,"[DF] Fix jitted expressions with sub-branches of aliases; Given a string expression such as ""alias.subbranch"" (where. `subbranch` is _not_ also the name of a valid data member of. the type of the ""alias"" top-level branch), we used to transform. the expression to `[](T &var0) { return var0.subbranch; }`,. which does not compile. Now aliases in jitted expressions are resolved in a first step. and only then we try to match the expression against known branch. names, fixing the problem. This PR fixes https://github.com/root-project/root/issues/11207 (and adds a test). - [x] add a less weird test, e.g. based on `std::vector<XYZVector>`, for which we should have dictionaries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11216
https://github.com/root-project/root/pull/11216:594,safety,test,test,594,"[DF] Fix jitted expressions with sub-branches of aliases; Given a string expression such as ""alias.subbranch"" (where. `subbranch` is _not_ also the name of a valid data member of. the type of the ""alias"" top-level branch), we used to transform. the expression to `[](T &var0) { return var0.subbranch; }`,. which does not compile. Now aliases in jitted expressions are resolved in a first step. and only then we try to match the expression against known branch. names, fixing the problem. This PR fixes https://github.com/root-project/root/issues/11207 (and adds a test). - [x] add a less weird test, e.g. based on `std::vector<XYZVector>`, for which we should have dictionaries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11216
https://github.com/root-project/root/pull/11216:564,testability,test,test,564,"[DF] Fix jitted expressions with sub-branches of aliases; Given a string expression such as ""alias.subbranch"" (where. `subbranch` is _not_ also the name of a valid data member of. the type of the ""alias"" top-level branch), we used to transform. the expression to `[](T &var0) { return var0.subbranch; }`,. which does not compile. Now aliases in jitted expressions are resolved in a first step. and only then we try to match the expression against known branch. names, fixing the problem. This PR fixes https://github.com/root-project/root/issues/11207 (and adds a test). - [x] add a less weird test, e.g. based on `std::vector<XYZVector>`, for which we should have dictionaries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11216
https://github.com/root-project/root/pull/11216:594,testability,test,test,594,"[DF] Fix jitted expressions with sub-branches of aliases; Given a string expression such as ""alias.subbranch"" (where. `subbranch` is _not_ also the name of a valid data member of. the type of the ""alias"" top-level branch), we used to transform. the expression to `[](T &var0) { return var0.subbranch; }`,. which does not compile. Now aliases in jitted expressions are resolved in a first step. and only then we try to match the expression against known branch. names, fixing the problem. This PR fixes https://github.com/root-project/root/issues/11207 (and adds a test). - [x] add a less weird test, e.g. based on `std::vector<XYZVector>`, for which we should have dictionaries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11216
https://github.com/root-project/root/pull/11217:12,usability,custom,customCols,12,"[DF] Rename customCols => colRegister everywhere ; ""customCols"" is an old denomination that is now confusing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11217
https://github.com/root-project/root/pull/11217:52,usability,custom,customCols,52,"[DF] Rename customCols => colRegister everywhere ; ""customCols"" is an old denomination that is now confusing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11217
https://github.com/root-project/root/issues/11218:155,deployability,contain,contains,155,"[DF] Add support for varied `Snapshot`; In presence of systematic variations registered with RDF with `Vary`, a `Snapshot` call could produce a TTree that contains extra branches for the different systematic variations. To do. - [x] decide between extra branches and extra trees. - [ ] figure out how the interaction with `VariationsFor` works. - [ ] decide naming convention for varied branches. Then for the actual implementation:. - [ ] add template specialization for `RVariedAction<SnapshotHelper>` and `RVariedAction<SnapshotHelperMT>` that does the right thing. - [ ] fix `RVariedAction::GetSampleCallback` so that it does not only take the callback of the first helper (this might turn out to be an orthogonal issue, but it's in principle relevant as `SnapshotHelper[MT]` makes use of the sample callback mechanism",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11218
https://github.com/root-project/root/issues/11218:547,reliability,doe,does,547,"[DF] Add support for varied `Snapshot`; In presence of systematic variations registered with RDF with `Vary`, a `Snapshot` call could produce a TTree that contains extra branches for the different systematic variations. To do. - [x] decide between extra branches and extra trees. - [ ] figure out how the interaction with `VariationsFor` works. - [ ] decide naming convention for varied branches. Then for the actual implementation:. - [ ] add template specialization for `RVariedAction<SnapshotHelper>` and `RVariedAction<SnapshotHelperMT>` that does the right thing. - [ ] fix `RVariedAction::GetSampleCallback` so that it does not only take the callback of the first helper (this might turn out to be an orthogonal issue, but it's in principle relevant as `SnapshotHelper[MT]` makes use of the sample callback mechanism",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11218
https://github.com/root-project/root/issues/11218:625,reliability,doe,does,625,"[DF] Add support for varied `Snapshot`; In presence of systematic variations registered with RDF with `Vary`, a `Snapshot` call could produce a TTree that contains extra branches for the different systematic variations. To do. - [x] decide between extra branches and extra trees. - [ ] figure out how the interaction with `VariationsFor` works. - [ ] decide naming convention for varied branches. Then for the actual implementation:. - [ ] add template specialization for `RVariedAction<SnapshotHelper>` and `RVariedAction<SnapshotHelperMT>` that does the right thing. - [ ] fix `RVariedAction::GetSampleCallback` so that it does not only take the callback of the first helper (this might turn out to be an orthogonal issue, but it's in principle relevant as `SnapshotHelper[MT]` makes use of the sample callback mechanism",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11218
https://github.com/root-project/root/issues/11218:9,usability,support,support,9,"[DF] Add support for varied `Snapshot`; In presence of systematic variations registered with RDF with `Vary`, a `Snapshot` call could produce a TTree that contains extra branches for the different systematic variations. To do. - [x] decide between extra branches and extra trees. - [ ] figure out how the interaction with `VariationsFor` works. - [ ] decide naming convention for varied branches. Then for the actual implementation:. - [ ] add template specialization for `RVariedAction<SnapshotHelper>` and `RVariedAction<SnapshotHelperMT>` that does the right thing. - [ ] fix `RVariedAction::GetSampleCallback` so that it does not only take the callback of the first helper (this might turn out to be an orthogonal issue, but it's in principle relevant as `SnapshotHelper[MT]` makes use of the sample callback mechanism",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11218
https://github.com/root-project/root/issues/11218:305,usability,interact,interaction,305,"[DF] Add support for varied `Snapshot`; In presence of systematic variations registered with RDF with `Vary`, a `Snapshot` call could produce a TTree that contains extra branches for the different systematic variations. To do. - [x] decide between extra branches and extra trees. - [ ] figure out how the interaction with `VariationsFor` works. - [ ] decide naming convention for varied branches. Then for the actual implementation:. - [ ] add template specialization for `RVariedAction<SnapshotHelper>` and `RVariedAction<SnapshotHelperMT>` that does the right thing. - [ ] fix `RVariedAction::GetSampleCallback` so that it does not only take the callback of the first helper (this might turn out to be an orthogonal issue, but it's in principle relevant as `SnapshotHelper[MT]` makes use of the sample callback mechanism",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11218
https://github.com/root-project/root/issues/11218:670,usability,help,helper,670,"[DF] Add support for varied `Snapshot`; In presence of systematic variations registered with RDF with `Vary`, a `Snapshot` call could produce a TTree that contains extra branches for the different systematic variations. To do. - [x] decide between extra branches and extra trees. - [ ] figure out how the interaction with `VariationsFor` works. - [ ] decide naming convention for varied branches. Then for the actual implementation:. - [ ] add template specialization for `RVariedAction<SnapshotHelper>` and `RVariedAction<SnapshotHelperMT>` that does the right thing. - [ ] fix `RVariedAction::GetSampleCallback` so that it does not only take the callback of the first helper (this might turn out to be an orthogonal issue, but it's in principle relevant as `SnapshotHelper[MT]` makes use of the sample callback mechanism",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11218
https://github.com/root-project/root/pull/11219:124,testability,simpl,simplify,124,[skip-ci] Fix potential crash with RBrowser on Windows; Fix potential crash when quitting ROOT from RBrowser on Windows and simplify the code used to close the TBrowser main Window.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11219
https://github.com/root-project/root/pull/11219:124,usability,simpl,simplify,124,[skip-ci] Fix potential crash with RBrowser on Windows; Fix potential crash when quitting ROOT from RBrowser on Windows and simplify the code used to close the TBrowser main Window.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11219
https://github.com/root-project/root/pull/11219:150,usability,close,close,150,[skip-ci] Fix potential crash with RBrowser on Windows; Fix potential crash when quitting ROOT from RBrowser on Windows and simplify the code used to close the TBrowser main Window.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11219
https://github.com/root-project/root/pull/11220:132,testability,simpl,simplify,132,[v6-26] [skip-ci] Fix potential crash with RBrowser on Windows; Fix potential crash when quitting ROOT from RBrowser on Windows and simplify the code used to close the TBrowser main Window,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11220
https://github.com/root-project/root/pull/11220:132,usability,simpl,simplify,132,[v6-26] [skip-ci] Fix potential crash with RBrowser on Windows; Fix potential crash when quitting ROOT from RBrowser on Windows and simplify the code used to close the TBrowser main Window,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11220
https://github.com/root-project/root/pull/11220:158,usability,close,close,158,[v6-26] [skip-ci] Fix potential crash with RBrowser on Windows; Fix potential crash when quitting ROOT from RBrowser on Windows and simplify the code used to close the TBrowser main Window,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11220
https://github.com/root-project/root/issues/11221:22,availability,failur,failures,22,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:124,availability,ERROR,ERROR,124,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:1438,availability,operat,operator,1438,"terator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:105:49. 253: #11 0x7ff68cd94a6b in RooStats::SPlot::AddSWeight(RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71. 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:2850,availability,ERROR,ERROR,2850,"ArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:105:49. 253: #11 0x7ff68cd94a6b in RooStats::SPlot::AddSWeight(RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71. 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9. 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19. ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:. ```. 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540. 1160: READ of size 8 at 0x60c0000973d8 thread T0. 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 1160: #3 0x7fb8e12c7527 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 1160: #4 0x7fb8e12c7527 in RooAbsReal::getV",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:4172,availability,operat,operator,4172,"0973d8 thread T0. 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 1160: #3 0x7fb8e12c7527 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 1160: #4 0x7fb8e12c7527 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 1160: #5 0x7fb8e12c7527 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 1160: #6 0x7fb8e12c7527 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 1160: #7 0x7fb8e12c7527 in RooGaussian::analyticalIntegral(int, char const*) const /home/jhahnfel/ROOT/src/roofit/roofit/src/RooGaussian.cxx:91:58. 1160: #8 0x7fb8d5586898 in RooAbsPdf::analyticalIntegralWN(int, RooArgSet const*, char const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx. 1160: #9 0x7fb8d59cc62a in RooRealIntegral::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooRealIntegral.cxx:876:27. 1160: #10 0x7fb8d55b6e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 1160: #11 0x7fb8d59cbd30 in RooRealIntegral::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooRealIntegral.cxx:803:14. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:22,deployability,fail,failures,22,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:91,deployability,fail,fails,91,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:405,energy efficiency,alloc,allocator,405,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:627,energy efficiency,alloc,allocator,627,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:815,energy efficiency,alloc,allocator,815,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:3133,energy efficiency,alloc,allocator,3133,"AbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71. 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9. 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19. ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:. ```. 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540. 1160: READ of size 8 at 0x60c0000973d8 thread T0. 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 1160: #3 0x7fb8e12c7527 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 1160: #4 0x7fb8e12c7527 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 1160: #5 0x7fb8e12c7527 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 1160: #6 0x7fb8e12c7527",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:3356,energy efficiency,alloc,allocator,3356,"SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9. 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19. ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:. ```. 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540. 1160: READ of size 8 at 0x60c0000973d8 thread T0. 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 1160: #3 0x7fb8e12c7527 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 1160: #4 0x7fb8e12c7527 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 1160: #5 0x7fb8e12c7527 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 1160: #6 0x7fb8e12c7527 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 1160: #7 0x7fb8e12c7527 in RooGaussian::analyticalIntegral(int, char const*) const /home/jha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:3545,energy efficiency,alloc,allocator,3545," const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9. 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19. ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:. ```. 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540. 1160: READ of size 8 at 0x60c0000973d8 thread T0. 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 1160: #3 0x7fb8e12c7527 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 1160: #4 0x7fb8e12c7527 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 1160: #5 0x7fb8e12c7527 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 1160: #6 0x7fb8e12c7527 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 1160: #7 0x7fb8e12c7527 in RooGaussian::analyticalIntegral(int, char const*) const /home/jhahnfel/ROOT/src/roofit/roofit/src/RooGaussian.cxx:91:58. 1160: #8 0x7fb8d5586898 in RooAbsPdf::analyticalIntegralWN(int, RooArgSet const*, char const*) const /home/jhahnfel/ROOT/src/roofit/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:22,performance,failur,failures,22,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:124,performance,ERROR,ERROR,124,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:2850,performance,ERROR,ERROR,2850,"ArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:105:49. 253: #11 0x7ff68cd94a6b in RooStats::SPlot::AddSWeight(RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71. 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9. 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19. ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:. ```. 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540. 1160: READ of size 8 at 0x60c0000973d8 thread T0. 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 1160: #3 0x7fb8e12c7527 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 1160: #4 0x7fb8e12c7527 in RooAbsReal::getV",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:22,reliability,fail,failures,22,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:91,reliability,fail,fails,91,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:45,safety,test,tests,45,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:75,safety,test,test-testSPlot,75,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:124,safety,ERROR,ERROR,124,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:2673,safety,Test,TestBody,2673,"8be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:105:49. 253: #11 0x7ff68cd94a6b in RooStats::SPlot::AddSWeight(RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71. 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9. 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19. ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:. ```. 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540. 1160: READ of size 8 at 0x60c0000973d8 thread T0. 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:2724,safety,test,test,2724,"*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:105:49. 253: #11 0x7ff68cd94a6b in RooStats::SPlot::AddSWeight(RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71. 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9. 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19. ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:. ```. 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540. 1160: READ of size 8 at 0x60c0000973d8 thread T0. 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 1160: #3 0x7fb8e12c7527 in RooAbsCollection::emp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:2729,safety,test,testSPlot,2729," /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:105:49. 253: #11 0x7ff68cd94a6b in RooStats::SPlot::AddSWeight(RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71. 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9. 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19. ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:. ```. 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540. 1160: READ of size 8 at 0x60c0000973d8 thread T0. 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 1160: #3 0x7fb8e12c7527 in RooAbsCollection::empty() con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:2850,safety,ERROR,ERROR,2850,"ArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:105:49. 253: #11 0x7ff68cd94a6b in RooStats::SPlot::AddSWeight(RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71. 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9. 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19. ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:. ```. 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540. 1160: READ of size 8 at 0x60c0000973d8 thread T0. 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 1160: #3 0x7fb8e12c7527 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 1160: #4 0x7fb8e12c7527 in RooAbsReal::getV",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:45,testability,test,tests,45,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:75,testability,test,test-testSPlot,75,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:1701,testability,trace,traceEval,1701,"8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:105:49. 253: #11 0x7ff68cd94a6b in RooStats::SPlot::AddSWeight(RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71. 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9. 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:2673,testability,Test,TestBody,2673,"8be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:105:49. 253: #11 0x7ff68cd94a6b in RooStats::SPlot::AddSWeight(RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71. 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9. 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19. ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:. ```. 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540. 1160: READ of size 8 at 0x60c0000973d8 thread T0. 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:2724,testability,test,test,2724,"*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:105:49. 253: #11 0x7ff68cd94a6b in RooStats::SPlot::AddSWeight(RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71. 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9. 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19. ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:. ```. 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540. 1160: READ of size 8 at 0x60c0000973d8 thread T0. 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 1160: #3 0x7fb8e12c7527 in RooAbsCollection::emp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:2729,testability,test,testSPlot,2729," /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:105:49. 253: #11 0x7ff68cd94a6b in RooStats::SPlot::AddSWeight(RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71. 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9. 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19. ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:. ```. 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540. 1160: READ of size 8 at 0x60c0000973d8 thread T0. 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 1160: #3 0x7fb8e12c7527 in RooAbsCollection::empty() con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:4754,testability,trace,traceEval,4754,"0973d8 thread T0. 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 1160: #3 0x7fb8e12c7527 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 1160: #4 0x7fb8e12c7527 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 1160: #5 0x7fb8e12c7527 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 1160: #6 0x7fb8e12c7527 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 1160: #7 0x7fb8e12c7527 in RooGaussian::analyticalIntegral(int, char const*) const /home/jhahnfel/ROOT/src/roofit/roofit/src/RooGaussian.cxx:91:58. 1160: #8 0x7fb8d5586898 in RooAbsPdf::analyticalIntegralWN(int, RooArgSet const*, char const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx. 1160: #9 0x7fb8d59cc62a in RooRealIntegral::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooRealIntegral.cxx:876:27. 1160: #10 0x7fb8d55b6e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 1160: #11 0x7fb8d59cbd30 in RooRealIntegral::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooRealIntegral.cxx:803:14. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:124,usability,ERROR,ERROR,124,"[RF] AddressSanitizer failures in two RooFit tests; `gtest-roofit-roostats-test-testSPlot` fails with. ```. 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00. 253: READ of size 8 at 0x6150001aed68 thread T0. 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46. 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17. 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12. 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10. 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18. 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11221:2850,usability,ERROR,ERROR,2850,"ArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14. 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:105:49. 253: #11 0x7ff68cd94a6b in RooStats::SPlot::AddSWeight(RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:459:71. 253: #12 0x7ff68cd93a9d in RooStats::SPlot::SPlot(char const*, char const*, RooDataSet&, RooAbsPdf*, RooArgList const&, RooArgSet const&, bool, bool, char const*, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /home/jhahnfel/ROOT/src/roofit/roostats/src/SPlot.cxx:225:9. 253: #13 0x37f7dd in SPlot_UseWithRooLinearVar_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roostats/test/testSPlot.cxx:31:19. ```. `tutorial-roofit-rf110_normintegration-py` shows very similar symptoms:. ```. 1160: ==1901172==ERROR: AddressSanitizer: heap-use-after-free on address 0x60c0000973d8 at pc 0x7fb8e12c7528 bp 0x7ffc12245550 sp 0x7ffc12245540. 1160: READ of size 8 at 0x60c0000973d8 thread T0. 1160: #0 0x7fb8e12c7527 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20. 1160: #1 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16. 1160: #2 0x7fb8e12c7527 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16. 1160: #3 0x7fb8e12c7527 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18. 1160: #4 0x7fb8e12c7527 in RooAbsReal::getV",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11221
https://github.com/root-project/root/issues/11222:285,availability,ERROR,ERROR,285,"[DF] gtest-tree-dataframe-test-dataframe-snapshot fails with AddressSanitizer; Crash report:. ```. 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch. 382: RDataFrame::Run: event loop was interrupted. 382: =================================================================. 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:625,availability,operat,operator,625,"[DF] gtest-tree-dataframe-test-dataframe-snapshot fails with AddressSanitizer; Crash report:. ```. 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch. 382: RDataFrame::Run: event loop was interrupted. 382: =================================================================. 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:1265,availability,operat,operator,1265,"382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18. 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:169:10. 382: #8 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::operator*() /home/jhahnfel/ROOT/src/tree/dataframe/inc/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:2214,availability,operat,operator,2214,"unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18. 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:169:10. 382: #8 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::operator*() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:229:15. 382: #9 0x5ecb22 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1140:10. 382: #10 0x5be335 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:50,deployability,fail,fails,50,"[DF] gtest-tree-dataframe-test-dataframe-snapshot fails with AddressSanitizer; Crash report:. ```. 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch. 382: RDataFrame::Run: event loop was interrupted. 382: =================================================================. 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:2572,energy efficiency,alloc,allocator,2572,". 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18. 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:169:10. 382: #8 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::operator*() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:229:15. 382: #9 0x5ecb22 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1140:10. 382: #10 0x5be335 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1202:14. 382: #11 0x512932 in RDFSnapshotMore_MissingSizeBranch_Test::TestBody() /home/jhahnfel/ROOT/src/tree/dataframe/test/dataframe_snapshot.cxx:903:18. ```. (already discussed and work-in-progress)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:2596,energy efficiency,alloc,allocator,2596,". 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18. 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:169:10. 382: #8 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::operator*() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:229:15. 382: #9 0x5ecb22 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1140:10. 382: #10 0x5be335 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1202:14. 382: #11 0x512932 in RDFSnapshotMore_MissingSizeBranch_Test::TestBody() /home/jhahnfel/ROOT/src/tree/dataframe/test/dataframe_snapshot.cxx:903:18. ```. (already discussed and work-in-progress)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:2668,energy efficiency,alloc,allocator,2668,". 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18. 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:169:10. 382: #8 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::operator*() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:229:15. 382: #9 0x5ecb22 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1140:10. 382: #10 0x5be335 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1202:14. 382: #11 0x512932 in RDFSnapshotMore_MissingSizeBranch_Test::TestBody() /home/jhahnfel/ROOT/src/tree/dataframe/test/dataframe_snapshot.cxx:903:18. ```. (already discussed and work-in-progress)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:3096,energy efficiency,alloc,allocator,3096,". 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18. 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:169:10. 382: #8 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::operator*() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:229:15. 382: #9 0x5ecb22 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1140:10. 382: #10 0x5be335 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1202:14. 382: #11 0x512932 in RDFSnapshotMore_MissingSizeBranch_Test::TestBody() /home/jhahnfel/ROOT/src/tree/dataframe/test/dataframe_snapshot.cxx:903:18. ```. (already discussed and work-in-progress)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:169,integrability,event,event,169,"[DF] gtest-tree-dataframe-test-dataframe-snapshot fails with AddressSanitizer; Crash report:. ```. 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch. 382: RDataFrame::Run: event loop was interrupted. 382: =================================================================. 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:285,performance,ERROR,ERROR,285,"[DF] gtest-tree-dataframe-test-dataframe-snapshot fails with AddressSanitizer; Crash report:. ```. 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch. 382: RDataFrame::Run: event loop was interrupted. 382: =================================================================. 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:50,reliability,fail,fails,50,"[DF] gtest-tree-dataframe-test-dataframe-snapshot fails with AddressSanitizer; Crash report:. ```. 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch. 382: RDataFrame::Run: event loop was interrupted. 382: =================================================================. 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:26,safety,test,test-dataframe-snapshot,26,"[DF] gtest-tree-dataframe-test-dataframe-snapshot fails with AddressSanitizer; Crash report:. ```. 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch. 382: RDataFrame::Run: event loop was interrupted. 382: =================================================================. 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:285,safety,ERROR,ERROR,285,"[DF] gtest-tree-dataframe-test-dataframe-snapshot fails with AddressSanitizer; Crash report:. ```. 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch. 382: RDataFrame::Run: event loop was interrupted. 382: =================================================================. 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:3290,safety,Test,TestBody,3290,". 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18. 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:169:10. 382: #8 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::operator*() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:229:15. 382: #9 0x5ecb22 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1140:10. 382: #10 0x5be335 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1202:14. 382: #11 0x512932 in RDFSnapshotMore_MissingSizeBranch_Test::TestBody() /home/jhahnfel/ROOT/src/tree/dataframe/test/dataframe_snapshot.cxx:903:18. ```. (already discussed and work-in-progress)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:3340,safety,test,test,3340,". 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18. 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:169:10. 382: #8 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::operator*() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:229:15. 382: #9 0x5ecb22 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1140:10. 382: #10 0x5be335 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1202:14. 382: #11 0x512932 in RDFSnapshotMore_MissingSizeBranch_Test::TestBody() /home/jhahnfel/ROOT/src/tree/dataframe/test/dataframe_snapshot.cxx:903:18. ```. (already discussed and work-in-progress)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:604,security,RSa,RSampleInfo,604,"[DF] gtest-tree-dataframe-test-dataframe-snapshot fails with AddressSanitizer; Crash report:. ```. 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch. 382: RDataFrame::Run: event loop was interrupted. 382: =================================================================. 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:661,security,RSa,RSampleInfo,661,"[DF] gtest-tree-dataframe-test-dataframe-snapshot fails with AddressSanitizer; Crash report:. ```. 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch. 382: RDataFrame::Run: event loop was interrupted. 382: =================================================================. 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:834,security,RSa,RSampleInfo,834,"[DF] gtest-tree-dataframe-test-dataframe-snapshot fails with AddressSanitizer; Crash report:. ```. 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch. 382: RDataFrame::Run: event loop was interrupted. 382: =================================================================. 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:975,security,RSa,RSampleInfo,975,"[DF] gtest-tree-dataframe-test-dataframe-snapshot fails with AddressSanitizer; Crash report:. ```. 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch. 382: RDataFrame::Run: event loop was interrupted. 382: =================================================================. 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:1057,security,RSa,RSampleInfo,1057,"dressSanitizer; Crash report:. ```. 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch. 382: RDataFrame::Run: event loop was interrupted. 382: =================================================================. 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18. 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:1243,security,RSa,RSampleInfo,1243,"==================. 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18. 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:169:10. 382: #8 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::operator*() /home/jhahnfel/ROOT/src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:1301,security,RSa,RSampleInfo,1301,"r: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18. 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:169:10. 382: #8 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::operator*() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:229:15. 382: #9 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:26,testability,test,test-dataframe-snapshot,26,"[DF] gtest-tree-dataframe-test-dataframe-snapshot fails with AddressSanitizer; Crash report:. ```. 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch. 382: RDataFrame::Run: event loop was interrupted. 382: =================================================================. 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:3290,testability,Test,TestBody,3290,". 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18. 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:169:10. 382: #8 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::operator*() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:229:15. 382: #9 0x5ecb22 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1140:10. 382: #10 0x5be335 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1202:14. 382: #11 0x512932 in RDFSnapshotMore_MissingSizeBranch_Test::TestBody() /home/jhahnfel/ROOT/src/tree/dataframe/test/dataframe_snapshot.cxx:903:18. ```. (already discussed and work-in-progress)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:3340,testability,test,test,3340,". 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18. 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:169:10. 382: #8 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::operator*() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:229:15. 382: #9 0x5ecb22 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1140:10. 382: #10 0x5be335 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1202:14. 382: #11 0x512932 in RDFSnapshotMore_MissingSizeBranch_Test::TestBody() /home/jhahnfel/ROOT/src/tree/dataframe/test/dataframe_snapshot.cxx:903:18. ```. (already discussed and work-in-progress)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:285,usability,ERROR,ERROR,285,"[DF] gtest-tree-dataframe-test-dataframe-snapshot fails with AddressSanitizer; Crash report:. ```. 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch. 382: RDataFrame::Run: event loop was interrupted. 382: =================================================================. 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930. 382: WRITE of size 1 at 0x616000fc64c8 thread T0. 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92. 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2. 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14. 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/issues/11222:3412,usability,progress,progress,3412,". 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10. 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10. 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32. 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18. 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:169:10. 382: #8 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::operator*() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:229:15. 382: #9 0x5ecb22 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1140:10. 382: #10 0x5be335 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Snapshot(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >, std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ROOT::RDF::RSnapshotOptions const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1202:14. 382: #11 0x512932 in RDFSnapshotMore_MissingSizeBranch_Test::TestBody() /home/jhahnfel/ROOT/src/tree/dataframe/test/dataframe_snapshot.cxx:903:18. ```. (already discussed and work-in-progress)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11222
https://github.com/root-project/root/pull/11223:0,deployability,Updat,Update,0,Update nlohmann/json.hpp to version 3.10.5; Provide json_fwd.h which can be used now in eve7. Also update forward declaration in REveElement.hxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11223
https://github.com/root-project/root/pull/11223:28,deployability,version,version,28,Update nlohmann/json.hpp to version 3.10.5; Provide json_fwd.h which can be used now in eve7. Also update forward declaration in REveElement.hxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11223
https://github.com/root-project/root/pull/11223:99,deployability,updat,update,99,Update nlohmann/json.hpp to version 3.10.5; Provide json_fwd.h which can be used now in eve7. Also update forward declaration in REveElement.hxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11223
https://github.com/root-project/root/pull/11223:28,integrability,version,version,28,Update nlohmann/json.hpp to version 3.10.5; Provide json_fwd.h which can be used now in eve7. Also update forward declaration in REveElement.hxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11223
https://github.com/root-project/root/pull/11223:28,modifiability,version,version,28,Update nlohmann/json.hpp to version 3.10.5; Provide json_fwd.h which can be used now in eve7. Also update forward declaration in REveElement.hxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11223
https://github.com/root-project/root/pull/11223:0,safety,Updat,Update,0,Update nlohmann/json.hpp to version 3.10.5; Provide json_fwd.h which can be used now in eve7. Also update forward declaration in REveElement.hxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11223
https://github.com/root-project/root/pull/11223:99,safety,updat,update,99,Update nlohmann/json.hpp to version 3.10.5; Provide json_fwd.h which can be used now in eve7. Also update forward declaration in REveElement.hxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11223
https://github.com/root-project/root/pull/11223:0,security,Updat,Update,0,Update nlohmann/json.hpp to version 3.10.5; Provide json_fwd.h which can be used now in eve7. Also update forward declaration in REveElement.hxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11223
https://github.com/root-project/root/pull/11223:99,security,updat,update,99,Update nlohmann/json.hpp to version 3.10.5; Provide json_fwd.h which can be used now in eve7. Also update forward declaration in REveElement.hxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11223
https://github.com/root-project/root/pull/11224:1269,deployability,updat,updated,1269,"ectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1458,deployability,updat,updated,1458,"ectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1981,deployability,updat,updated,1981,"ectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:849,energy efficiency,current,current,849,"[RF] Enable vectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1002,energy efficiency,current,current,1002,"nable vectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if nece",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:668,integrability,event,event,668,"[RF] Enable vectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:724,integrability,event,event,724,"[RF] Enable vectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:911,integrability,event,event,911,"[RF] Enable vectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:772,interoperability,coordinat,coordinates,772,"[RF] Enable vectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1136,performance,perform,performed,1136,"ectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1269,safety,updat,updated,1269,"ectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1458,safety,updat,updated,1458,"ectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1705,safety,compl,completely,1705,"ectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1951,safety,test,tested,1951,"ectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1981,safety,updat,updated,1981,"ectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1269,security,updat,updated,1269,"ectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1458,security,updat,updated,1458,"ectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1705,security,compl,completely,1705,"ectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1981,security,updat,updated,1981,"ectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1951,testability,test,tested,1951,"ectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1136,usability,perform,performed,1136,"ectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11224:1648,usability,support,supported,1648,"ectorized second order interpolation for weight evaluation; With the function `RooDataHist::interpolateQuadratic()` it is now possible to. use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for. one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of. `RooDataHist::interpolateLinear()`, which was implemented in #11211. It finds the coefficients of a second order polynomial between three. neighboring bin centers by solving a system of three quadratic equations. With. the coefficients of the quadratic function, the interpolated weight for an event. between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the. corresponding weight is found by interpolating between the current bin and the. two neighboring bins to the left. If the event is to the right of the bin center,. the weight is found by interpolating between the current bin center, one bin to. the the left and one bin to the right. For the first two bins and the last bin,. the interpolation is performed either by mirroring the histogram outside its. boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls. `RooDataHist::interpolateQuadratic()` when the interpolation order is two. Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`. have been updated so that they always call RooDatahist::weights() in the case. where the histogram is one dimensional. Since the old interpolation. implementation `RooDataHist::interpolateDim()` only supported up to second. order interpolation, it has been completely replaced by. `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`. in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11224
https://github.com/root-project/root/pull/11225:31,availability,avail,available,31,[eve7] Include json_fwd.hpp if available [v6.26]; Fixes https://github.com/root-project/root/issues/11130. Backport of https://github.com/root-project/root/pull/11205,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11225
https://github.com/root-project/root/pull/11225:31,reliability,availab,available,31,[eve7] Include json_fwd.hpp if available [v6.26]; Fixes https://github.com/root-project/root/issues/11130. Backport of https://github.com/root-project/root/pull/11205,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11225
https://github.com/root-project/root/pull/11225:31,safety,avail,available,31,[eve7] Include json_fwd.hpp if available [v6.26]; Fixes https://github.com/root-project/root/issues/11130. Backport of https://github.com/root-project/root/pull/11205,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11225
https://github.com/root-project/root/pull/11225:31,security,availab,available,31,[eve7] Include json_fwd.hpp if available [v6.26]; Fixes https://github.com/root-project/root/issues/11130. Backport of https://github.com/root-project/root/pull/11205,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11225
https://github.com/root-project/root/pull/11226:261,availability,failur,failures,261,[asan] Only preload ASan runtime for CMD; Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11226
https://github.com/root-project/root/pull/11226:261,deployability,fail,failures,261,[asan] Only preload ASan runtime for CMD; Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11226
https://github.com/root-project/root/pull/11226:199,modifiability,variab,variable,199,[asan] Only preload ASan runtime for CMD; Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11226
https://github.com/root-project/root/pull/11226:261,performance,failur,failures,261,[asan] Only preload ASan runtime for CMD; Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11226
https://github.com/root-project/root/pull/11226:261,reliability,fail,failures,261,[asan] Only preload ASan runtime for CMD; Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11226
https://github.com/root-project/root/pull/11226:54,safety,test,tests,54,[asan] Only preload ASan runtime for CMD; Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11226
https://github.com/root-project/root/pull/11226:256,safety,test,test,256,[asan] Only preload ASan runtime for CMD; Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11226
https://github.com/root-project/root/pull/11226:54,testability,test,tests,54,[asan] Only preload ASan runtime for CMD; Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11226
https://github.com/root-project/root/pull/11226:256,testability,test,test,256,[asan] Only preload ASan runtime for CMD; Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11226
https://github.com/root-project/root/pull/11226:166,usability,support,supports,166,[asan] Only preload ASan runtime for CMD; Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11226
https://github.com/root-project/root/pull/11227:309,availability,Error,Error,309,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:282,deployability,patch,patch,282,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:475,deployability,modul,module,475,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:517,deployability,build,build-foo,517,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:706,deployability,patch,patch,706,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:483,energy efficiency,Core,Core,483,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:401,integrability,rout,routine,401,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:475,modifiability,modul,module,475,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:34,performance,I/O,I/O,34,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:309,performance,Error,Error,309,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:5,safety,Avoid,Avoid,5,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:282,safety,patch,patch,282,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:309,safety,Error,Error,309,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:475,safety,modul,module,475,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:706,safety,patch,patch,706,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:282,security,patch,patch,282,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:706,security,patch,patch,706,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11227:309,usability,Error,Error,309,"[IO] Avoid nullptr dereference in I/O of std::pair; Given. ```cpp. // tree_with_pair.cpp. void tree_with_pair() {. TTree t(""t"", ""t"");. auto x = std::make_pair(42, 84);. //t.Branch(""topbranch"", &x, ""a/I:b/I""). t.Branch(""topbranch"", &x);. t.Fill();. t.Scan();. }. ```. , without this patch the output is:. ```. Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments. Execution of your code was aborted. In module 'Core':. /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]. size_t hint_offset = ((char*)&(p->second)) - (char*)p;. ^. ```. with this patch:. ```. Processing tree_with_pair.cpp... ************************************. * Row * topbranch * topbranch *. ************************************. * 0 * 42 * 84 *. ************************************. ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11227
https://github.com/root-project/root/pull/11228:31,availability,failur,failures,31,[RF] Fix remaining RooFit ASAN failures; * fixes a memory leak in `testSPlot`. * make sure the last normalization set is kept alive in PyROOT even when the last normalization set was implicitly created from a Python collection via the new Pythonizations. * make sure no derived coefficients are evaluated without normalization sets in `SPlot` to fix undefined behavior when calling `getVal()` and `RooAbsReal::getValV()` checks for the last normalization set that might not be alive anymore. * improving the code of the `RooLinearVar` that is used by the `SPlot`. Closes #11221.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11228
https://github.com/root-project/root/pull/11228:31,deployability,fail,failures,31,[RF] Fix remaining RooFit ASAN failures; * fixes a memory leak in `testSPlot`. * make sure the last normalization set is kept alive in PyROOT even when the last normalization set was implicitly created from a Python collection via the new Pythonizations. * make sure no derived coefficients are evaluated without normalization sets in `SPlot` to fix undefined behavior when calling `getVal()` and `RooAbsReal::getValV()` checks for the last normalization set that might not be alive anymore. * improving the code of the `RooLinearVar` that is used by the `SPlot`. Closes #11221.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11228
https://github.com/root-project/root/pull/11228:31,performance,failur,failures,31,[RF] Fix remaining RooFit ASAN failures; * fixes a memory leak in `testSPlot`. * make sure the last normalization set is kept alive in PyROOT even when the last normalization set was implicitly created from a Python collection via the new Pythonizations. * make sure no derived coefficients are evaluated without normalization sets in `SPlot` to fix undefined behavior when calling `getVal()` and `RooAbsReal::getValV()` checks for the last normalization set that might not be alive anymore. * improving the code of the `RooLinearVar` that is used by the `SPlot`. Closes #11221.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11228
https://github.com/root-project/root/pull/11228:51,performance,memor,memory,51,[RF] Fix remaining RooFit ASAN failures; * fixes a memory leak in `testSPlot`. * make sure the last normalization set is kept alive in PyROOT even when the last normalization set was implicitly created from a Python collection via the new Pythonizations. * make sure no derived coefficients are evaluated without normalization sets in `SPlot` to fix undefined behavior when calling `getVal()` and `RooAbsReal::getValV()` checks for the last normalization set that might not be alive anymore. * improving the code of the `RooLinearVar` that is used by the `SPlot`. Closes #11221.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11228
https://github.com/root-project/root/pull/11228:31,reliability,fail,failures,31,[RF] Fix remaining RooFit ASAN failures; * fixes a memory leak in `testSPlot`. * make sure the last normalization set is kept alive in PyROOT even when the last normalization set was implicitly created from a Python collection via the new Pythonizations. * make sure no derived coefficients are evaluated without normalization sets in `SPlot` to fix undefined behavior when calling `getVal()` and `RooAbsReal::getValV()` checks for the last normalization set that might not be alive anymore. * improving the code of the `RooLinearVar` that is used by the `SPlot`. Closes #11221.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11228
https://github.com/root-project/root/pull/11228:67,safety,test,testSPlot,67,[RF] Fix remaining RooFit ASAN failures; * fixes a memory leak in `testSPlot`. * make sure the last normalization set is kept alive in PyROOT even when the last normalization set was implicitly created from a Python collection via the new Pythonizations. * make sure no derived coefficients are evaluated without normalization sets in `SPlot` to fix undefined behavior when calling `getVal()` and `RooAbsReal::getValV()` checks for the last normalization set that might not be alive anymore. * improving the code of the `RooLinearVar` that is used by the `SPlot`. Closes #11221.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11228
https://github.com/root-project/root/pull/11228:67,testability,test,testSPlot,67,[RF] Fix remaining RooFit ASAN failures; * fixes a memory leak in `testSPlot`. * make sure the last normalization set is kept alive in PyROOT even when the last normalization set was implicitly created from a Python collection via the new Pythonizations. * make sure no derived coefficients are evaluated without normalization sets in `SPlot` to fix undefined behavior when calling `getVal()` and `RooAbsReal::getValV()` checks for the last normalization set that might not be alive anymore. * improving the code of the `RooLinearVar` that is used by the `SPlot`. Closes #11221.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11228
https://github.com/root-project/root/pull/11228:51,usability,memor,memory,51,[RF] Fix remaining RooFit ASAN failures; * fixes a memory leak in `testSPlot`. * make sure the last normalization set is kept alive in PyROOT even when the last normalization set was implicitly created from a Python collection via the new Pythonizations. * make sure no derived coefficients are evaluated without normalization sets in `SPlot` to fix undefined behavior when calling `getVal()` and `RooAbsReal::getValV()` checks for the last normalization set that might not be alive anymore. * improving the code of the `RooLinearVar` that is used by the `SPlot`. Closes #11221.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11228
https://github.com/root-project/root/pull/11228:360,usability,behavi,behavior,360,[RF] Fix remaining RooFit ASAN failures; * fixes a memory leak in `testSPlot`. * make sure the last normalization set is kept alive in PyROOT even when the last normalization set was implicitly created from a Python collection via the new Pythonizations. * make sure no derived coefficients are evaluated without normalization sets in `SPlot` to fix undefined behavior when calling `getVal()` and `RooAbsReal::getValV()` checks for the last normalization set that might not be alive anymore. * improving the code of the `RooLinearVar` that is used by the `SPlot`. Closes #11221.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11228
https://github.com/root-project/root/pull/11228:564,usability,Close,Closes,564,[RF] Fix remaining RooFit ASAN failures; * fixes a memory leak in `testSPlot`. * make sure the last normalization set is kept alive in PyROOT even when the last normalization set was implicitly created from a Python collection via the new Pythonizations. * make sure no derived coefficients are evaluated without normalization sets in `SPlot` to fix undefined behavior when calling `getVal()` and `RooAbsReal::getValV()` checks for the last normalization set that might not be alive anymore. * improving the code of the `RooLinearVar` that is used by the `SPlot`. Closes #11221.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11228
https://github.com/root-project/root/pull/11229:51,usability,document,documentation,51,"Fix the classic double ""the the"" typos in the ROOT documentation; Also fixes the related ` a a ` typos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11229
https://github.com/root-project/root/pull/11230:191,deployability,updat,updated,191,Kahan; # This Pull request:. ## Changes or fixes:. Replace the Sum and Mean methods by the Kahan Sum method to improve summation precision. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11230
https://github.com/root-project/root/pull/11230:161,safety,test,tested,161,Kahan; # This Pull request:. ## Changes or fixes:. Replace the Sum and Mean methods by the Kahan Sum method to improve summation precision. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11230
https://github.com/root-project/root/pull/11230:191,safety,updat,updated,191,Kahan; # This Pull request:. ## Changes or fixes:. Replace the Sum and Mean methods by the Kahan Sum method to improve summation precision. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11230
https://github.com/root-project/root/pull/11230:191,security,updat,updated,191,Kahan; # This Pull request:. ## Changes or fixes:. Replace the Sum and Mean methods by the Kahan Sum method to improve summation precision. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11230
https://github.com/root-project/root/pull/11230:161,testability,test,tested,161,Kahan; # This Pull request:. ## Changes or fixes:. Replace the Sum and Mean methods by the Kahan Sum method to improve summation precision. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11230
https://github.com/root-project/root/pull/11231:326,availability,down,download,326,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:755,availability,robust,robustness,755,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:137,deployability,Modul,Modules,137,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:444,deployability,depend,depends,444,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:629,deployability,Updat,Update,629,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:173,integrability,messag,message,173,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:444,integrability,depend,depends,444,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:125,interoperability,share,share,125,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:173,interoperability,messag,message,173,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:672,interoperability,specif,specify,672,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:137,modifiability,Modul,Modules,137,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:444,modifiability,depend,depends,444,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:340,performance,time,timestamps,340,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:404,performance,time,time,404,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:470,performance,content,contents,470,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:552,performance,time,timestamps,552,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:755,reliability,robust,robustness,755,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:137,safety,Modul,Modules,137,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:444,safety,depend,depends,444,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:629,safety,Updat,Update,629,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:743,safety,avoid,avoid,743,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:755,safety,robust,robustness,755,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:12,security,POLIC,POLICY,12,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:240,security,polic,policy,240,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:272,security,polic,policy,272,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:629,security,Updat,Update,629,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:444,testability,depend,depends,444,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:285,usability,behavi,behavior,285,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:377,usability,prefer,preferably,377,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:528,usability,behavi,behavior,528,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11231:660,usability,behavi,behavior,660,"[cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11231
https://github.com/root-project/root/pull/11232:276,deployability,version,version,276,"[DF] Avoid RVec construction+swap when possible; Rather than constructing a new RVec (as a view over the new. array data) at every event and swapping with the old one,. directly change the address of the old RVec. This provides a ~10% performance improvement for a synthetic. version of the dimuon tutorial adapted to only read (uncompressed). data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11232
https://github.com/root-project/root/pull/11232:307,energy efficiency,adapt,adapted,307,"[DF] Avoid RVec construction+swap when possible; Rather than constructing a new RVec (as a view over the new. array data) at every event and swapping with the old one,. directly change the address of the old RVec. This provides a ~10% performance improvement for a synthetic. version of the dimuon tutorial adapted to only read (uncompressed). data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11232
https://github.com/root-project/root/pull/11232:131,integrability,event,event,131,"[DF] Avoid RVec construction+swap when possible; Rather than constructing a new RVec (as a view over the new. array data) at every event and swapping with the old one,. directly change the address of the old RVec. This provides a ~10% performance improvement for a synthetic. version of the dimuon tutorial adapted to only read (uncompressed). data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11232
https://github.com/root-project/root/pull/11232:276,integrability,version,version,276,"[DF] Avoid RVec construction+swap when possible; Rather than constructing a new RVec (as a view over the new. array data) at every event and swapping with the old one,. directly change the address of the old RVec. This provides a ~10% performance improvement for a synthetic. version of the dimuon tutorial adapted to only read (uncompressed). data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11232
https://github.com/root-project/root/pull/11232:307,integrability,adapt,adapted,307,"[DF] Avoid RVec construction+swap when possible; Rather than constructing a new RVec (as a view over the new. array data) at every event and swapping with the old one,. directly change the address of the old RVec. This provides a ~10% performance improvement for a synthetic. version of the dimuon tutorial adapted to only read (uncompressed). data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11232
https://github.com/root-project/root/pull/11232:307,interoperability,adapt,adapted,307,"[DF] Avoid RVec construction+swap when possible; Rather than constructing a new RVec (as a view over the new. array data) at every event and swapping with the old one,. directly change the address of the old RVec. This provides a ~10% performance improvement for a synthetic. version of the dimuon tutorial adapted to only read (uncompressed). data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11232
https://github.com/root-project/root/pull/11232:276,modifiability,version,version,276,"[DF] Avoid RVec construction+swap when possible; Rather than constructing a new RVec (as a view over the new. array data) at every event and swapping with the old one,. directly change the address of the old RVec. This provides a ~10% performance improvement for a synthetic. version of the dimuon tutorial adapted to only read (uncompressed). data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11232
https://github.com/root-project/root/pull/11232:307,modifiability,adapt,adapted,307,"[DF] Avoid RVec construction+swap when possible; Rather than constructing a new RVec (as a view over the new. array data) at every event and swapping with the old one,. directly change the address of the old RVec. This provides a ~10% performance improvement for a synthetic. version of the dimuon tutorial adapted to only read (uncompressed). data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11232
https://github.com/root-project/root/pull/11232:235,performance,perform,performance,235,"[DF] Avoid RVec construction+swap when possible; Rather than constructing a new RVec (as a view over the new. array data) at every event and swapping with the old one,. directly change the address of the old RVec. This provides a ~10% performance improvement for a synthetic. version of the dimuon tutorial adapted to only read (uncompressed). data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11232
https://github.com/root-project/root/pull/11232:5,safety,Avoid,Avoid,5,"[DF] Avoid RVec construction+swap when possible; Rather than constructing a new RVec (as a view over the new. array data) at every event and swapping with the old one,. directly change the address of the old RVec. This provides a ~10% performance improvement for a synthetic. version of the dimuon tutorial adapted to only read (uncompressed). data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11232
https://github.com/root-project/root/pull/11232:235,usability,perform,performance,235,"[DF] Avoid RVec construction+swap when possible; Rather than constructing a new RVec (as a view over the new. array data) at every event and swapping with the old one,. directly change the address of the old RVec. This provides a ~10% performance improvement for a synthetic. version of the dimuon tutorial adapted to only read (uncompressed). data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11232
https://github.com/root-project/root/issues/11233:34,deployability,build,build,34,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:60,deployability,updat,updated,60,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:83,deployability,build,builds,83,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:122,deployability,updat,update,122,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:240,deployability,build,build,240,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:308,deployability,updat,updated,308,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:401,deployability,instal,installing,401,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:416,deployability,build,build,416,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:471,deployability,updat,update,471,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:535,deployability,build,build,535,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:574,deployability,build,build,574,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:586,deployability,instal,install,586,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:142,interoperability,bind,bindings,142,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:722,interoperability,bind,bindings,722,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:142,modifiability,bind,bindings,142,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:722,modifiability,bind,bindings,722,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:296,reliability,doe,doesn,296,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:60,safety,updat,updated,60,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:122,safety,updat,update,122,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:308,safety,updat,updated,308,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:471,safety,updat,update,471,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:60,security,updat,updated,60,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:122,security,updat,update,122,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:308,security,updat,updated,308,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:471,security,updat,update,471,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:955,testability,context,context,955,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/issues/11233:436,usability,behavi,behavior,436,"[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds; ### Describe the bug. When you update the code in `bindings/pyroot/pythonizations/python/ROOT/_pythonization` and recompile ROOT, the corresponding `build` directory (`root_build/lib/ROOT/_pythonization`) doesn't get updated, and consequently also not the `root_install/lib/ROOT/_pythonization` directory when installing the build. ### Expected behavior. It should be possible to update the Pythonizations in the source code, do an incremental build, and have them synced up in the `build` and `install` directories. ### To Reproduce. 1. Compile ROOT from source. 2. Change any `_pythonization` file in the source directory, e.g. `bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py`. 3. Rebuild ROOT. 4. Open `root_build/lib/ROOT/_pythonization/__init__.py`, and your changes won't be there. ### Setup. ROOT master on Arch Linux. ### Additional context. * The issue was also encountered by @hahnjo (https://github.com/root-project/root/issues/11221#issuecomment-1222123312). * It's important to fix this issue especially for students who work on the Pythonizations like in RooFit and TMVA, because it's quite confusing having to sync these `_pythonization` files manually in the development process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11233
https://github.com/root-project/root/pull/11234:0,safety,Avoid,Avoid,0,"Avoid using deperecated `RooCatType` in RooStats tutorials; With the rewrite of the RooCategory classes, the `RooCatType` was. deprecated (moved into RooFitLegacy) and should also not be used anymore. in tutorial code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11234
https://github.com/root-project/root/issues/11236:6,availability,failur,failure,6,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:158,availability,error,error,158,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:404,availability,Operat,Operating,404,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:0,deployability,build,build,0,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:6,deployability,fail,failure,6,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:73,deployability,build,build,73,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:180,deployability,log,log,180,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:298,deployability,build,build,298,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:333,deployability,version,version,333,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:83,energy efficiency,current,current,83,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:342,energy efficiency,current,current,342,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:164,integrability,messag,messages,164,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:333,integrability,version,version,333,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:164,interoperability,messag,messages,164,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:333,modifiability,version,version,333,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:6,performance,failur,failure,6,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:158,performance,error,error,158,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:6,reliability,fail,failure,6,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:158,safety,error,error,158,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:180,safety,log,log,180,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:180,security,log,log,180,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:180,testability,log,log,180,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:158,usability,error,error,158,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/issues/11236:284,usability,behavi,behavior,284,"build failure because of `nlohmann_json`; ### Describe the bug. I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior. The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d). 2. Operating system: Archlinux, gcc 12.1.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11236
https://github.com/root-project/root/pull/11237:63,energy efficiency,GPU,GPU,63,"[RF] Do initial pass in RooFitDriver::getValHeterogeneous() on GPU; So far, the first pass to measure the timing was done on the CPU and the. second on the GPU. This is not practical when only doing one evaluation. for development purposes. Hence the order is now reversed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11237
https://github.com/root-project/root/pull/11237:94,energy efficiency,measur,measure,94,"[RF] Do initial pass in RooFitDriver::getValHeterogeneous() on GPU; So far, the first pass to measure the timing was done on the CPU and the. second on the GPU. This is not practical when only doing one evaluation. for development purposes. Hence the order is now reversed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11237
https://github.com/root-project/root/pull/11237:129,energy efficiency,CPU,CPU,129,"[RF] Do initial pass in RooFitDriver::getValHeterogeneous() on GPU; So far, the first pass to measure the timing was done on the CPU and the. second on the GPU. This is not practical when only doing one evaluation. for development purposes. Hence the order is now reversed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11237
https://github.com/root-project/root/pull/11237:156,energy efficiency,GPU,GPU,156,"[RF] Do initial pass in RooFitDriver::getValHeterogeneous() on GPU; So far, the first pass to measure the timing was done on the CPU and the. second on the GPU. This is not practical when only doing one evaluation. for development purposes. Hence the order is now reversed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11237
https://github.com/root-project/root/pull/11237:63,performance,GPU,GPU,63,"[RF] Do initial pass in RooFitDriver::getValHeterogeneous() on GPU; So far, the first pass to measure the timing was done on the CPU and the. second on the GPU. This is not practical when only doing one evaluation. for development purposes. Hence the order is now reversed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11237
https://github.com/root-project/root/pull/11237:129,performance,CPU,CPU,129,"[RF] Do initial pass in RooFitDriver::getValHeterogeneous() on GPU; So far, the first pass to measure the timing was done on the CPU and the. second on the GPU. This is not practical when only doing one evaluation. for development purposes. Hence the order is now reversed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11237
https://github.com/root-project/root/pull/11237:156,performance,GPU,GPU,156,"[RF] Do initial pass in RooFitDriver::getValHeterogeneous() on GPU; So far, the first pass to measure the timing was done on the CPU and the. second on the GPU. This is not practical when only doing one evaluation. for development purposes. Hence the order is now reversed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11237
https://github.com/root-project/root/pull/11237:173,reliability,pra,practical,173,"[RF] Do initial pass in RooFitDriver::getValHeterogeneous() on GPU; So far, the first pass to measure the timing was done on the CPU and the. second on the GPU. This is not practical when only doing one evaluation. for development purposes. Hence the order is now reversed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11237
https://github.com/root-project/root/issues/11238:603,deployability,stack,stack,603,"an old bug in ROOT v6 TAB completion ?; There seems to be a very old bug in ROOT v6 TAB completion, which , as far as I can tell, was introduced in transition from v5 to v6. Suppose I have two files, a1111111222.txt and a22222222.txt in the current directory and am running a function **a(...)** below, passing to it the file names, one at a time. The first call looks as follows:. ```. root [1] void a(const char* fn, const char* a2) { printf(""%s\n"",fn); }. root [2] a(""a1111111222.txt"",""erased_by_tab_completion""). a1111111222.txt. ```. At this point, I retrieve the executed command from the command stack with an UP arrow and try to edit it in order to run on the second file. For that, I delete the part of the first file name, leaving only ""a2"" out of it, and do the TAB-complete:. ` root [3] a(""a2<TAB>"",""erased_by_tab_completion"")`. The completion works, and the ""a22222222.txt"" string shows on the command line. . However the rest of the command line, the "" erased_by_tab_completion\"")"" part of it, gets erased. . When that part is long, the result is quite disappointing, so I wonder if the problem has been reported before. . -- thanks for looking into it, regards, Pavel Murat.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11238
https://github.com/root-project/root/issues/11238:241,energy efficiency,current,current,241,"an old bug in ROOT v6 TAB completion ?; There seems to be a very old bug in ROOT v6 TAB completion, which , as far as I can tell, was introduced in transition from v5 to v6. Suppose I have two files, a1111111222.txt and a22222222.txt in the current directory and am running a function **a(...)** below, passing to it the file names, one at a time. The first call looks as follows:. ```. root [1] void a(const char* fn, const char* a2) { printf(""%s\n"",fn); }. root [2] a(""a1111111222.txt"",""erased_by_tab_completion""). a1111111222.txt. ```. At this point, I retrieve the executed command from the command stack with an UP arrow and try to edit it in order to run on the second file. For that, I delete the part of the first file name, leaving only ""a2"" out of it, and do the TAB-complete:. ` root [3] a(""a2<TAB>"",""erased_by_tab_completion"")`. The completion works, and the ""a22222222.txt"" string shows on the command line. . However the rest of the command line, the "" erased_by_tab_completion\"")"" part of it, gets erased. . When that part is long, the result is quite disappointing, so I wonder if the problem has been reported before. . -- thanks for looking into it, regards, Pavel Murat.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11238
https://github.com/root-project/root/issues/11238:342,performance,time,time,342,"an old bug in ROOT v6 TAB completion ?; There seems to be a very old bug in ROOT v6 TAB completion, which , as far as I can tell, was introduced in transition from v5 to v6. Suppose I have two files, a1111111222.txt and a22222222.txt in the current directory and am running a function **a(...)** below, passing to it the file names, one at a time. The first call looks as follows:. ```. root [1] void a(const char* fn, const char* a2) { printf(""%s\n"",fn); }. root [2] a(""a1111111222.txt"",""erased_by_tab_completion""). a1111111222.txt. ```. At this point, I retrieve the executed command from the command stack with an UP arrow and try to edit it in order to run on the second file. For that, I delete the part of the first file name, leaving only ""a2"" out of it, and do the TAB-complete:. ` root [3] a(""a2<TAB>"",""erased_by_tab_completion"")`. The completion works, and the ""a22222222.txt"" string shows on the command line. . However the rest of the command line, the "" erased_by_tab_completion\"")"" part of it, gets erased. . When that part is long, the result is quite disappointing, so I wonder if the problem has been reported before. . -- thanks for looking into it, regards, Pavel Murat.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11238
https://github.com/root-project/root/issues/11238:26,safety,compl,completion,26,"an old bug in ROOT v6 TAB completion ?; There seems to be a very old bug in ROOT v6 TAB completion, which , as far as I can tell, was introduced in transition from v5 to v6. Suppose I have two files, a1111111222.txt and a22222222.txt in the current directory and am running a function **a(...)** below, passing to it the file names, one at a time. The first call looks as follows:. ```. root [1] void a(const char* fn, const char* a2) { printf(""%s\n"",fn); }. root [2] a(""a1111111222.txt"",""erased_by_tab_completion""). a1111111222.txt. ```. At this point, I retrieve the executed command from the command stack with an UP arrow and try to edit it in order to run on the second file. For that, I delete the part of the first file name, leaving only ""a2"" out of it, and do the TAB-complete:. ` root [3] a(""a2<TAB>"",""erased_by_tab_completion"")`. The completion works, and the ""a22222222.txt"" string shows on the command line. . However the rest of the command line, the "" erased_by_tab_completion\"")"" part of it, gets erased. . When that part is long, the result is quite disappointing, so I wonder if the problem has been reported before. . -- thanks for looking into it, regards, Pavel Murat.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11238
https://github.com/root-project/root/issues/11238:88,safety,compl,completion,88,"an old bug in ROOT v6 TAB completion ?; There seems to be a very old bug in ROOT v6 TAB completion, which , as far as I can tell, was introduced in transition from v5 to v6. Suppose I have two files, a1111111222.txt and a22222222.txt in the current directory and am running a function **a(...)** below, passing to it the file names, one at a time. The first call looks as follows:. ```. root [1] void a(const char* fn, const char* a2) { printf(""%s\n"",fn); }. root [2] a(""a1111111222.txt"",""erased_by_tab_completion""). a1111111222.txt. ```. At this point, I retrieve the executed command from the command stack with an UP arrow and try to edit it in order to run on the second file. For that, I delete the part of the first file name, leaving only ""a2"" out of it, and do the TAB-complete:. ` root [3] a(""a2<TAB>"",""erased_by_tab_completion"")`. The completion works, and the ""a22222222.txt"" string shows on the command line. . However the rest of the command line, the "" erased_by_tab_completion\"")"" part of it, gets erased. . When that part is long, the result is quite disappointing, so I wonder if the problem has been reported before. . -- thanks for looking into it, regards, Pavel Murat.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11238
https://github.com/root-project/root/issues/11238:777,safety,compl,complete,777,"an old bug in ROOT v6 TAB completion ?; There seems to be a very old bug in ROOT v6 TAB completion, which , as far as I can tell, was introduced in transition from v5 to v6. Suppose I have two files, a1111111222.txt and a22222222.txt in the current directory and am running a function **a(...)** below, passing to it the file names, one at a time. The first call looks as follows:. ```. root [1] void a(const char* fn, const char* a2) { printf(""%s\n"",fn); }. root [2] a(""a1111111222.txt"",""erased_by_tab_completion""). a1111111222.txt. ```. At this point, I retrieve the executed command from the command stack with an UP arrow and try to edit it in order to run on the second file. For that, I delete the part of the first file name, leaving only ""a2"" out of it, and do the TAB-complete:. ` root [3] a(""a2<TAB>"",""erased_by_tab_completion"")`. The completion works, and the ""a22222222.txt"" string shows on the command line. . However the rest of the command line, the "" erased_by_tab_completion\"")"" part of it, gets erased. . When that part is long, the result is quite disappointing, so I wonder if the problem has been reported before. . -- thanks for looking into it, regards, Pavel Murat.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11238
https://github.com/root-project/root/issues/11238:845,safety,compl,completion,845,"an old bug in ROOT v6 TAB completion ?; There seems to be a very old bug in ROOT v6 TAB completion, which , as far as I can tell, was introduced in transition from v5 to v6. Suppose I have two files, a1111111222.txt and a22222222.txt in the current directory and am running a function **a(...)** below, passing to it the file names, one at a time. The first call looks as follows:. ```. root [1] void a(const char* fn, const char* a2) { printf(""%s\n"",fn); }. root [2] a(""a1111111222.txt"",""erased_by_tab_completion""). a1111111222.txt. ```. At this point, I retrieve the executed command from the command stack with an UP arrow and try to edit it in order to run on the second file. For that, I delete the part of the first file name, leaving only ""a2"" out of it, and do the TAB-complete:. ` root [3] a(""a2<TAB>"",""erased_by_tab_completion"")`. The completion works, and the ""a22222222.txt"" string shows on the command line. . However the rest of the command line, the "" erased_by_tab_completion\"")"" part of it, gets erased. . When that part is long, the result is quite disappointing, so I wonder if the problem has been reported before. . -- thanks for looking into it, regards, Pavel Murat.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11238
https://github.com/root-project/root/issues/11238:26,security,compl,completion,26,"an old bug in ROOT v6 TAB completion ?; There seems to be a very old bug in ROOT v6 TAB completion, which , as far as I can tell, was introduced in transition from v5 to v6. Suppose I have two files, a1111111222.txt and a22222222.txt in the current directory and am running a function **a(...)** below, passing to it the file names, one at a time. The first call looks as follows:. ```. root [1] void a(const char* fn, const char* a2) { printf(""%s\n"",fn); }. root [2] a(""a1111111222.txt"",""erased_by_tab_completion""). a1111111222.txt. ```. At this point, I retrieve the executed command from the command stack with an UP arrow and try to edit it in order to run on the second file. For that, I delete the part of the first file name, leaving only ""a2"" out of it, and do the TAB-complete:. ` root [3] a(""a2<TAB>"",""erased_by_tab_completion"")`. The completion works, and the ""a22222222.txt"" string shows on the command line. . However the rest of the command line, the "" erased_by_tab_completion\"")"" part of it, gets erased. . When that part is long, the result is quite disappointing, so I wonder if the problem has been reported before. . -- thanks for looking into it, regards, Pavel Murat.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11238
https://github.com/root-project/root/issues/11238:88,security,compl,completion,88,"an old bug in ROOT v6 TAB completion ?; There seems to be a very old bug in ROOT v6 TAB completion, which , as far as I can tell, was introduced in transition from v5 to v6. Suppose I have two files, a1111111222.txt and a22222222.txt in the current directory and am running a function **a(...)** below, passing to it the file names, one at a time. The first call looks as follows:. ```. root [1] void a(const char* fn, const char* a2) { printf(""%s\n"",fn); }. root [2] a(""a1111111222.txt"",""erased_by_tab_completion""). a1111111222.txt. ```. At this point, I retrieve the executed command from the command stack with an UP arrow and try to edit it in order to run on the second file. For that, I delete the part of the first file name, leaving only ""a2"" out of it, and do the TAB-complete:. ` root [3] a(""a2<TAB>"",""erased_by_tab_completion"")`. The completion works, and the ""a22222222.txt"" string shows on the command line. . However the rest of the command line, the "" erased_by_tab_completion\"")"" part of it, gets erased. . When that part is long, the result is quite disappointing, so I wonder if the problem has been reported before. . -- thanks for looking into it, regards, Pavel Murat.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11238
https://github.com/root-project/root/issues/11238:777,security,compl,complete,777,"an old bug in ROOT v6 TAB completion ?; There seems to be a very old bug in ROOT v6 TAB completion, which , as far as I can tell, was introduced in transition from v5 to v6. Suppose I have two files, a1111111222.txt and a22222222.txt in the current directory and am running a function **a(...)** below, passing to it the file names, one at a time. The first call looks as follows:. ```. root [1] void a(const char* fn, const char* a2) { printf(""%s\n"",fn); }. root [2] a(""a1111111222.txt"",""erased_by_tab_completion""). a1111111222.txt. ```. At this point, I retrieve the executed command from the command stack with an UP arrow and try to edit it in order to run on the second file. For that, I delete the part of the first file name, leaving only ""a2"" out of it, and do the TAB-complete:. ` root [3] a(""a2<TAB>"",""erased_by_tab_completion"")`. The completion works, and the ""a22222222.txt"" string shows on the command line. . However the rest of the command line, the "" erased_by_tab_completion\"")"" part of it, gets erased. . When that part is long, the result is quite disappointing, so I wonder if the problem has been reported before. . -- thanks for looking into it, regards, Pavel Murat.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11238
https://github.com/root-project/root/issues/11238:845,security,compl,completion,845,"an old bug in ROOT v6 TAB completion ?; There seems to be a very old bug in ROOT v6 TAB completion, which , as far as I can tell, was introduced in transition from v5 to v6. Suppose I have two files, a1111111222.txt and a22222222.txt in the current directory and am running a function **a(...)** below, passing to it the file names, one at a time. The first call looks as follows:. ```. root [1] void a(const char* fn, const char* a2) { printf(""%s\n"",fn); }. root [2] a(""a1111111222.txt"",""erased_by_tab_completion""). a1111111222.txt. ```. At this point, I retrieve the executed command from the command stack with an UP arrow and try to edit it in order to run on the second file. For that, I delete the part of the first file name, leaving only ""a2"" out of it, and do the TAB-complete:. ` root [3] a(""a2<TAB>"",""erased_by_tab_completion"")`. The completion works, and the ""a22222222.txt"" string shows on the command line. . However the rest of the command line, the "" erased_by_tab_completion\"")"" part of it, gets erased. . When that part is long, the result is quite disappointing, so I wonder if the problem has been reported before. . -- thanks for looking into it, regards, Pavel Murat.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11238
https://github.com/root-project/root/issues/11238:578,usability,command,command,578,"an old bug in ROOT v6 TAB completion ?; There seems to be a very old bug in ROOT v6 TAB completion, which , as far as I can tell, was introduced in transition from v5 to v6. Suppose I have two files, a1111111222.txt and a22222222.txt in the current directory and am running a function **a(...)** below, passing to it the file names, one at a time. The first call looks as follows:. ```. root [1] void a(const char* fn, const char* a2) { printf(""%s\n"",fn); }. root [2] a(""a1111111222.txt"",""erased_by_tab_completion""). a1111111222.txt. ```. At this point, I retrieve the executed command from the command stack with an UP arrow and try to edit it in order to run on the second file. For that, I delete the part of the first file name, leaving only ""a2"" out of it, and do the TAB-complete:. ` root [3] a(""a2<TAB>"",""erased_by_tab_completion"")`. The completion works, and the ""a22222222.txt"" string shows on the command line. . However the rest of the command line, the "" erased_by_tab_completion\"")"" part of it, gets erased. . When that part is long, the result is quite disappointing, so I wonder if the problem has been reported before. . -- thanks for looking into it, regards, Pavel Murat.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11238
https://github.com/root-project/root/issues/11238:595,usability,command,command,595,"an old bug in ROOT v6 TAB completion ?; There seems to be a very old bug in ROOT v6 TAB completion, which , as far as I can tell, was introduced in transition from v5 to v6. Suppose I have two files, a1111111222.txt and a22222222.txt in the current directory and am running a function **a(...)** below, passing to it the file names, one at a time. The first call looks as follows:. ```. root [1] void a(const char* fn, const char* a2) { printf(""%s\n"",fn); }. root [2] a(""a1111111222.txt"",""erased_by_tab_completion""). a1111111222.txt. ```. At this point, I retrieve the executed command from the command stack with an UP arrow and try to edit it in order to run on the second file. For that, I delete the part of the first file name, leaving only ""a2"" out of it, and do the TAB-complete:. ` root [3] a(""a2<TAB>"",""erased_by_tab_completion"")`. The completion works, and the ""a22222222.txt"" string shows on the command line. . However the rest of the command line, the "" erased_by_tab_completion\"")"" part of it, gets erased. . When that part is long, the result is quite disappointing, so I wonder if the problem has been reported before. . -- thanks for looking into it, regards, Pavel Murat.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11238
https://github.com/root-project/root/issues/11238:907,usability,command,command,907,"an old bug in ROOT v6 TAB completion ?; There seems to be a very old bug in ROOT v6 TAB completion, which , as far as I can tell, was introduced in transition from v5 to v6. Suppose I have two files, a1111111222.txt and a22222222.txt in the current directory and am running a function **a(...)** below, passing to it the file names, one at a time. The first call looks as follows:. ```. root [1] void a(const char* fn, const char* a2) { printf(""%s\n"",fn); }. root [2] a(""a1111111222.txt"",""erased_by_tab_completion""). a1111111222.txt. ```. At this point, I retrieve the executed command from the command stack with an UP arrow and try to edit it in order to run on the second file. For that, I delete the part of the first file name, leaving only ""a2"" out of it, and do the TAB-complete:. ` root [3] a(""a2<TAB>"",""erased_by_tab_completion"")`. The completion works, and the ""a22222222.txt"" string shows on the command line. . However the rest of the command line, the "" erased_by_tab_completion\"")"" part of it, gets erased. . When that part is long, the result is quite disappointing, so I wonder if the problem has been reported before. . -- thanks for looking into it, regards, Pavel Murat.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11238
https://github.com/root-project/root/issues/11238:947,usability,command,command,947,"an old bug in ROOT v6 TAB completion ?; There seems to be a very old bug in ROOT v6 TAB completion, which , as far as I can tell, was introduced in transition from v5 to v6. Suppose I have two files, a1111111222.txt and a22222222.txt in the current directory and am running a function **a(...)** below, passing to it the file names, one at a time. The first call looks as follows:. ```. root [1] void a(const char* fn, const char* a2) { printf(""%s\n"",fn); }. root [2] a(""a1111111222.txt"",""erased_by_tab_completion""). a1111111222.txt. ```. At this point, I retrieve the executed command from the command stack with an UP arrow and try to edit it in order to run on the second file. For that, I delete the part of the first file name, leaving only ""a2"" out of it, and do the TAB-complete:. ` root [3] a(""a2<TAB>"",""erased_by_tab_completion"")`. The completion works, and the ""a22222222.txt"" string shows on the command line. . However the rest of the command line, the "" erased_by_tab_completion\"")"" part of it, gets erased. . When that part is long, the result is quite disappointing, so I wonder if the problem has been reported before. . -- thanks for looking into it, regards, Pavel Murat.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11238
https://github.com/root-project/root/issues/11239:6,availability,failur,failure,6,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:74,availability,failur,failure,74,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:139,availability,error,error,139,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2663,availability,error,error,2663,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2803,availability,error,error,2803,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:0,deployability,Build,Build,0,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:6,deployability,fail,failure,6,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:40,deployability,build,builds,40,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:68,deployability,build,build,68,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:74,deployability,fail,failure,74,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:116,deployability,build,build,116,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:188,deployability,stage,stage,188,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:310,deployability,build,build-nobrotli,310,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2125,deployability,build,build-nobrotli,2125,"Files/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively insta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2903,deployability,instal,installing,2903,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:3054,deployability,build,build,3054,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:3127,deployability,instal,installed,3127,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:3151,deployability,build,builds,3151,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:246,interoperability,share,shared,246,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:619,interoperability,share,shared,619,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2876,interoperability,specif,specifically,2876,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2932,modifiability,pac,package,2932,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:6,performance,failur,failure,6,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:74,performance,failur,failure,74,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:139,performance,error,error,139,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2663,performance,error,error,2663,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2803,performance,error,error,2803,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:6,reliability,fail,failure,6,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:74,reliability,fail,failure,74,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:139,safety,error,error,139,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2663,safety,error,error,2663,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2803,safety,error,error,2803,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2812,safety,avoid,avoided,2812,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:600,security,hash,hash-style,600,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:139,usability,error,error,139,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself; I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```. [ 51%] Linking CXX shared library ../../lib/libGraf.so. 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1. 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2663,usability,error,error,2663,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2689,usability,statu,status,2689,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/issues/11239:2803,usability,error,error,2803,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so. 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':. 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'. 	collect2: error: ld returned 1 exit status. ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11239
https://github.com/root-project/root/pull/11241:67,deployability,modul,module,67,Distrdf minor improvements; A bunch of improvements to distributed module:. 1. Add all sources to the `py_compile` command in cmake. 2. Use postponed evaluation for type hints and avoid implicit import ROOT. 3. Test that `import DistRDF` has no side-effects: no implicit importing of ROOT and no implicit change of environment variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11241
https://github.com/root-project/root/pull/11241:55,interoperability,distribut,distributed,55,Distrdf minor improvements; A bunch of improvements to distributed module:. 1. Add all sources to the `py_compile` command in cmake. 2. Use postponed evaluation for type hints and avoid implicit import ROOT. 3. Test that `import DistRDF` has no side-effects: no implicit importing of ROOT and no implicit change of environment variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11241
https://github.com/root-project/root/pull/11241:67,modifiability,modul,module,67,Distrdf minor improvements; A bunch of improvements to distributed module:. 1. Add all sources to the `py_compile` command in cmake. 2. Use postponed evaluation for type hints and avoid implicit import ROOT. 3. Test that `import DistRDF` has no side-effects: no implicit importing of ROOT and no implicit change of environment variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11241
https://github.com/root-project/root/pull/11241:327,modifiability,variab,variables,327,Distrdf minor improvements; A bunch of improvements to distributed module:. 1. Add all sources to the `py_compile` command in cmake. 2. Use postponed evaluation for type hints and avoid implicit import ROOT. 3. Test that `import DistRDF` has no side-effects: no implicit importing of ROOT and no implicit change of environment variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11241
https://github.com/root-project/root/pull/11241:67,safety,modul,module,67,Distrdf minor improvements; A bunch of improvements to distributed module:. 1. Add all sources to the `py_compile` command in cmake. 2. Use postponed evaluation for type hints and avoid implicit import ROOT. 3. Test that `import DistRDF` has no side-effects: no implicit importing of ROOT and no implicit change of environment variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11241
https://github.com/root-project/root/pull/11241:180,safety,avoid,avoid,180,Distrdf minor improvements; A bunch of improvements to distributed module:. 1. Add all sources to the `py_compile` command in cmake. 2. Use postponed evaluation for type hints and avoid implicit import ROOT. 3. Test that `import DistRDF` has no side-effects: no implicit importing of ROOT and no implicit change of environment variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11241
https://github.com/root-project/root/pull/11241:211,safety,Test,Test,211,Distrdf minor improvements; A bunch of improvements to distributed module:. 1. Add all sources to the `py_compile` command in cmake. 2. Use postponed evaluation for type hints and avoid implicit import ROOT. 3. Test that `import DistRDF` has no side-effects: no implicit importing of ROOT and no implicit change of environment variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11241
https://github.com/root-project/root/pull/11241:211,testability,Test,Test,211,Distrdf minor improvements; A bunch of improvements to distributed module:. 1. Add all sources to the `py_compile` command in cmake. 2. Use postponed evaluation for type hints and avoid implicit import ROOT. 3. Test that `import DistRDF` has no side-effects: no implicit importing of ROOT and no implicit change of environment variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11241
https://github.com/root-project/root/pull/11241:115,usability,command,command,115,Distrdf minor improvements; A bunch of improvements to distributed module:. 1. Add all sources to the `py_compile` command in cmake. 2. Use postponed evaluation for type hints and avoid implicit import ROOT. 3. Test that `import DistRDF` has no side-effects: no implicit importing of ROOT and no implicit change of environment variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11241
https://github.com/root-project/root/pull/11241:170,usability,hint,hints,170,Distrdf minor improvements; A bunch of improvements to distributed module:. 1. Add all sources to the `py_compile` command in cmake. 2. Use postponed evaluation for type hints and avoid implicit import ROOT. 3. Test that `import DistRDF` has no side-effects: no implicit importing of ROOT and no implicit change of environment variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11241
https://github.com/root-project/root/pull/11242:15,usability,support,support,15,Disable brotli support feature in Freetype (not only on Apple); Should fix #11239.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11242
https://github.com/root-project/root/pull/11243:32,modifiability,paramet,parameter,32,libAfterImage: Properly set len parameter for GifAddExtensionBlock and iterate extensions; # This Pull request:. Is a resubmit of #10999 with additional needed changes (as discussed in that original PR). ## Changes or fixes:. Fixes: #10990. ## Checklist:. - [x] tested changes locally. This PR fixes #10990.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11243
https://github.com/root-project/root/pull/11243:79,modifiability,extens,extensions,79,libAfterImage: Properly set len parameter for GifAddExtensionBlock and iterate extensions; # This Pull request:. Is a resubmit of #10999 with additional needed changes (as discussed in that original PR). ## Changes or fixes:. Fixes: #10990. ## Checklist:. - [x] tested changes locally. This PR fixes #10990.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11243
https://github.com/root-project/root/pull/11243:262,safety,test,tested,262,libAfterImage: Properly set len parameter for GifAddExtensionBlock and iterate extensions; # This Pull request:. Is a resubmit of #10999 with additional needed changes (as discussed in that original PR). ## Changes or fixes:. Fixes: #10990. ## Checklist:. - [x] tested changes locally. This PR fixes #10990.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11243
https://github.com/root-project/root/pull/11243:262,testability,test,tested,262,libAfterImage: Properly set len parameter for GifAddExtensionBlock and iterate extensions; # This Pull request:. Is a resubmit of #10999 with additional needed changes (as discussed in that original PR). ## Changes or fixes:. Fixes: #10990. ## Checklist:. - [x] tested changes locally. This PR fixes #10990.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11243
https://github.com/root-project/root/issues/11245:2000,availability,Operat,Operating,2000,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:2075,availability,down,download,2075,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1405,deployability,build,build,1405,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1988,deployability,version,version,1988,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:2057,deployability,instal,install,2057,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:2122,deployability,Version,Version,2122,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1988,integrability,version,version,1988,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:2122,integrability,Version,Version,2122,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1839,interoperability,convers,conversion,1839,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1826,modifiability,interm,intermediate,1826,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1988,modifiability,version,version,1988,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:2122,modifiability,Version,Version,2122,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1812,performance,perform,performing,1812,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:5,reliability,doe,doesn,5,"hadd doesn't recompress for different algorithm at same level; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:615,safety,input,input,615,"hadd doesn't recompress for different algorithm at same level; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:765,safety,input,input,765,"hadd doesn't recompress for different algorithm at same level; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1085,safety,input,input,1085,"tes. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / yo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1359,safety,input,input,1359,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1780,safety,valid,validate,1780,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1780,security,validat,validate,1780,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:2213,testability,context,context,2213,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:2242,testability,context,context,2242,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:453,usability,clear,clear,453,"hadd doesn't recompress for different algorithm at same level; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:501,usability,behavi,behavior,501,"hadd doesn't recompress for different algorithm at same level; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:615,usability,input,input,615,"hadd doesn't recompress for different algorithm at same level; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:765,usability,input,input,765,"hadd doesn't recompress for different algorithm at same level; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:858,usability,behavi,behavior,858,"hadd doesn't recompress for different algorithm at same level; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:876,usability,clear,clear,876,"hadd doesn't recompress for different algorithm at same level; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1085,usability,input,input,1085,"tes. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / yo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1214,usability,behavi,behavior,1214,"rn.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional conte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1359,usability,input,input,1359,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1799,usability,behavi,behaviour,1799,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/issues/11245:1812,usability,perform,performing,1812,"ts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341). 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:. `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`. 3. You can validate the weird behaviour by performing an intermediate conversion:. `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version 6.27/01. 2. Linux CentOS 8 + Linux Debian 11. 3. Built from source. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11245
https://github.com/root-project/root/pull/11246:333,availability,down,download,333,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:762,availability,robust,robustness,762,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:144,deployability,Modul,Modules,144,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:451,deployability,depend,depends,451,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:636,deployability,Updat,Update,636,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:180,integrability,messag,message,180,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:451,integrability,depend,depends,451,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:132,interoperability,share,share,132,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:180,interoperability,messag,message,180,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:679,interoperability,specif,specify,679,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:144,modifiability,Modul,Modules,144,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:451,modifiability,depend,depends,451,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:347,performance,time,timestamps,347,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:411,performance,time,time,411,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:477,performance,content,contents,477,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:559,performance,time,timestamps,559,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:762,reliability,robust,robustness,762,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:144,safety,Modul,Modules,144,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:451,safety,depend,depends,451,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:636,safety,Updat,Update,636,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:750,safety,avoid,avoid,750,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:762,safety,robust,robustness,762,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:19,security,POLIC,POLICY,19,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:247,security,polic,policy,247,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:279,security,polic,policy,279,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:636,security,Updat,Update,636,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:451,testability,depend,depends,451,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:292,usability,behavi,behavior,292,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:384,usability,prefer,preferably,384,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:535,usability,behavi,behavior,535,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11246:667,usability,behavi,behavior,667,"[v6-26][cmake] Add POLICY CMP0135 and set it to NEW; Fixes the following warning with CMake 3.24:. ```. CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):. The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is. not set. The policy's OLD behavior will be used. When using a URL. download, the timestamps of extracted files should preferably be that of. the time of extraction, otherwise code that depends on the extracted. contents might not be rebuilt if the URL changes. The OLD behavior. preserves the timestamps from the archive instead, but this is usually not. what you want. Update your project to the NEW behavior or specify the. DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this. robustness issue. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11246
https://github.com/root-project/root/pull/11247:23,usability,support,support,23,[v6-26] Disable brotli support feature in Freetype (not only on Apple) (#11242); * Disable brotli support feature in Freetype (not only on Apple). Should fix #11239. * Remove code instead of commenting it out.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11247
https://github.com/root-project/root/pull/11247:98,usability,support,support,98,[v6-26] Disable brotli support feature in Freetype (not only on Apple) (#11242); * Disable brotli support feature in Freetype (not only on Apple). Should fix #11239. * Remove code instead of commenting it out.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11247
https://github.com/root-project/root/pull/11248:201,availability,avail,available,201,"[DF] Re-add a useful transitive include; RDFHelpers.hxx provides ROOT::RDF::RunGraphs(std::vector<RResultHandle>). In order for the handy implicit conversion from RResultPtr<T> to. RResultHandle to be available for client code that include. RDFHelpers.hxx, it is not enough that this header forward-declares. RResultHandle, but it needs to transitively provide the whole type. declaration. In practice, before 8bbd543f3d56, this worked fine:. ```. ... RunGraphs({resultptr1, resultptr2});. ```. while after that commit it would require an extra `#include. <ROOT/RResultHandle.hxx>`. This patch restores the previous situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11248
https://github.com/root-project/root/pull/11248:594,availability,restor,restores,594,"[DF] Re-add a useful transitive include; RDFHelpers.hxx provides ROOT::RDF::RunGraphs(std::vector<RResultHandle>). In order for the handy implicit conversion from RResultPtr<T> to. RResultHandle to be available for client code that include. RDFHelpers.hxx, it is not enough that this header forward-declares. RResultHandle, but it needs to transitively provide the whole type. declaration. In practice, before 8bbd543f3d56, this worked fine:. ```. ... RunGraphs({resultptr1, resultptr2});. ```. while after that commit it would require an extra `#include. <ROOT/RResultHandle.hxx>`. This patch restores the previous situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11248
https://github.com/root-project/root/pull/11248:588,deployability,patch,patch,588,"[DF] Re-add a useful transitive include; RDFHelpers.hxx provides ROOT::RDF::RunGraphs(std::vector<RResultHandle>). In order for the handy implicit conversion from RResultPtr<T> to. RResultHandle to be available for client code that include. RDFHelpers.hxx, it is not enough that this header forward-declares. RResultHandle, but it needs to transitively provide the whole type. declaration. In practice, before 8bbd543f3d56, this worked fine:. ```. ... RunGraphs({resultptr1, resultptr2});. ```. while after that commit it would require an extra `#include. <ROOT/RResultHandle.hxx>`. This patch restores the previous situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11248
https://github.com/root-project/root/pull/11248:147,interoperability,convers,conversion,147,"[DF] Re-add a useful transitive include; RDFHelpers.hxx provides ROOT::RDF::RunGraphs(std::vector<RResultHandle>). In order for the handy implicit conversion from RResultPtr<T> to. RResultHandle to be available for client code that include. RDFHelpers.hxx, it is not enough that this header forward-declares. RResultHandle, but it needs to transitively provide the whole type. declaration. In practice, before 8bbd543f3d56, this worked fine:. ```. ... RunGraphs({resultptr1, resultptr2});. ```. while after that commit it would require an extra `#include. <ROOT/RResultHandle.hxx>`. This patch restores the previous situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11248
https://github.com/root-project/root/pull/11248:201,reliability,availab,available,201,"[DF] Re-add a useful transitive include; RDFHelpers.hxx provides ROOT::RDF::RunGraphs(std::vector<RResultHandle>). In order for the handy implicit conversion from RResultPtr<T> to. RResultHandle to be available for client code that include. RDFHelpers.hxx, it is not enough that this header forward-declares. RResultHandle, but it needs to transitively provide the whole type. declaration. In practice, before 8bbd543f3d56, this worked fine:. ```. ... RunGraphs({resultptr1, resultptr2});. ```. while after that commit it would require an extra `#include. <ROOT/RResultHandle.hxx>`. This patch restores the previous situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11248
https://github.com/root-project/root/pull/11248:393,reliability,pra,practice,393,"[DF] Re-add a useful transitive include; RDFHelpers.hxx provides ROOT::RDF::RunGraphs(std::vector<RResultHandle>). In order for the handy implicit conversion from RResultPtr<T> to. RResultHandle to be available for client code that include. RDFHelpers.hxx, it is not enough that this header forward-declares. RResultHandle, but it needs to transitively provide the whole type. declaration. In practice, before 8bbd543f3d56, this worked fine:. ```. ... RunGraphs({resultptr1, resultptr2});. ```. while after that commit it would require an extra `#include. <ROOT/RResultHandle.hxx>`. This patch restores the previous situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11248
https://github.com/root-project/root/pull/11248:594,reliability,restor,restores,594,"[DF] Re-add a useful transitive include; RDFHelpers.hxx provides ROOT::RDF::RunGraphs(std::vector<RResultHandle>). In order for the handy implicit conversion from RResultPtr<T> to. RResultHandle to be available for client code that include. RDFHelpers.hxx, it is not enough that this header forward-declares. RResultHandle, but it needs to transitively provide the whole type. declaration. In practice, before 8bbd543f3d56, this worked fine:. ```. ... RunGraphs({resultptr1, resultptr2});. ```. while after that commit it would require an extra `#include. <ROOT/RResultHandle.hxx>`. This patch restores the previous situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11248
https://github.com/root-project/root/pull/11248:201,safety,avail,available,201,"[DF] Re-add a useful transitive include; RDFHelpers.hxx provides ROOT::RDF::RunGraphs(std::vector<RResultHandle>). In order for the handy implicit conversion from RResultPtr<T> to. RResultHandle to be available for client code that include. RDFHelpers.hxx, it is not enough that this header forward-declares. RResultHandle, but it needs to transitively provide the whole type. declaration. In practice, before 8bbd543f3d56, this worked fine:. ```. ... RunGraphs({resultptr1, resultptr2});. ```. while after that commit it would require an extra `#include. <ROOT/RResultHandle.hxx>`. This patch restores the previous situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11248
https://github.com/root-project/root/pull/11248:588,safety,patch,patch,588,"[DF] Re-add a useful transitive include; RDFHelpers.hxx provides ROOT::RDF::RunGraphs(std::vector<RResultHandle>). In order for the handy implicit conversion from RResultPtr<T> to. RResultHandle to be available for client code that include. RDFHelpers.hxx, it is not enough that this header forward-declares. RResultHandle, but it needs to transitively provide the whole type. declaration. In practice, before 8bbd543f3d56, this worked fine:. ```. ... RunGraphs({resultptr1, resultptr2});. ```. while after that commit it would require an extra `#include. <ROOT/RResultHandle.hxx>`. This patch restores the previous situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11248
https://github.com/root-project/root/pull/11248:201,security,availab,available,201,"[DF] Re-add a useful transitive include; RDFHelpers.hxx provides ROOT::RDF::RunGraphs(std::vector<RResultHandle>). In order for the handy implicit conversion from RResultPtr<T> to. RResultHandle to be available for client code that include. RDFHelpers.hxx, it is not enough that this header forward-declares. RResultHandle, but it needs to transitively provide the whole type. declaration. In practice, before 8bbd543f3d56, this worked fine:. ```. ... RunGraphs({resultptr1, resultptr2});. ```. while after that commit it would require an extra `#include. <ROOT/RResultHandle.hxx>`. This patch restores the previous situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11248
https://github.com/root-project/root/pull/11248:588,security,patch,patch,588,"[DF] Re-add a useful transitive include; RDFHelpers.hxx provides ROOT::RDF::RunGraphs(std::vector<RResultHandle>). In order for the handy implicit conversion from RResultPtr<T> to. RResultHandle to be available for client code that include. RDFHelpers.hxx, it is not enough that this header forward-declares. RResultHandle, but it needs to transitively provide the whole type. declaration. In practice, before 8bbd543f3d56, this worked fine:. ```. ... RunGraphs({resultptr1, resultptr2});. ```. while after that commit it would require an extra `#include. <ROOT/RResultHandle.hxx>`. This patch restores the previous situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11248
https://github.com/root-project/root/pull/11249:220,deployability,depend,dependency,220,Move RSlotStack from RDF to Imt; # This Pull request:. Moves the RSlotStack implementation from tree/dataframe/ to core/imt/. ## Changes or fixes:. Makes RSlotStack useable without requiring the whole of RDataFrame as a dependency. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # N/A.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11249
https://github.com/root-project/root/pull/11249:283,deployability,updat,updated,283,Move RSlotStack from RDF to Imt; # This Pull request:. Moves the RSlotStack implementation from tree/dataframe/ to core/imt/. ## Changes or fixes:. Makes RSlotStack useable without requiring the whole of RDataFrame as a dependency. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # N/A.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11249
https://github.com/root-project/root/pull/11249:115,energy efficiency,core,core,115,Move RSlotStack from RDF to Imt; # This Pull request:. Moves the RSlotStack implementation from tree/dataframe/ to core/imt/. ## Changes or fixes:. Makes RSlotStack useable without requiring the whole of RDataFrame as a dependency. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # N/A.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11249
https://github.com/root-project/root/pull/11249:220,integrability,depend,dependency,220,Move RSlotStack from RDF to Imt; # This Pull request:. Moves the RSlotStack implementation from tree/dataframe/ to core/imt/. ## Changes or fixes:. Makes RSlotStack useable without requiring the whole of RDataFrame as a dependency. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # N/A.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11249
https://github.com/root-project/root/pull/11249:220,modifiability,depend,dependency,220,Move RSlotStack from RDF to Imt; # This Pull request:. Moves the RSlotStack implementation from tree/dataframe/ to core/imt/. ## Changes or fixes:. Makes RSlotStack useable without requiring the whole of RDataFrame as a dependency. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # N/A.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11249
https://github.com/root-project/root/pull/11249:220,safety,depend,dependency,220,Move RSlotStack from RDF to Imt; # This Pull request:. Moves the RSlotStack implementation from tree/dataframe/ to core/imt/. ## Changes or fixes:. Makes RSlotStack useable without requiring the whole of RDataFrame as a dependency. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # N/A.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11249
https://github.com/root-project/root/pull/11249:253,safety,test,tested,253,Move RSlotStack from RDF to Imt; # This Pull request:. Moves the RSlotStack implementation from tree/dataframe/ to core/imt/. ## Changes or fixes:. Makes RSlotStack useable without requiring the whole of RDataFrame as a dependency. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # N/A.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11249
https://github.com/root-project/root/pull/11249:283,safety,updat,updated,283,Move RSlotStack from RDF to Imt; # This Pull request:. Moves the RSlotStack implementation from tree/dataframe/ to core/imt/. ## Changes or fixes:. Makes RSlotStack useable without requiring the whole of RDataFrame as a dependency. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # N/A.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11249
https://github.com/root-project/root/pull/11249:283,security,updat,updated,283,Move RSlotStack from RDF to Imt; # This Pull request:. Moves the RSlotStack implementation from tree/dataframe/ to core/imt/. ## Changes or fixes:. Makes RSlotStack useable without requiring the whole of RDataFrame as a dependency. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # N/A.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11249
https://github.com/root-project/root/pull/11249:220,testability,depend,dependency,220,Move RSlotStack from RDF to Imt; # This Pull request:. Moves the RSlotStack implementation from tree/dataframe/ to core/imt/. ## Changes or fixes:. Makes RSlotStack useable without requiring the whole of RDataFrame as a dependency. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # N/A.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11249
https://github.com/root-project/root/pull/11249:253,testability,test,tested,253,Move RSlotStack from RDF to Imt; # This Pull request:. Moves the RSlotStack implementation from tree/dataframe/ to core/imt/. ## Changes or fixes:. Makes RSlotStack useable without requiring the whole of RDataFrame as a dependency. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # N/A.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11249
https://github.com/root-project/root/issues/11250:0,energy efficiency,Draw,Draw,0,"Draw options ""X+"" and ""Y+"" not working with TMultiGraph; ### Is your feature request related to a problem? Please describe. TGraphPainter is used to Draw both TGraphs and TMultiGraphs. However, the ""X+"" and ""Y+"" draw options, to put the axis ticks and labels on the top and right sides, respectively, do not currently work (not implemented?) with TMultiGraphs. ### Describe the solution you'd like. Implement the ""X+"" and ""Y+"" draw options for TMultiGraph so they work as for TGraphs. ### Additional context. See example and plot in the ROOT Forum post https://root-forum.cern.ch/t/draw-with-x-and-y-not-working-for-tmultigraph/51327.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11250
https://github.com/root-project/root/issues/11250:149,energy efficiency,Draw,Draw,149,"Draw options ""X+"" and ""Y+"" not working with TMultiGraph; ### Is your feature request related to a problem? Please describe. TGraphPainter is used to Draw both TGraphs and TMultiGraphs. However, the ""X+"" and ""Y+"" draw options, to put the axis ticks and labels on the top and right sides, respectively, do not currently work (not implemented?) with TMultiGraphs. ### Describe the solution you'd like. Implement the ""X+"" and ""Y+"" draw options for TMultiGraph so they work as for TGraphs. ### Additional context. See example and plot in the ROOT Forum post https://root-forum.cern.ch/t/draw-with-x-and-y-not-working-for-tmultigraph/51327.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11250
https://github.com/root-project/root/issues/11250:212,energy efficiency,draw,draw,212,"Draw options ""X+"" and ""Y+"" not working with TMultiGraph; ### Is your feature request related to a problem? Please describe. TGraphPainter is used to Draw both TGraphs and TMultiGraphs. However, the ""X+"" and ""Y+"" draw options, to put the axis ticks and labels on the top and right sides, respectively, do not currently work (not implemented?) with TMultiGraphs. ### Describe the solution you'd like. Implement the ""X+"" and ""Y+"" draw options for TMultiGraph so they work as for TGraphs. ### Additional context. See example and plot in the ROOT Forum post https://root-forum.cern.ch/t/draw-with-x-and-y-not-working-for-tmultigraph/51327.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11250
https://github.com/root-project/root/issues/11250:308,energy efficiency,current,currently,308,"Draw options ""X+"" and ""Y+"" not working with TMultiGraph; ### Is your feature request related to a problem? Please describe. TGraphPainter is used to Draw both TGraphs and TMultiGraphs. However, the ""X+"" and ""Y+"" draw options, to put the axis ticks and labels on the top and right sides, respectively, do not currently work (not implemented?) with TMultiGraphs. ### Describe the solution you'd like. Implement the ""X+"" and ""Y+"" draw options for TMultiGraph so they work as for TGraphs. ### Additional context. See example and plot in the ROOT Forum post https://root-forum.cern.ch/t/draw-with-x-and-y-not-working-for-tmultigraph/51327.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11250
https://github.com/root-project/root/issues/11250:427,energy efficiency,draw,draw,427,"Draw options ""X+"" and ""Y+"" not working with TMultiGraph; ### Is your feature request related to a problem? Please describe. TGraphPainter is used to Draw both TGraphs and TMultiGraphs. However, the ""X+"" and ""Y+"" draw options, to put the axis ticks and labels on the top and right sides, respectively, do not currently work (not implemented?) with TMultiGraphs. ### Describe the solution you'd like. Implement the ""X+"" and ""Y+"" draw options for TMultiGraph so they work as for TGraphs. ### Additional context. See example and plot in the ROOT Forum post https://root-forum.cern.ch/t/draw-with-x-and-y-not-working-for-tmultigraph/51327.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11250
https://github.com/root-project/root/issues/11250:582,energy efficiency,draw,draw-with-x-and-y-not-working-for-tmultigraph,582,"Draw options ""X+"" and ""Y+"" not working with TMultiGraph; ### Is your feature request related to a problem? Please describe. TGraphPainter is used to Draw both TGraphs and TMultiGraphs. However, the ""X+"" and ""Y+"" draw options, to put the axis ticks and labels on the top and right sides, respectively, do not currently work (not implemented?) with TMultiGraphs. ### Describe the solution you'd like. Implement the ""X+"" and ""Y+"" draw options for TMultiGraph so they work as for TGraphs. ### Additional context. See example and plot in the ROOT Forum post https://root-forum.cern.ch/t/draw-with-x-and-y-not-working-for-tmultigraph/51327.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11250
https://github.com/root-project/root/issues/11250:500,testability,context,context,500,"Draw options ""X+"" and ""Y+"" not working with TMultiGraph; ### Is your feature request related to a problem? Please describe. TGraphPainter is used to Draw both TGraphs and TMultiGraphs. However, the ""X+"" and ""Y+"" draw options, to put the axis ticks and labels on the top and right sides, respectively, do not currently work (not implemented?) with TMultiGraphs. ### Describe the solution you'd like. Implement the ""X+"" and ""Y+"" draw options for TMultiGraph so they work as for TGraphs. ### Additional context. See example and plot in the ROOT Forum post https://root-forum.cern.ch/t/draw-with-x-and-y-not-working-for-tmultigraph/51327.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11250
https://github.com/root-project/root/pull/11251:452,deployability,patch,patch,452,"[DF] Fix potential use-after-delete in sample callbacks ; Before this commit, if an action with a sample callback (currently. only Snapshot) or a DefinePerSample went out of scope, we did not. deregister the corresponding callbacks from the RLoopManager, which. would try to run them anyway during the following event loop. As callbacks typically perform a call on the original action or. define objects, this could cause a use-after-delete. With this patch, we now associate each callback to the address of. the corresponding node of the computation graph and remove callbacks. when the nodes go out of scope. This fixes https://github.com/root-project/root/issues/11222.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11251
https://github.com/root-project/root/pull/11251:115,energy efficiency,current,currently,115,"[DF] Fix potential use-after-delete in sample callbacks ; Before this commit, if an action with a sample callback (currently. only Snapshot) or a DefinePerSample went out of scope, we did not. deregister the corresponding callbacks from the RLoopManager, which. would try to run them anyway during the following event loop. As callbacks typically perform a call on the original action or. define objects, this could cause a use-after-delete. With this patch, we now associate each callback to the address of. the corresponding node of the computation graph and remove callbacks. when the nodes go out of scope. This fixes https://github.com/root-project/root/issues/11222.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11251
https://github.com/root-project/root/pull/11251:312,integrability,event,event,312,"[DF] Fix potential use-after-delete in sample callbacks ; Before this commit, if an action with a sample callback (currently. only Snapshot) or a DefinePerSample went out of scope, we did not. deregister the corresponding callbacks from the RLoopManager, which. would try to run them anyway during the following event loop. As callbacks typically perform a call on the original action or. define objects, this could cause a use-after-delete. With this patch, we now associate each callback to the address of. the corresponding node of the computation graph and remove callbacks. when the nodes go out of scope. This fixes https://github.com/root-project/root/issues/11222.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11251
https://github.com/root-project/root/pull/11251:347,performance,perform,perform,347,"[DF] Fix potential use-after-delete in sample callbacks ; Before this commit, if an action with a sample callback (currently. only Snapshot) or a DefinePerSample went out of scope, we did not. deregister the corresponding callbacks from the RLoopManager, which. would try to run them anyway during the following event loop. As callbacks typically perform a call on the original action or. define objects, this could cause a use-after-delete. With this patch, we now associate each callback to the address of. the corresponding node of the computation graph and remove callbacks. when the nodes go out of scope. This fixes https://github.com/root-project/root/issues/11222.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11251
https://github.com/root-project/root/pull/11251:452,safety,patch,patch,452,"[DF] Fix potential use-after-delete in sample callbacks ; Before this commit, if an action with a sample callback (currently. only Snapshot) or a DefinePerSample went out of scope, we did not. deregister the corresponding callbacks from the RLoopManager, which. would try to run them anyway during the following event loop. As callbacks typically perform a call on the original action or. define objects, this could cause a use-after-delete. With this patch, we now associate each callback to the address of. the corresponding node of the computation graph and remove callbacks. when the nodes go out of scope. This fixes https://github.com/root-project/root/issues/11222.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11251
https://github.com/root-project/root/pull/11251:452,security,patch,patch,452,"[DF] Fix potential use-after-delete in sample callbacks ; Before this commit, if an action with a sample callback (currently. only Snapshot) or a DefinePerSample went out of scope, we did not. deregister the corresponding callbacks from the RLoopManager, which. would try to run them anyway during the following event loop. As callbacks typically perform a call on the original action or. define objects, this could cause a use-after-delete. With this patch, we now associate each callback to the address of. the corresponding node of the computation graph and remove callbacks. when the nodes go out of scope. This fixes https://github.com/root-project/root/issues/11222.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11251
https://github.com/root-project/root/pull/11251:347,usability,perform,perform,347,"[DF] Fix potential use-after-delete in sample callbacks ; Before this commit, if an action with a sample callback (currently. only Snapshot) or a DefinePerSample went out of scope, we did not. deregister the corresponding callbacks from the RLoopManager, which. would try to run them anyway during the following event loop. As callbacks typically perform a call on the original action or. define objects, this could cause a use-after-delete. With this patch, we now associate each callback to the address of. the corresponding node of the computation graph and remove callbacks. when the nodes go out of scope. This fixes https://github.com/root-project/root/issues/11222.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11251
https://github.com/root-project/root/pull/11253:9,deployability,build,builds,9,"[DF] Fix builds with imt=OFF; A recent commit moved `RSlotStack` to `core/imt`, so now we can only include it if `R__USE_IMT` is defined.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11253
https://github.com/root-project/root/pull/11253:69,energy efficiency,core,core,69,"[DF] Fix builds with imt=OFF; A recent commit moved `RSlotStack` to `core/imt`, so now we can only include it if `R__USE_IMT` is defined.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11253
https://github.com/root-project/root/pull/11254:1533,availability,operat,operations,1533,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:0,deployability,Updat,Update,0,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:281,deployability,updat,updates,281,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1807,deployability,contain,contain,1807,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:235,energy efficiency,current,current,235,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:255,integrability,messag,message,255,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:429,integrability,messag,message,429,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:255,interoperability,messag,message,255,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:429,interoperability,messag,message,429,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1363,interoperability,specif,specified,1363,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1713,interoperability,specif,specify,1713,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1887,interoperability,specif,specified,1887,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1953,interoperability,specif,specified,1953,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:2097,interoperability,specif,specified,2097,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:583,performance,cach,cachesize,583,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:593,performance,CACH,CACHESIZE,593,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1126,performance,Parallel,Parallelize,1126,"ding branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1180,performance,Parallel,Parallelize,1180,"m set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1474,performance,cach,cachesize,1474,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1507,performance,cach,cache,1507,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1529,performance,I/O,I/O,1529,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1243,reliability,Doe,Does,1243,"add` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:0,safety,Updat,Update,0,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:281,safety,updat,updates,281,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1861,safety,input,input,1861,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1976,safety,input,input,1976,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:2120,safety,input,input,2120,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:0,security,Updat,Update,0,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:281,security,updat,updates,281,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:222,usability,clear,clear,222,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:250,usability,help,help,250,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:293,usability,help,help,293,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:443,usability,clear,clearer,443,"Update hadd docs; Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message. The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compressio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1861,usability,input,input,1861,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:1976,usability,input,input,1976,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:2120,usability,input,input,2120,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11254:2236,usability,support,supported,2236,"` option, most probably this can be further improved so suggestions are welcome! Other commits are style changes to the message for a clearer output and code. After this PR:. ```. $: hadd -h. usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]. [-cachesize CACHESIZE]. [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]. [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]. TARGET SOURCES. OPTIONS:. -a Append to the output. -k Skip corrupt or non-existent files, do not exit. -T Do not merge TTree objects. -O If hadd is used to merge TTree objects, compress the whole target tree. (including its branches and baskets) with the desired compression. algorithm. This can be set for example through the '-f' option. -v Explicitly set the verbosity level: 0 request no output, 99 is the. default. -j Parallelize the execution in multiple processes. -dbg Parallelize the execution in multiple processes in debug mode (Does. not delete partial files stored inside working directory). -d Carry out the partial multiprocess execution in the specified. directory. -n Open at most 'maxopenedfiles' at once (use 0 to request to use the. system maximum). -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to. disable). -experimental-io-features Used with an argument provided, enables the corresponding experimental. feature for output trees. -f Gives the ability to specify the compression level of the target file. (by default 4). -fk Sets the target file to contain the baskets with the same compression. as the input files (unless -O is specified). Compresses the meta data. using the compression level specified in the first input or the. compression setting after fk (for example 206 when using -fk206). -ff The compression level use is the one specified in the first input. -f0 Do not compress the target file. -f6 Use compression level 6 (See TFile::SetCompressionSettings for the. supported range of values). TARGET Target file. SOURCES Source files. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11254
https://github.com/root-project/root/pull/11255:652,availability,down,down,652,"[tree] Reduce string allocations in TBranch*::GetFullName.; When called repeatedly via TTree::GetBranch, the string allocations in. GetFullName have a notable runtime cost. Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead. ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal. - Do you know if there's a test that covers this case? - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:534,deployability,compos,composition,534,"[tree] Reduce string allocations in TBranch*::GetFullName.; When called repeatedly via TTree::GetBranch, the string allocations in. GetFullName have a notable runtime cost. Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead. ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal. - Do you know if there's a test that covers this case? - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:7,energy efficiency,Reduc,Reduce,7,"[tree] Reduce string allocations in TBranch*::GetFullName.; When called repeatedly via TTree::GetBranch, the string allocations in. GetFullName have a notable runtime cost. Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead. ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal. - Do you know if there's a test that covers this case? - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:21,energy efficiency,alloc,allocations,21,"[tree] Reduce string allocations in TBranch*::GetFullName.; When called repeatedly via TTree::GetBranch, the string allocations in. GetFullName have a notable runtime cost. Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead. ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal. - Do you know if there's a test that covers this case? - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:116,energy efficiency,alloc,allocations,116,"[tree] Reduce string allocations in TBranch*::GetFullName.; When called repeatedly via TTree::GetBranch, the string allocations in. GetFullName have a notable runtime cost. Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead. ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal. - Do you know if there's a test that covers this case? - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:183,energy efficiency,alloc,allocation,183,"[tree] Reduce string allocations in TBranch*::GetFullName.; When called repeatedly via TTree::GetBranch, the string allocations in. GetFullName have a notable runtime cost. Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead. ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal. - Do you know if there's a test that covers this case? - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:197,energy efficiency,reduc,reduced,197,"[tree] Reduce string allocations in TBranch*::GetFullName.; When called repeatedly via TTree::GetBranch, the string allocations in. GetFullName have a notable runtime cost. Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead. ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal. - Do you know if there's a test that covers this case? - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:665,energy efficiency,alloc,allocations,665,"[tree] Reduce string allocations in TBranch*::GetFullName.; When called repeatedly via TTree::GetBranch, the string allocations in. GetFullName have a notable runtime cost. Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead. ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal. - Do you know if there's a test that covers this case? - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:534,modifiability,compos,composition,534,"[tree] Reduce string allocations in TBranch*::GetFullName.; When called repeatedly via TTree::GetBranch, the string allocations in. GetFullName have a notable runtime cost. Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead. ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal. - Do you know if there's a test that covers this case? - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:253,performance,performance analys,performance analysis,253,"[tree] Reduce string allocations in TBranch*::GetFullName.; When called repeatedly via TTree::GetBranch, the string allocations in. GetFullName have a notable runtime cost. Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead. ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal. - Do you know if there's a test that covers this case? - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:322,performance,overhead,overhead,322,"[tree] Reduce string allocations in TBranch*::GetFullName.; When called repeatedly via TTree::GetBranch, the string allocations in. GetFullName have a notable runtime cost. Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead. ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal. - Do you know if there's a test that covers this case? - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:592,safety,test,test,592,"[tree] Reduce string allocations in TBranch*::GetFullName.; When called repeatedly via TTree::GetBranch, the string allocations in. GetFullName have a notable runtime cost. Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead. ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal. - Do you know if there's a test that covers this case? - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:310,security,sign,significant,310,"[tree] Reduce string allocations in TBranch*::GetFullName.; When called repeatedly via TTree::GetBranch, the string allocations in. GetFullName have a notable runtime cost. Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead. ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal. - Do you know if there's a test that covers this case? - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:592,testability,test,test,592,"[tree] Reduce string allocations in TBranch*::GetFullName.; When called repeatedly via TTree::GetBranch, the string allocations in. GetFullName have a notable runtime cost. Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead. ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal. - Do you know if there's a test that covers this case? - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:253,usability,perform,performance,253,"[tree] Reduce string allocations in TBranch*::GetFullName.; When called repeatedly via TTree::GetBranch, the string allocations in. GetFullName have a notable runtime cost. Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead. ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal. - Do you know if there's a test that covers this case? - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11255:349,usability,user,user-images,349,"[tree] Reduce string allocations in TBranch*::GetFullName.; When called repeatedly via TTree::GetBranch, the string allocations in. GetFullName have a notable runtime cost. Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead. ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal. - Do you know if there's a test that covers this case? - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11255
https://github.com/root-project/root/pull/11256:139,deployability,updat,updated,139,[io] Turn on async prefetching by default.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11256
https://github.com/root-project/root/pull/11256:109,safety,test,tested,109,[io] Turn on async prefetching by default.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11256
https://github.com/root-project/root/pull/11256:139,safety,updat,updated,139,[io] Turn on async prefetching by default.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11256
https://github.com/root-project/root/pull/11256:139,security,updat,updated,139,[io] Turn on async prefetching by default.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11256
https://github.com/root-project/root/pull/11256:109,testability,test,tested,109,[io] Turn on async prefetching by default.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11256
https://github.com/root-project/root/pull/11257:61,availability,error,error,61,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:325,availability,error,error,325,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:383,availability,Error,Error,383,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:72,deployability,build,building,72,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:1,energy efficiency,core,core,1,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:132,energy efficiency,core,core,132,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:278,energy efficiency,core,core,278,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:61,performance,error,error,61,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:325,performance,error,error,325,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:383,performance,Error,Error,383,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:61,safety,error,error,61,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:325,safety,error,error,325,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:383,safety,Error,Error,383,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:525,security,auth,authored-by,525,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:61,usability,error,error,61,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:325,usability,error,error,325,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11257:383,usability,Error,Error,383,"[core] fix typo in TClingCallFunc::exec; Fixes the following error when building:. ```. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:. /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]. 1539 | ::Error(""TClingCallFunc::exec(void*)"",. | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 1540 | ""Invalid type '%s'"", BT->getTypeClassName());. ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11257
https://github.com/root-project/root/pull/11258:32,availability,Operat,Operators,32,"[GSOC][TMVA][SOFIE] Reduce ONNX Operators implemented with the corresponding unit tests; # This Pull request: Adds the ReduceMean, ReduceProd and ReduceSumsquare operators in SOFIE. ## Checklist:. - [X] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11258
https://github.com/root-project/root/pull/11258:162,availability,operat,operators,162,"[GSOC][TMVA][SOFIE] Reduce ONNX Operators implemented with the corresponding unit tests; # This Pull request: Adds the ReduceMean, ReduceProd and ReduceSumsquare operators in SOFIE. ## Checklist:. - [X] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11258
https://github.com/root-project/root/pull/11258:20,energy efficiency,Reduc,Reduce,20,"[GSOC][TMVA][SOFIE] Reduce ONNX Operators implemented with the corresponding unit tests; # This Pull request: Adds the ReduceMean, ReduceProd and ReduceSumsquare operators in SOFIE. ## Checklist:. - [X] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11258
https://github.com/root-project/root/pull/11258:119,energy efficiency,Reduc,ReduceMean,119,"[GSOC][TMVA][SOFIE] Reduce ONNX Operators implemented with the corresponding unit tests; # This Pull request: Adds the ReduceMean, ReduceProd and ReduceSumsquare operators in SOFIE. ## Checklist:. - [X] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11258
https://github.com/root-project/root/pull/11258:131,energy efficiency,Reduc,ReduceProd,131,"[GSOC][TMVA][SOFIE] Reduce ONNX Operators implemented with the corresponding unit tests; # This Pull request: Adds the ReduceMean, ReduceProd and ReduceSumsquare operators in SOFIE. ## Checklist:. - [X] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11258
https://github.com/root-project/root/pull/11258:146,energy efficiency,Reduc,ReduceSumsquare,146,"[GSOC][TMVA][SOFIE] Reduce ONNX Operators implemented with the corresponding unit tests; # This Pull request: Adds the ReduceMean, ReduceProd and ReduceSumsquare operators in SOFIE. ## Checklist:. - [X] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11258
https://github.com/root-project/root/pull/11258:82,safety,test,tests,82,"[GSOC][TMVA][SOFIE] Reduce ONNX Operators implemented with the corresponding unit tests; # This Pull request: Adds the ReduceMean, ReduceProd and ReduceSumsquare operators in SOFIE. ## Checklist:. - [X] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11258
https://github.com/root-project/root/pull/11258:203,safety,test,tested,203,"[GSOC][TMVA][SOFIE] Reduce ONNX Operators implemented with the corresponding unit tests; # This Pull request: Adds the ReduceMean, ReduceProd and ReduceSumsquare operators in SOFIE. ## Checklist:. - [X] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11258
https://github.com/root-project/root/pull/11258:77,testability,unit,unit,77,"[GSOC][TMVA][SOFIE] Reduce ONNX Operators implemented with the corresponding unit tests; # This Pull request: Adds the ReduceMean, ReduceProd and ReduceSumsquare operators in SOFIE. ## Checklist:. - [X] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11258
https://github.com/root-project/root/pull/11258:82,testability,test,tests,82,"[GSOC][TMVA][SOFIE] Reduce ONNX Operators implemented with the corresponding unit tests; # This Pull request: Adds the ReduceMean, ReduceProd and ReduceSumsquare operators in SOFIE. ## Checklist:. - [X] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11258
https://github.com/root-project/root/pull/11258:203,testability,test,tested,203,"[GSOC][TMVA][SOFIE] Reduce ONNX Operators implemented with the corresponding unit tests; # This Pull request: Adds the ReduceMean, ReduceProd and ReduceSumsquare operators in SOFIE. ## Checklist:. - [X] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11258
https://github.com/root-project/root/issues/11259:500,deployability,patch,patches,500,"genreflex crash in TMetaUtils::ReSubstTemplateArg with gcc12 headers; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1015,deployability,patch,patches,1015,"TMetaUtils::ReSubstTemplateArg with gcc12 headers; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1129,deployability,build,build,1129,"b](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1174,deployability,build,build,1174,"s?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1203,deployability,patch,patches,1203,"https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1229,deployability,patch,patches,1229,"ra/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1419,deployability,fail,failed,1419,""". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nigh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1459,deployability,build,build,1459,"n genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1489,deployability,Stack,Stack,1489,"6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-pa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1597,deployability,build,build,1597,"class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1642,deployability,build,build,1642,"/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1671,deployability,patch,patches,1671,". #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1697,deployability,patch,patches,1697,"ude <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1882,deployability,build,build,1882,"/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenki",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1927,deployability,build,build,1927,"LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/proje",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1956,deployability,patch,patches,1956,"64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1982,deployability,patch,patches,1982,"LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2138,deployability,build,build,2138,"s/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2183,deployability,build,build,2183,"ts/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2212,deployability,patch,patches,2212,"OOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2238,deployability,patch,patches,2238,"preter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2390,deployability,build,build,2390,"ype && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2435,deployability,build,build,2435,"o crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2464,deployability,patch,patches,2464,"st a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2490,deployability,patch,patches,2490," trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2640,deployability,build,build,2640,"uild/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2685,deployability,build,build,2685,"v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2714,deployability,patch,patches,2714,"lvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2740,deployability,patch,patches,2740,"e/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2874,deployability,build,build,2874," at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2919,deployability,build,build,2919,"line/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2948,deployability,patch,patches,2948,"-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2974,deployability,patch,patches,2974,"-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3125,deployability,build,build,3125,"2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3170,deployability,build,build,3170,"_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3199,deployability,patch,patches,3199,"v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3225,deployability,patch,patches,3225,"v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/works",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3340,deployability,build,build,3340,"ext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3385,deployability,build,build,3385," /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsCla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3414,deployability,patch,patches,3414,"nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3440,deployability,patch,patches,3440,"jects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/work",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3562,deployability,build,build,3562,"6e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3607,deployability,build,build,3607,"fff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3636,deployability,patch,patches,3636,"build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3662,deployability,patch,patches,3662,"g_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3784,deployability,build,build,3784,"cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:37",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3829,deployability,build,build,3829,"lassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerIn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3858,deployability,patch,patches,3858,"f4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3884,deployability,patch,patches,3884,"workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4006,deployability,build,build,4006,"seClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4051,deployability,build,build,4051,"n TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeSt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4080,deployability,patch,patches,4080,"ses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=...,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4106,deployability,patch,patches,4106,"x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4210,deployability,build,build,4210,"OT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4255,deployability,build,build,4255,".cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4284,deployability,patch,patches,4284,"c29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4310,deployability,patch,patches,4310,"ses (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dic",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4426,deployability,build,build,4426,"T/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4471,deployability,build,build,4471,"649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipelin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4500,deployability,patch,patches,4500," TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4526,deployability,patch,patches,4526,"s=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4652,deployability,build,build,4652,"-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenref",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4697,deployability,build,build,4697," #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_ni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4726,deployability,patch,patches,4726,"ass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4752,deployability,patch,patches,4752,"2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4874,deployability,build,build,4874,"-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (ver",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4919,deployability,build,build,4919," #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4948,deployability,patch,patches,4948,"ass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4974,deployability,patch,patches,4974,"2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5117,deployability,build,build,5117,"eta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5162,deployability,build,build,5162,"d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5191,deployability,patch,patches,5191,"x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noInclud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5217,deployability,patch,patches,5217,"ns/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5431,deployability,build,build,5431,"nkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5476,deployability,build,build,5476,"ojects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenRefle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5505,deployability,patch,patches,5505,"rc/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5531,deployability,patch,patches,5531,"ore/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5670,deployability,build,build,5670,"ce/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5715,deployability,build,build,5715,"6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5744,deployability,patch,patches,5744,"-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5770,deployability,patch,patches,5770,"TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/j",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6253,deployability,fail,failOnWarnings,6253,":2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argume",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6295,deployability,build,build,6295,"ateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Express",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6340,deployability,build,build,6340,"an=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6369,deployability,patch,patches,6369,"=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6395,deployability,patch,patches,6395,". writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6520,deployability,build,build,6520,"6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6565,deployability,build,build,6565,"pl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -476",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6594,deployability,patch,patches,6594,"6ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6620,deployability,patch,patches,6620,"gc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6767,deployability,build,build,6767,"patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6812,deployability,build,build,6812,"906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::Templat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6841,deployability,patch,patches,6841," genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6867,deployability,patch,patches,6867,"g (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6983,deployability,build,build,6983,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7028,deployability,build,build,7028,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7057,deployability,patch,patches,7057,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7083,deployability,patch,patches,7083,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1990,energy efficiency,core,core,1990,"JECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2246,energy efficiency,core,core,2246,"/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2498,energy efficiency,core,core,2498,":. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2748,energy efficiency,core,core,2748,"g/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2982,energy efficiency,core,core,2982,"tches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3233,energy efficiency,core,core,3233,"00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3448,energy efficiency,core,core,3448,"ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3670,energy efficiency,core,core,3670,"tly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/worksp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3892,energy efficiency,core,core,3892,"ace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/worksp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4114,energy efficiency,core,core,4114,"c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4318,energy efficiency,core,core,4318,"his=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStrea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4534,energy efficiency,core,core,4534,"e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4636,energy efficiency,load,load,4636,"tches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4760,energy efficiency,core,core,4760,"0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5225,energy efficiency,core,core,5225,"kspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5539,energy efficiency,core,core,5539,"ta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5778,energy efficiency,core,core,5778,".cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6403,energy efficiency,core,core,6403,"eEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6628,energy efficiency,core,core,6628,"argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTempla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6875,energy efficiency,core,core,6875,"bosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7369,energy efficiency,core,core,7369,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7407,energy efficiency,core,core,7407,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7481,energy efficiency,core,core,7481,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7524,energy efficiency,core,core,7524,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:577,interoperability,xml,xml,577,"genreflex crash in TMetaUtils::ReSubstTemplateArg with gcc12 headers; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1099,interoperability,xml,xml,1099,"!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3957,modifiability,Inherit,InheritsFrom,3957,"T/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4636,performance,load,load,4636,"tches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1419,reliability,fail,failed,1419,""". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nigh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6253,reliability,fail,failOnWarnings,6253,":2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argume",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:500,safety,patch,patches,500,"genreflex crash in TMetaUtils::ReSubstTemplateArg with gcc12 headers; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1015,safety,patch,patches,1015,"TMetaUtils::ReSubstTemplateArg with gcc12 headers; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1203,safety,patch,patches,1203,"https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1229,safety,patch,patches,1229,"ra/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1671,safety,patch,patches,1671,". #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1697,safety,patch,patches,1697,"ude <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1839,safety,input,input,1839,"ROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1956,safety,patch,patches,1956,"64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1982,safety,patch,patches,1982,"LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2095,safety,input,input,2095,".xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2212,safety,patch,patches,2212,"OOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2238,safety,patch,patches,2238,"preter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2464,safety,patch,patches,2464,"st a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2490,safety,patch,patches,2490," trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2714,safety,patch,patches,2714,"lvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2740,safety,patch,patches,2740,"e/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2948,safety,patch,patches,2948,"-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2974,safety,patch,patches,2974,"-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3199,safety,patch,patches,3199,"v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3225,safety,patch,patches,3225,"v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/works",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3414,safety,patch,patches,3414,"nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3440,safety,patch,patches,3440,"jects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/work",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3636,safety,patch,patches,3636,"build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3662,safety,patch,patches,3662,"g_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3858,safety,patch,patches,3858,"f4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3884,safety,patch,patches,3884,"workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4080,safety,patch,patches,4080,"ses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=...,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4106,safety,patch,patches,4106,"x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4284,safety,patch,patches,4284,"c29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4310,safety,patch,patches,4310,"ses (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dic",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4500,safety,patch,patches,4500," TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4526,safety,patch,patches,4526,"s=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4726,safety,patch,patches,4726,"ass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4752,safety,patch,patches,4752,"2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4948,safety,patch,patches,4948,"ass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4974,safety,patch,patches,4974,"2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5191,safety,patch,patches,5191,"x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noInclud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5217,safety,patch,patches,5217,"ns/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5505,safety,patch,patches,5505,"rc/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5531,safety,patch,patches,5531,"ore/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5744,safety,patch,patches,5744,"-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5770,safety,patch,patches,5770,"TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/j",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6369,safety,patch,patches,6369,"=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6395,safety,patch,patches,6395,". writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6594,safety,patch,patches,6594,"6ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6620,safety,patch,patches,6620,"gc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6841,safety,patch,patches,6841," genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6867,safety,patch,patches,6867,"g (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7057,safety,patch,patches,7057,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7083,safety,patch,patches,7083,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7652,safety,input,input,7652,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7703,safety,input,input,7703,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7917,safety,test,testing,7917,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:500,security,patch,patches,500,"genreflex crash in TMetaUtils::ReSubstTemplateArg with gcc12 headers; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1015,security,patch,patches,1015,"TMetaUtils::ReSubstTemplateArg with gcc12 headers; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1203,security,patch,patches,1203,"https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1229,security,patch,patches,1229,"ra/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1671,security,patch,patches,1671,". #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1697,security,patch,patches,1697,"ude <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1956,security,patch,patches,1956,"64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1982,security,patch,patches,1982,"LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2212,security,patch,patches,2212,"OOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2238,security,patch,patches,2238,"preter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2464,security,patch,patches,2464,"st a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2490,security,patch,patches,2490," trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2714,security,patch,patches,2714,"lvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2740,security,patch,patches,2740,"e/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2948,security,patch,patches,2948,"-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2974,security,patch,patches,2974,"-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3199,security,patch,patches,3199,"v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3225,security,patch,patches,3225,"v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/works",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3414,security,patch,patches,3414,"nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3440,security,patch,patches,3440,"jects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/work",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3636,security,patch,patches,3636,"build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3662,security,patch,patches,3662,"g_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3858,security,patch,patches,3858,"f4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:3884,security,patch,patches,3884,"workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4080,security,patch,patches,4080,"ses (this=0x4b6670, . cl=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=...,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4106,security,patch,patches,4106,"x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292. #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4284,security,patch,patches,4284,"c29 in TClass::GetListOfBases (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4310,security,patch,patches,4310,"ses (this=0x32e8cc0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649. #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dic",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4500,security,patch,patches,4500," TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4526,security,patch,patches,4526,"s=0x32e8cc0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679. #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4726,security,patch,patches,4726,"ass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4752,security,patch,patches,4752,"2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4948,security,patch,patches,4948,"ass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4974,security,patch,patches,4974,"2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5191,security,patch,patches,5191,"x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noInclud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5217,security,patch,patches,5217,"ns/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5505,security,patch,patches,5505,"rc/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5531,security,patch,patches,5531,"ore/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5744,security,patch,patches,5744,"-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:5770,security,patch,patches,5770,"TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/j",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6369,security,patch,patches,6369,"=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6395,security,patch,patches,6395,". writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6594,security,patch,patches,6594,"6ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6620,security,patch,patches,6620,"gc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x00007ffff306f44b in genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6841,security,patch,patches,6841," genreflex::invokeRootCling (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:6867,security,patch,patches,6867,"g (verbosity=..., . selectionFileName=..., targetLibName=..., multiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7057,security,patch,patches,7057,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7083,security,patch,patches,7083,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1368,testability,Assert,Assertion,1368,"or instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, on",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1495,testability,trace,trace,1495,"6-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7917,testability,test,testing,7917,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1258,usability,tool,tools,1258,"OOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. hi -. We've been seing a crash in genreflex/rootcling in root-6.26.06-patches. when processing gcc12 headers. (See ATEAM-854.). To reproduce:. sel.xml:. ```. <lcgdict>. <class pattern=""*iterator<*pair<const*,const*""/>. </lcgdict>. ```. x.h:. ```. #include <string>. #include <map>. void foo (std::map<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1726,usability,tool,tools,1726,"p<unsigned, std::string>& m, const std::string& s). {. m.emplace (0, s);. }. ```. On lxplus7:. ```. $ export LCGPROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:1839,usability,input,input,1839,"ROJECTPATH=/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu # Adjust if needed. $ . $LCGPROJECTPATH/gcc/12.1.0/x86_64-centos7/setup.sh. $ . $LCGPROJECTPATH/ROOT/v6-26-00-patches/x86_64-centos7-gcc12-dbg/ROOT-env.sh . $ genreflex x.h --selection_file=sel.xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:2095,usability,input,input,2095,".xml -o x_gen.cxx. genreflex: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257: clang::QualType clang::TemplateArgument::getAsType() const: Assertion `getKind() == Type && ""Unexpected kind""' failed. ```. It also crashes in the opt build, just a bit further on. Stack trace:. ```. #4 0x00007ffff2f71cf3 in clang::TemplateArgument::getAsType (. this=0x7fffef6df2e8). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/interpreter/llvm/src/tools/clang/include/clang/AST/TemplateBase.h:257. #5 0x00007ffff2f85aeb in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4768. #6 0x00007ffff2f85c07 in ROOT::TMetaUtils::ReSubstTemplateArg (input=..., . instance=0x7fffef6df2c0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/clingutils/src/TClingUtils.cxx:4791. #7 0x00007ffff32362a4 in TClingBaseClassInfo::InternalNext (. this=0x7fffffff4430, onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:341. #8 0x00007ffff323636e in TClingBaseClassInfo::Next (this=0x7fffffff4430, . onlyDirect=1). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:350. #9 0x00007ffff323638d in TClingBaseClassInfo::Next (this=0x7fffffff4430). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TClingBaseClassInfo.cxx:355. #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:4817,usability,Close,CloseStreamerInfoROOTFile,4817,"uild/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688. #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891. #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097. #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352. #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, . load=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759. #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162. #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632. #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., . scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, . writeEmptyRootPCM=false). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784. #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, . isGenreflex=true). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:4906. #22 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7652,usability,input,input,7652,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11259:7703,usability,input,input,7703,"tiDict=false, pcmsNames=..., . includes=..., preprocDefines=..., preprocUndefines=..., warnings=..., . rootmapFileName=..., rootmapLibName=..., interpreteronly=false, . doSplit=false, isCxxmodule=false, writeEmptyRootPCM=false, . selSyntaxOnly=false, noIncludePaths=false, noGlobalUsingStd=false, . headersNames=..., failOnWarnings=false, ofilename=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:5371. #23 0x00007ffff307131c in GenReflexMain (argc=3, argv=0x7fffffff8d40). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6071. #24 0x00007ffff30717b3 in ROOT_rootcling_Driver (argc=5, argv=0x7fffffff8d38, . config=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:6148. #25 0x0000000000401269 in main (argc=5, argv=0x7fffffff8d38). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/main/src/rootcling.cxx:43. ```. The crash occurs here in TClingUtils.cxx:. ```. } else {. return TST->getArg(index).getAsType();. }. ```. because the Kind of this argument is clang::TemplateArgument::Expression,. not Type. This change fixes the crash for me:. ```. diff --git a/core/clingutils/src/TClingUtils.cxx b/core/clingutils/src/TClingUtils.cxx. index 2373f0c..ee0cf7c 100644. --- a/core/clingutils/src/TClingUtils.cxx. +++ b/core/clingutils/src/TClingUtils.cxx. @@ -4765,7 +4765,8 @@ clang::QualType ROOT::TMetaUtils::ReSubstTemplateArg(clang::QualType input, cons. // (See AddDefaultParameters). return input;. } else {. - return TST->getArg(index).getAsType();. + if (TST->getArg(index).getKind() == clang::TemplateArgument::Type). + return TST->getArg(index).getAsType();. }. }. }. ```. This is a blocker for ATLAS testing with gcc12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11259
https://github.com/root-project/root/issues/11260:89,availability,Error,Error,89,"`TTreeReaderArray` does not support `Double32_t `; With the example below, we get:. ```. Error in <TTreeReaderArrayBase::GetBranchContentDataType()>: The branch h.fData.fPx contains a data type 9 for which the dictionary cannot be retrieved. ```. This was seen during investigations by CMSSW team of leveraging `Double32_t` and `Float16_t` to reduce data size. Cheers,. Philippe. ```. #include ""TTree.h"". #include ""TTreeReader.h"". #include ""TTreeReaderArray.h"". struct Inside {. Double32_t fPx;. double fPy;. };. struct Holder {. std::vector<Double32_t> fValues;. std::vector<Inside> fData;. };. #ifdef __ROOTCLING__. #pragma link C++ class Inside+;. #pragma link C++ class Holder+;. #pragma link C++ class std::vector<Inside>+;. #pragma link C++ class std::vector<Double32_t>+;. #endif. void exec(). {. auto t = new TTree(""t"",""t"");. Holder h;. t->Branch(""h."", &h);. t->Fill();. t->Print();. TTreeReader r(t);. //TTreeReaderArray<Double32_t> arr1(r, ""h.fValues"");. TTreeReaderArray<Double32_t> arr2(r, ""h.fData.fPx"");. TTreeReaderArray<Double32_t> arr3(r, ""h.fData.fPy"");. r.Next();. // arr1.GetSize();. arr2.GetSize();. arr3.GetSize();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11260
https://github.com/root-project/root/issues/11260:173,deployability,contain,contains,173,"`TTreeReaderArray` does not support `Double32_t `; With the example below, we get:. ```. Error in <TTreeReaderArrayBase::GetBranchContentDataType()>: The branch h.fData.fPx contains a data type 9 for which the dictionary cannot be retrieved. ```. This was seen during investigations by CMSSW team of leveraging `Double32_t` and `Float16_t` to reduce data size. Cheers,. Philippe. ```. #include ""TTree.h"". #include ""TTreeReader.h"". #include ""TTreeReaderArray.h"". struct Inside {. Double32_t fPx;. double fPy;. };. struct Holder {. std::vector<Double32_t> fValues;. std::vector<Inside> fData;. };. #ifdef __ROOTCLING__. #pragma link C++ class Inside+;. #pragma link C++ class Holder+;. #pragma link C++ class std::vector<Inside>+;. #pragma link C++ class std::vector<Double32_t>+;. #endif. void exec(). {. auto t = new TTree(""t"",""t"");. Holder h;. t->Branch(""h."", &h);. t->Fill();. t->Print();. TTreeReader r(t);. //TTreeReaderArray<Double32_t> arr1(r, ""h.fValues"");. TTreeReaderArray<Double32_t> arr2(r, ""h.fData.fPx"");. TTreeReaderArray<Double32_t> arr3(r, ""h.fData.fPy"");. r.Next();. // arr1.GetSize();. arr2.GetSize();. arr3.GetSize();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11260
https://github.com/root-project/root/issues/11260:343,energy efficiency,reduc,reduce,343,"`TTreeReaderArray` does not support `Double32_t `; With the example below, we get:. ```. Error in <TTreeReaderArrayBase::GetBranchContentDataType()>: The branch h.fData.fPx contains a data type 9 for which the dictionary cannot be retrieved. ```. This was seen during investigations by CMSSW team of leveraging `Double32_t` and `Float16_t` to reduce data size. Cheers,. Philippe. ```. #include ""TTree.h"". #include ""TTreeReader.h"". #include ""TTreeReaderArray.h"". struct Inside {. Double32_t fPx;. double fPy;. };. struct Holder {. std::vector<Double32_t> fValues;. std::vector<Inside> fData;. };. #ifdef __ROOTCLING__. #pragma link C++ class Inside+;. #pragma link C++ class Holder+;. #pragma link C++ class std::vector<Inside>+;. #pragma link C++ class std::vector<Double32_t>+;. #endif. void exec(). {. auto t = new TTree(""t"",""t"");. Holder h;. t->Branch(""h."", &h);. t->Fill();. t->Print();. TTreeReader r(t);. //TTreeReaderArray<Double32_t> arr1(r, ""h.fValues"");. TTreeReaderArray<Double32_t> arr2(r, ""h.fData.fPx"");. TTreeReaderArray<Double32_t> arr3(r, ""h.fData.fPy"");. r.Next();. // arr1.GetSize();. arr2.GetSize();. arr3.GetSize();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11260
https://github.com/root-project/root/issues/11260:89,performance,Error,Error,89,"`TTreeReaderArray` does not support `Double32_t `; With the example below, we get:. ```. Error in <TTreeReaderArrayBase::GetBranchContentDataType()>: The branch h.fData.fPx contains a data type 9 for which the dictionary cannot be retrieved. ```. This was seen during investigations by CMSSW team of leveraging `Double32_t` and `Float16_t` to reduce data size. Cheers,. Philippe. ```. #include ""TTree.h"". #include ""TTreeReader.h"". #include ""TTreeReaderArray.h"". struct Inside {. Double32_t fPx;. double fPy;. };. struct Holder {. std::vector<Double32_t> fValues;. std::vector<Inside> fData;. };. #ifdef __ROOTCLING__. #pragma link C++ class Inside+;. #pragma link C++ class Holder+;. #pragma link C++ class std::vector<Inside>+;. #pragma link C++ class std::vector<Double32_t>+;. #endif. void exec(). {. auto t = new TTree(""t"",""t"");. Holder h;. t->Branch(""h."", &h);. t->Fill();. t->Print();. TTreeReader r(t);. //TTreeReaderArray<Double32_t> arr1(r, ""h.fValues"");. TTreeReaderArray<Double32_t> arr2(r, ""h.fData.fPx"");. TTreeReaderArray<Double32_t> arr3(r, ""h.fData.fPy"");. r.Next();. // arr1.GetSize();. arr2.GetSize();. arr3.GetSize();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11260
https://github.com/root-project/root/issues/11260:19,reliability,doe,does,19,"`TTreeReaderArray` does not support `Double32_t `; With the example below, we get:. ```. Error in <TTreeReaderArrayBase::GetBranchContentDataType()>: The branch h.fData.fPx contains a data type 9 for which the dictionary cannot be retrieved. ```. This was seen during investigations by CMSSW team of leveraging `Double32_t` and `Float16_t` to reduce data size. Cheers,. Philippe. ```. #include ""TTree.h"". #include ""TTreeReader.h"". #include ""TTreeReaderArray.h"". struct Inside {. Double32_t fPx;. double fPy;. };. struct Holder {. std::vector<Double32_t> fValues;. std::vector<Inside> fData;. };. #ifdef __ROOTCLING__. #pragma link C++ class Inside+;. #pragma link C++ class Holder+;. #pragma link C++ class std::vector<Inside>+;. #pragma link C++ class std::vector<Double32_t>+;. #endif. void exec(). {. auto t = new TTree(""t"",""t"");. Holder h;. t->Branch(""h."", &h);. t->Fill();. t->Print();. TTreeReader r(t);. //TTreeReaderArray<Double32_t> arr1(r, ""h.fValues"");. TTreeReaderArray<Double32_t> arr2(r, ""h.fData.fPx"");. TTreeReaderArray<Double32_t> arr3(r, ""h.fData.fPy"");. r.Next();. // arr1.GetSize();. arr2.GetSize();. arr3.GetSize();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11260
https://github.com/root-project/root/issues/11260:619,reliability,pra,pragma,619,"`TTreeReaderArray` does not support `Double32_t `; With the example below, we get:. ```. Error in <TTreeReaderArrayBase::GetBranchContentDataType()>: The branch h.fData.fPx contains a data type 9 for which the dictionary cannot be retrieved. ```. This was seen during investigations by CMSSW team of leveraging `Double32_t` and `Float16_t` to reduce data size. Cheers,. Philippe. ```. #include ""TTree.h"". #include ""TTreeReader.h"". #include ""TTreeReaderArray.h"". struct Inside {. Double32_t fPx;. double fPy;. };. struct Holder {. std::vector<Double32_t> fValues;. std::vector<Inside> fData;. };. #ifdef __ROOTCLING__. #pragma link C++ class Inside+;. #pragma link C++ class Holder+;. #pragma link C++ class std::vector<Inside>+;. #pragma link C++ class std::vector<Double32_t>+;. #endif. void exec(). {. auto t = new TTree(""t"",""t"");. Holder h;. t->Branch(""h."", &h);. t->Fill();. t->Print();. TTreeReader r(t);. //TTreeReaderArray<Double32_t> arr1(r, ""h.fValues"");. TTreeReaderArray<Double32_t> arr2(r, ""h.fData.fPx"");. TTreeReaderArray<Double32_t> arr3(r, ""h.fData.fPy"");. r.Next();. // arr1.GetSize();. arr2.GetSize();. arr3.GetSize();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11260
https://github.com/root-project/root/issues/11260:652,reliability,pra,pragma,652,"`TTreeReaderArray` does not support `Double32_t `; With the example below, we get:. ```. Error in <TTreeReaderArrayBase::GetBranchContentDataType()>: The branch h.fData.fPx contains a data type 9 for which the dictionary cannot be retrieved. ```. This was seen during investigations by CMSSW team of leveraging `Double32_t` and `Float16_t` to reduce data size. Cheers,. Philippe. ```. #include ""TTree.h"". #include ""TTreeReader.h"". #include ""TTreeReaderArray.h"". struct Inside {. Double32_t fPx;. double fPy;. };. struct Holder {. std::vector<Double32_t> fValues;. std::vector<Inside> fData;. };. #ifdef __ROOTCLING__. #pragma link C++ class Inside+;. #pragma link C++ class Holder+;. #pragma link C++ class std::vector<Inside>+;. #pragma link C++ class std::vector<Double32_t>+;. #endif. void exec(). {. auto t = new TTree(""t"",""t"");. Holder h;. t->Branch(""h."", &h);. t->Fill();. t->Print();. TTreeReader r(t);. //TTreeReaderArray<Double32_t> arr1(r, ""h.fValues"");. TTreeReaderArray<Double32_t> arr2(r, ""h.fData.fPx"");. TTreeReaderArray<Double32_t> arr3(r, ""h.fData.fPy"");. r.Next();. // arr1.GetSize();. arr2.GetSize();. arr3.GetSize();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11260
https://github.com/root-project/root/issues/11260:685,reliability,pra,pragma,685,"`TTreeReaderArray` does not support `Double32_t `; With the example below, we get:. ```. Error in <TTreeReaderArrayBase::GetBranchContentDataType()>: The branch h.fData.fPx contains a data type 9 for which the dictionary cannot be retrieved. ```. This was seen during investigations by CMSSW team of leveraging `Double32_t` and `Float16_t` to reduce data size. Cheers,. Philippe. ```. #include ""TTree.h"". #include ""TTreeReader.h"". #include ""TTreeReaderArray.h"". struct Inside {. Double32_t fPx;. double fPy;. };. struct Holder {. std::vector<Double32_t> fValues;. std::vector<Inside> fData;. };. #ifdef __ROOTCLING__. #pragma link C++ class Inside+;. #pragma link C++ class Holder+;. #pragma link C++ class std::vector<Inside>+;. #pragma link C++ class std::vector<Double32_t>+;. #endif. void exec(). {. auto t = new TTree(""t"",""t"");. Holder h;. t->Branch(""h."", &h);. t->Fill();. t->Print();. TTreeReader r(t);. //TTreeReaderArray<Double32_t> arr1(r, ""h.fValues"");. TTreeReaderArray<Double32_t> arr2(r, ""h.fData.fPx"");. TTreeReaderArray<Double32_t> arr3(r, ""h.fData.fPy"");. r.Next();. // arr1.GetSize();. arr2.GetSize();. arr3.GetSize();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11260
https://github.com/root-project/root/issues/11260:731,reliability,pra,pragma,731,"`TTreeReaderArray` does not support `Double32_t `; With the example below, we get:. ```. Error in <TTreeReaderArrayBase::GetBranchContentDataType()>: The branch h.fData.fPx contains a data type 9 for which the dictionary cannot be retrieved. ```. This was seen during investigations by CMSSW team of leveraging `Double32_t` and `Float16_t` to reduce data size. Cheers,. Philippe. ```. #include ""TTree.h"". #include ""TTreeReader.h"". #include ""TTreeReaderArray.h"". struct Inside {. Double32_t fPx;. double fPy;. };. struct Holder {. std::vector<Double32_t> fValues;. std::vector<Inside> fData;. };. #ifdef __ROOTCLING__. #pragma link C++ class Inside+;. #pragma link C++ class Holder+;. #pragma link C++ class std::vector<Inside>+;. #pragma link C++ class std::vector<Double32_t>+;. #endif. void exec(). {. auto t = new TTree(""t"",""t"");. Holder h;. t->Branch(""h."", &h);. t->Fill();. t->Print();. TTreeReader r(t);. //TTreeReaderArray<Double32_t> arr1(r, ""h.fValues"");. TTreeReaderArray<Double32_t> arr2(r, ""h.fData.fPx"");. TTreeReaderArray<Double32_t> arr3(r, ""h.fData.fPy"");. r.Next();. // arr1.GetSize();. arr2.GetSize();. arr3.GetSize();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11260
https://github.com/root-project/root/issues/11260:89,safety,Error,Error,89,"`TTreeReaderArray` does not support `Double32_t `; With the example below, we get:. ```. Error in <TTreeReaderArrayBase::GetBranchContentDataType()>: The branch h.fData.fPx contains a data type 9 for which the dictionary cannot be retrieved. ```. This was seen during investigations by CMSSW team of leveraging `Double32_t` and `Float16_t` to reduce data size. Cheers,. Philippe. ```. #include ""TTree.h"". #include ""TTreeReader.h"". #include ""TTreeReaderArray.h"". struct Inside {. Double32_t fPx;. double fPy;. };. struct Holder {. std::vector<Double32_t> fValues;. std::vector<Inside> fData;. };. #ifdef __ROOTCLING__. #pragma link C++ class Inside+;. #pragma link C++ class Holder+;. #pragma link C++ class std::vector<Inside>+;. #pragma link C++ class std::vector<Double32_t>+;. #endif. void exec(). {. auto t = new TTree(""t"",""t"");. Holder h;. t->Branch(""h."", &h);. t->Fill();. t->Print();. TTreeReader r(t);. //TTreeReaderArray<Double32_t> arr1(r, ""h.fValues"");. TTreeReaderArray<Double32_t> arr2(r, ""h.fData.fPx"");. TTreeReaderArray<Double32_t> arr3(r, ""h.fData.fPy"");. r.Next();. // arr1.GetSize();. arr2.GetSize();. arr3.GetSize();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11260
https://github.com/root-project/root/issues/11260:292,security,team,team,292,"`TTreeReaderArray` does not support `Double32_t `; With the example below, we get:. ```. Error in <TTreeReaderArrayBase::GetBranchContentDataType()>: The branch h.fData.fPx contains a data type 9 for which the dictionary cannot be retrieved. ```. This was seen during investigations by CMSSW team of leveraging `Double32_t` and `Float16_t` to reduce data size. Cheers,. Philippe. ```. #include ""TTree.h"". #include ""TTreeReader.h"". #include ""TTreeReaderArray.h"". struct Inside {. Double32_t fPx;. double fPy;. };. struct Holder {. std::vector<Double32_t> fValues;. std::vector<Inside> fData;. };. #ifdef __ROOTCLING__. #pragma link C++ class Inside+;. #pragma link C++ class Holder+;. #pragma link C++ class std::vector<Inside>+;. #pragma link C++ class std::vector<Double32_t>+;. #endif. void exec(). {. auto t = new TTree(""t"",""t"");. Holder h;. t->Branch(""h."", &h);. t->Fill();. t->Print();. TTreeReader r(t);. //TTreeReaderArray<Double32_t> arr1(r, ""h.fValues"");. TTreeReaderArray<Double32_t> arr2(r, ""h.fData.fPx"");. TTreeReaderArray<Double32_t> arr3(r, ""h.fData.fPy"");. r.Next();. // arr1.GetSize();. arr2.GetSize();. arr3.GetSize();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11260
https://github.com/root-project/root/issues/11260:28,usability,support,support,28,"`TTreeReaderArray` does not support `Double32_t `; With the example below, we get:. ```. Error in <TTreeReaderArrayBase::GetBranchContentDataType()>: The branch h.fData.fPx contains a data type 9 for which the dictionary cannot be retrieved. ```. This was seen during investigations by CMSSW team of leveraging `Double32_t` and `Float16_t` to reduce data size. Cheers,. Philippe. ```. #include ""TTree.h"". #include ""TTreeReader.h"". #include ""TTreeReaderArray.h"". struct Inside {. Double32_t fPx;. double fPy;. };. struct Holder {. std::vector<Double32_t> fValues;. std::vector<Inside> fData;. };. #ifdef __ROOTCLING__. #pragma link C++ class Inside+;. #pragma link C++ class Holder+;. #pragma link C++ class std::vector<Inside>+;. #pragma link C++ class std::vector<Double32_t>+;. #endif. void exec(). {. auto t = new TTree(""t"",""t"");. Holder h;. t->Branch(""h."", &h);. t->Fill();. t->Print();. TTreeReader r(t);. //TTreeReaderArray<Double32_t> arr1(r, ""h.fValues"");. TTreeReaderArray<Double32_t> arr2(r, ""h.fData.fPx"");. TTreeReaderArray<Double32_t> arr3(r, ""h.fData.fPy"");. r.Next();. // arr1.GetSize();. arr2.GetSize();. arr3.GetSize();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11260
https://github.com/root-project/root/issues/11260:89,usability,Error,Error,89,"`TTreeReaderArray` does not support `Double32_t `; With the example below, we get:. ```. Error in <TTreeReaderArrayBase::GetBranchContentDataType()>: The branch h.fData.fPx contains a data type 9 for which the dictionary cannot be retrieved. ```. This was seen during investigations by CMSSW team of leveraging `Double32_t` and `Float16_t` to reduce data size. Cheers,. Philippe. ```. #include ""TTree.h"". #include ""TTreeReader.h"". #include ""TTreeReaderArray.h"". struct Inside {. Double32_t fPx;. double fPy;. };. struct Holder {. std::vector<Double32_t> fValues;. std::vector<Inside> fData;. };. #ifdef __ROOTCLING__. #pragma link C++ class Inside+;. #pragma link C++ class Holder+;. #pragma link C++ class std::vector<Inside>+;. #pragma link C++ class std::vector<Double32_t>+;. #endif. void exec(). {. auto t = new TTree(""t"",""t"");. Holder h;. t->Branch(""h."", &h);. t->Fill();. t->Print();. TTreeReader r(t);. //TTreeReaderArray<Double32_t> arr1(r, ""h.fValues"");. TTreeReaderArray<Double32_t> arr2(r, ""h.fData.fPx"");. TTreeReaderArray<Double32_t> arr3(r, ""h.fData.fPy"");. r.Next();. // arr1.GetSize();. arr2.GetSize();. arr3.GetSize();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11260
https://github.com/root-project/root/pull/11261:22,usability,support,support,22,TTreeReaderArray: add support for Double32_t and Float16_t; This fixes #11246 and https://github.com/root-project/root/issues/10645,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11261
https://github.com/root-project/root/pull/11262:229,deployability,updat,updated,229,[cling] Startup script support; ## Changes or fixes:. Implement startup script support according to this post:. https://root-forum.cern.ch/t/cling-startup-scripts-support/51358. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262
https://github.com/root-project/root/pull/11262:199,safety,test,tested,199,[cling] Startup script support; ## Changes or fixes:. Implement startup script support according to this post:. https://root-forum.cern.ch/t/cling-startup-scripts-support/51358. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262
https://github.com/root-project/root/pull/11262:229,safety,updat,updated,229,[cling] Startup script support; ## Changes or fixes:. Implement startup script support according to this post:. https://root-forum.cern.ch/t/cling-startup-scripts-support/51358. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262
https://github.com/root-project/root/pull/11262:229,security,updat,updated,229,[cling] Startup script support; ## Changes or fixes:. Implement startup script support according to this post:. https://root-forum.cern.ch/t/cling-startup-scripts-support/51358. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262
https://github.com/root-project/root/pull/11262:199,testability,test,tested,199,[cling] Startup script support; ## Changes or fixes:. Implement startup script support according to this post:. https://root-forum.cern.ch/t/cling-startup-scripts-support/51358. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262
https://github.com/root-project/root/pull/11262:23,usability,support,support,23,[cling] Startup script support; ## Changes or fixes:. Implement startup script support according to this post:. https://root-forum.cern.ch/t/cling-startup-scripts-support/51358. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262
https://github.com/root-project/root/pull/11262:79,usability,support,support,79,[cling] Startup script support; ## Changes or fixes:. Implement startup script support according to this post:. https://root-forum.cern.ch/t/cling-startup-scripts-support/51358. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262
https://github.com/root-project/root/pull/11262:163,usability,support,support,163,[cling] Startup script support; ## Changes or fixes:. Implement startup script support according to this post:. https://root-forum.cern.ch/t/cling-startup-scripts-support/51358. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11262
https://github.com/root-project/root/pull/11263:406,deployability,depend,depends,406,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:513,deployability,contain,contains,513,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:1038,deployability,version,versions,1038,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:24,energy efficiency,load,loading,24,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:501,energy efficiency,load,loaded,501,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:702,energy efficiency,load,load,702,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:883,energy efficiency,load,loaded,883,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:901,energy efficiency,current,currently,901,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:957,energy efficiency,load,loading,957,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:406,integrability,depend,depends,406,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:1038,integrability,version,versions,1038,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:1070,integrability,event,eventually,1070,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:43,interoperability,share,shared,43,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:482,interoperability,share,shared,482,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:687,interoperability,share,shared,687,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:865,interoperability,share,shared,865,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:942,interoperability,share,shared,942,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:406,modifiability,depend,depends,406,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:1038,modifiability,version,versions,1038,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:24,performance,load,loading,24,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:386,performance,lock,locking,386,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:501,performance,load,loaded,501,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:647,performance,lock,lock,647,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:702,performance,load,load,702,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:852,performance,lock,lock,852,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:883,performance,load,loaded,883,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:957,performance,load,loading,957,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:990,performance,lock,lock,990,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:378,reliability,doe,does,378,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:406,safety,depend,depends,406,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:386,security,lock,locking,386,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:647,security,lock,lock,647,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:794,security,modif,modifies,794,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:852,security,lock,lock,852,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:934,security,hack,hacking,934,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:990,security,lock,lock,990,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:1005,security,hack,hack,1005,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:406,testability,depend,depends,406,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11263:329,usability,effectiv,effectively,329,"Fix race condition when loading dictionary shared libraries; Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary. information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes. that could potentially be created. This is effectively a singleton,. but TClassTable itself does no locking. Rather, it depends on callers. already having acquired the root internal mutex. When a shared library. is loaded that contains dictionary information, TClassTable gets calls. to register information for classes defined in that file. However,. the ROOT lock is not acquired in that case. So a shared library load. could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock. when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading. in order to acquire the lock, but this hack is not possible with newer. versions of glibc, so this will eventually become a blocker for. moving to centos9.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11263
https://github.com/root-project/root/pull/11264:399,availability,error,error,399,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:488,deployability,updat,updated,488,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:342,energy efficiency,current,currently,342,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:399,performance,error,error,399,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:291,reliability,diagno,diagnostics,291,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:393,safety,input,input,393,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:399,safety,error,error,399,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:418,safety,prevent,prevents,418,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:458,safety,test,tested,458,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:488,safety,updat,updated,488,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:418,security,preven,prevents,418,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:488,security,updat,updated,488,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:291,testability,diagno,diagnostics,291,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:458,testability,test,tested,458,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:161,usability,command,command,161,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:262,usability,command,command,262,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:285,usability,clear,clear,285,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:316,usability,user,user,316,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:393,usability,input,input,393,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11264:399,usability,error,error,399,"[cling] meta cmd .x should not crash if no file is given; ## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11264
https://github.com/root-project/root/pull/11265:32,availability,operat,operator,32,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:289,availability,operat,operator,289,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:341,availability,operat,operator,341,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:443,availability,operat,operator,443,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:493,availability,operat,operator,493,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:578,availability,operat,operator,578,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:674,availability,operat,operator,674,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:766,availability,operat,operator,766,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:815,availability,operat,operator,815,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:872,availability,operat,operator,872,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:928,availability,operat,operator,928,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:986,availability,error,error,986,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1593,availability,error,error,1593,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:223,deployability,fail,fail,223,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1545,deployability,updat,updated,1545,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:15,integrability,wrap,wrap,15,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1094,integrability,wrap,wrap,1094,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1126,integrability,wrap,wrapper,1126,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1126,interoperability,wrapper,wrapper,1126,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1409,interoperability,standard,standard,1409,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:986,performance,error,error,986,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1593,performance,error,error,1593,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:223,reliability,fail,fail,223,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1226,reliability,doe,does,1226,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:986,safety,error,error,986,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1515,safety,test,tested,1515,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1545,safety,updat,updated,1545,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1593,safety,error,error,1593,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1545,security,updat,updated,1545,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1515,testability,test,tested,1515,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:986,usability,error,error,986,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1189,usability,Minim,MinimalPPLexer,1189,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1297,usability,Minim,MinimalPPLexer,1297,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1456,usability,Minim,MinimalPPLexer,1456,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11265:1593,usability,error,error,1593,"[cling] Do not wrap overloaded `operator` function declarations; ## Changes or fixes:. Let `a_t` be a c++ class, and we have done `using std::ostream;`. In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally). ```. ::a_t& ::a_t::operator()(int k) {return *this; }. const a_t& a_t::operator[](int k) const {return *this; }. a_t::a_t() = default;. a_t::~a_t() = delete;. ::a_t& ::a_t::operator()(int k) {return *this; }. std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}. const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }. ::a_t& operator>=(a_t &lhs, int t) {return lhs; }. a_t& operator<=(::a_t &lhs, int t) {return lhs; }. const a_t& operator<(a_t &lhs, int t) {return lhs; }. const ::a_t& operator>(a_t &lhs, int t) {return lhs; }. ```. They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11265
https://github.com/root-project/root/pull/11266:70,deployability,build,builds,70,Add missing includes in RooSimPdfBuilder.cxx; Appears with `-Ddev=on` builds,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11266
https://github.com/root-project/root/pull/11267:51,modifiability,paramet,parameter,51,"[tmva] Fix maximum value for indexing the NumFolds parameter; The maximum unsigned int value was used for an integer resulting in a negative integer value and this was causing a bug when accessing the numfold parameter in the CvSplit expression formula. The bug is present when the parameter ""NumFold"" is not used in the SPlit expression. See https://root-forum.cern.ch/t/tmva-crossvalidation-crashes-on-destructor-pyroot/51195.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11267
https://github.com/root-project/root/pull/11267:209,modifiability,paramet,parameter,209,"[tmva] Fix maximum value for indexing the NumFolds parameter; The maximum unsigned int value was used for an integer resulting in a negative integer value and this was causing a bug when accessing the numfold parameter in the CvSplit expression formula. The bug is present when the parameter ""NumFold"" is not used in the SPlit expression. See https://root-forum.cern.ch/t/tmva-crossvalidation-crashes-on-destructor-pyroot/51195.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11267
https://github.com/root-project/root/pull/11267:282,modifiability,paramet,parameter,282,"[tmva] Fix maximum value for indexing the NumFolds parameter; The maximum unsigned int value was used for an integer resulting in a negative integer value and this was causing a bug when accessing the numfold parameter in the CvSplit expression formula. The bug is present when the parameter ""NumFold"" is not used in the SPlit expression. See https://root-forum.cern.ch/t/tmva-crossvalidation-crashes-on-destructor-pyroot/51195.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11267
https://github.com/root-project/root/pull/11267:187,security,access,accessing,187,"[tmva] Fix maximum value for indexing the NumFolds parameter; The maximum unsigned int value was used for an integer resulting in a negative integer value and this was causing a bug when accessing the numfold parameter in the CvSplit expression formula. The bug is present when the parameter ""NumFold"" is not used in the SPlit expression. See https://root-forum.cern.ch/t/tmva-crossvalidation-crashes-on-destructor-pyroot/51195.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11267
https://github.com/root-project/root/pull/11268:68,deployability,version,version,68,"[cmake] always check if `json_fwd.hpp` header provided; If external version of `nlohmann/json.hpp` is provided,. always test if json_fwd.hpp is there. If not, one only. can use versions 3.9 .. 3.10, for which forward declaration. match to included into `REveElement.hxx`. After LLVM upgrade one can fully skip usage of `json_fwd.hpp` header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268
https://github.com/root-project/root/pull/11268:177,deployability,version,versions,177,"[cmake] always check if `json_fwd.hpp` header provided; If external version of `nlohmann/json.hpp` is provided,. always test if json_fwd.hpp is there. If not, one only. can use versions 3.9 .. 3.10, for which forward declaration. match to included into `REveElement.hxx`. After LLVM upgrade one can fully skip usage of `json_fwd.hpp` header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268
https://github.com/root-project/root/pull/11268:283,deployability,upgrad,upgrade,283,"[cmake] always check if `json_fwd.hpp` header provided; If external version of `nlohmann/json.hpp` is provided,. always test if json_fwd.hpp is there. If not, one only. can use versions 3.9 .. 3.10, for which forward declaration. match to included into `REveElement.hxx`. After LLVM upgrade one can fully skip usage of `json_fwd.hpp` header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268
https://github.com/root-project/root/pull/11268:68,integrability,version,version,68,"[cmake] always check if `json_fwd.hpp` header provided; If external version of `nlohmann/json.hpp` is provided,. always test if json_fwd.hpp is there. If not, one only. can use versions 3.9 .. 3.10, for which forward declaration. match to included into `REveElement.hxx`. After LLVM upgrade one can fully skip usage of `json_fwd.hpp` header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268
https://github.com/root-project/root/pull/11268:177,integrability,version,versions,177,"[cmake] always check if `json_fwd.hpp` header provided; If external version of `nlohmann/json.hpp` is provided,. always test if json_fwd.hpp is there. If not, one only. can use versions 3.9 .. 3.10, for which forward declaration. match to included into `REveElement.hxx`. After LLVM upgrade one can fully skip usage of `json_fwd.hpp` header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268
https://github.com/root-project/root/pull/11268:68,modifiability,version,version,68,"[cmake] always check if `json_fwd.hpp` header provided; If external version of `nlohmann/json.hpp` is provided,. always test if json_fwd.hpp is there. If not, one only. can use versions 3.9 .. 3.10, for which forward declaration. match to included into `REveElement.hxx`. After LLVM upgrade one can fully skip usage of `json_fwd.hpp` header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268
https://github.com/root-project/root/pull/11268:177,modifiability,version,versions,177,"[cmake] always check if `json_fwd.hpp` header provided; If external version of `nlohmann/json.hpp` is provided,. always test if json_fwd.hpp is there. If not, one only. can use versions 3.9 .. 3.10, for which forward declaration. match to included into `REveElement.hxx`. After LLVM upgrade one can fully skip usage of `json_fwd.hpp` header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268
https://github.com/root-project/root/pull/11268:283,modifiability,upgrad,upgrade,283,"[cmake] always check if `json_fwd.hpp` header provided; If external version of `nlohmann/json.hpp` is provided,. always test if json_fwd.hpp is there. If not, one only. can use versions 3.9 .. 3.10, for which forward declaration. match to included into `REveElement.hxx`. After LLVM upgrade one can fully skip usage of `json_fwd.hpp` header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268
https://github.com/root-project/root/pull/11268:120,safety,test,test,120,"[cmake] always check if `json_fwd.hpp` header provided; If external version of `nlohmann/json.hpp` is provided,. always test if json_fwd.hpp is there. If not, one only. can use versions 3.9 .. 3.10, for which forward declaration. match to included into `REveElement.hxx`. After LLVM upgrade one can fully skip usage of `json_fwd.hpp` header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268
https://github.com/root-project/root/pull/11268:120,testability,test,test,120,"[cmake] always check if `json_fwd.hpp` header provided; If external version of `nlohmann/json.hpp` is provided,. always test if json_fwd.hpp is there. If not, one only. can use versions 3.9 .. 3.10, for which forward declaration. match to included into `REveElement.hxx`. After LLVM upgrade one can fully skip usage of `json_fwd.hpp` header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11268
https://github.com/root-project/root/pull/11270:104,deployability,updat,updating,104,[backport-v626] Avoid using deprecated std::iterator in several classes; Cherry-picked commits that are updating the deprecated std::iterator in several classes. Spotted here: https://root-forum.cern.ch/t/deprecated-iterator-in-ttreereader-h-and-tseq-hxx/51344/2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11270
https://github.com/root-project/root/pull/11270:16,safety,Avoid,Avoid,16,[backport-v626] Avoid using deprecated std::iterator in several classes; Cherry-picked commits that are updating the deprecated std::iterator in several classes. Spotted here: https://root-forum.cern.ch/t/deprecated-iterator-in-ttreereader-h-and-tseq-hxx/51344/2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11270
https://github.com/root-project/root/pull/11270:104,safety,updat,updating,104,[backport-v626] Avoid using deprecated std::iterator in several classes; Cherry-picked commits that are updating the deprecated std::iterator in several classes. Spotted here: https://root-forum.cern.ch/t/deprecated-iterator-in-ttreereader-h-and-tseq-hxx/51344/2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11270
https://github.com/root-project/root/pull/11270:104,security,updat,updating,104,[backport-v626] Avoid using deprecated std::iterator in several classes; Cherry-picked commits that are updating the deprecated std::iterator in several classes. Spotted here: https://root-forum.cern.ch/t/deprecated-iterator-in-ttreereader-h-and-tseq-hxx/51344/2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11270
https://github.com/root-project/root/issues/11271:5,deployability,fail,fails,5,"ROOT fails to compile with current VecGeom; The source file `geom/vecgeom/src/TGeoVGShape.cxx` currently includes VecGeom headers from their ""old"" locations:. https://github.com/root-project/root/blob/5f2ced2567e005b286ba3b726c356324119dcb39/geom/vecgeom/src/TGeoVGShape.cxx#L18-L35. The ""new"" location is prefixed by `VecGeom/` since January 2020 (see [commit](https://gitlab.cern.ch/VecGeom/VecGeom/-/commit/8eb16296d783518d30ae352740e5e899e10b257b)), so it's not possible to compile ROOT with VecGeom 1.1.6 or later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11271
https://github.com/root-project/root/issues/11271:27,energy efficiency,current,current,27,"ROOT fails to compile with current VecGeom; The source file `geom/vecgeom/src/TGeoVGShape.cxx` currently includes VecGeom headers from their ""old"" locations:. https://github.com/root-project/root/blob/5f2ced2567e005b286ba3b726c356324119dcb39/geom/vecgeom/src/TGeoVGShape.cxx#L18-L35. The ""new"" location is prefixed by `VecGeom/` since January 2020 (see [commit](https://gitlab.cern.ch/VecGeom/VecGeom/-/commit/8eb16296d783518d30ae352740e5e899e10b257b)), so it's not possible to compile ROOT with VecGeom 1.1.6 or later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11271
https://github.com/root-project/root/issues/11271:95,energy efficiency,current,currently,95,"ROOT fails to compile with current VecGeom; The source file `geom/vecgeom/src/TGeoVGShape.cxx` currently includes VecGeom headers from their ""old"" locations:. https://github.com/root-project/root/blob/5f2ced2567e005b286ba3b726c356324119dcb39/geom/vecgeom/src/TGeoVGShape.cxx#L18-L35. The ""new"" location is prefixed by `VecGeom/` since January 2020 (see [commit](https://gitlab.cern.ch/VecGeom/VecGeom/-/commit/8eb16296d783518d30ae352740e5e899e10b257b)), so it's not possible to compile ROOT with VecGeom 1.1.6 or later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11271
https://github.com/root-project/root/issues/11271:5,reliability,fail,fails,5,"ROOT fails to compile with current VecGeom; The source file `geom/vecgeom/src/TGeoVGShape.cxx` currently includes VecGeom headers from their ""old"" locations:. https://github.com/root-project/root/blob/5f2ced2567e005b286ba3b726c356324119dcb39/geom/vecgeom/src/TGeoVGShape.cxx#L18-L35. The ""new"" location is prefixed by `VecGeom/` since January 2020 (see [commit](https://gitlab.cern.ch/VecGeom/VecGeom/-/commit/8eb16296d783518d30ae352740e5e899e10b257b)), so it's not possible to compile ROOT with VecGeom 1.1.6 or later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11271
https://github.com/root-project/root/issues/11272:755,availability,operat,operator,755,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:128,deployability,build,build,128,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:300,deployability,build,build,300,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:345,deployability,build,build,345,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:374,deployability,patch,patches,374,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:400,deployability,patch,patches,400,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:525,deployability,build,build,525,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:570,deployability,build,build,570,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:599,deployability,patch,patches,599,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:625,deployability,patch,patches,625,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:800,deployability,build,build,800,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:845,deployability,build,build,845,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:1162,deployability,contain,contain,1162,"D4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:1462,deployability,compos,composite,1462,"eoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:1491,deployability,compos,composite,1491,"tities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/tot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:1519,deployability,compos,composite,1519,"/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/total);. mix->Print();. TGeoMix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:2940,deployability,patch,patches,2940," see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/total);. mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);. mix2->AddElement(mix, 0.85);. mix2->AddElement(c, 0.15);. mix2->Print();. std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';. for(int i=0; i< mix2->GetNelements(); i++) {. std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; . }. mix2->ComputeDerivedQuantities();. }. ``` . reproduces the segfault with v6-26-00-patches, whereas 6.24.06 runs fine. ### Setup. 1. ROOT v6-26-00-patches from SFT nightlies: (/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Mon/ROOT/v6-26-00-patches/). 2. centos7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:3004,deployability,patch,patches,3004," see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/total);. mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);. mix2->AddElement(mix, 0.85);. mix2->AddElement(c, 0.15);. mix2->Print();. std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';. for(int i=0; i< mix2->GetNelements(); i++) {. std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; . }. mix2->ComputeDerivedQuantities();. }. ``` . reproduces the segfault with v6-26-00-patches, whereas 6.24.06 runs fine. ### Setup. 1. ROOT v6-26-00-patches from SFT nightlies: (/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Mon/ROOT/v6-26-00-patches/). 2. centos7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:3099,deployability,patch,patches,3099," see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/total);. mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);. mix2->AddElement(mix, 0.85);. mix2->AddElement(c, 0.15);. mix2->Print();. std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';. for(int i=0; i< mix2->GetNelements(); i++) {. std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; . }. mix2->ComputeDerivedQuantities();. }. ``` . reproduces the segfault with v6-26-00-patches, whereas 6.24.06 runs fine. ### Setup. 1. ROOT v6-26-00-patches from SFT nightlies: (/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Mon/ROOT/v6-26-00-patches/). 2. centos7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:190,interoperability,XML,XML,190,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:739,interoperability,xml,xml,739,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:903,interoperability,plug,plugins,903,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:969,interoperability,xml,xml,969,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:1041,interoperability,xml,xml,1041,"tities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:1462,modifiability,compos,composite,1462,"eoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:1491,modifiability,compos,composite,1491,"tities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/tot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:1519,modifiability,compos,composite,1519,"/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/total);. mix->Print();. TGeoMix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:157,safety,test,testing,157,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:230,safety,Detect,Detector,230,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:374,safety,patch,patches,374,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:400,safety,patch,patches,400,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:599,safety,patch,patches,599,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:625,safety,patch,patches,625,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:2940,safety,patch,patches,2940," see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/total);. mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);. mix2->AddElement(mix, 0.85);. mix2->AddElement(c, 0.15);. mix2->Print();. std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';. for(int i=0; i< mix2->GetNelements(); i++) {. std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; . }. mix2->ComputeDerivedQuantities();. }. ``` . reproduces the segfault with v6-26-00-patches, whereas 6.24.06 runs fine. ### Setup. 1. ROOT v6-26-00-patches from SFT nightlies: (/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Mon/ROOT/v6-26-00-patches/). 2. centos7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:3004,safety,patch,patches,3004," see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/total);. mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);. mix2->AddElement(mix, 0.85);. mix2->AddElement(c, 0.15);. mix2->Print();. std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';. for(int i=0; i< mix2->GetNelements(); i++) {. std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; . }. mix2->ComputeDerivedQuantities();. }. ``` . reproduces the segfault with v6-26-00-patches, whereas 6.24.06 runs fine. ### Setup. 1. ROOT v6-26-00-patches from SFT nightlies: (/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Mon/ROOT/v6-26-00-patches/). 2. centos7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:3099,safety,patch,patches,3099," see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/total);. mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);. mix2->AddElement(mix, 0.85);. mix2->AddElement(c, 0.15);. mix2->Print();. std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';. for(int i=0; i< mix2->GetNelements(); i++) {. std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; . }. mix2->ComputeDerivedQuantities();. }. ``` . reproduces the segfault with v6-26-00-patches, whereas 6.24.06 runs fine. ### Setup. 1. ROOT v6-26-00-patches from SFT nightlies: (/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Mon/ROOT/v6-26-00-patches/). 2. centos7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:230,security,Detect,Detector,230,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:374,security,patch,patches,374,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:400,security,patch,patches,400,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:599,security,patch,patches,599,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:625,security,patch,patches,625,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:2940,security,patch,patches,2940," see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/total);. mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);. mix2->AddElement(mix, 0.85);. mix2->AddElement(c, 0.15);. mix2->Print();. std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';. for(int i=0; i< mix2->GetNelements(); i++) {. std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; . }. mix2->ComputeDerivedQuantities();. }. ``` . reproduces the segfault with v6-26-00-patches, whereas 6.24.06 runs fine. ### Setup. 1. ROOT v6-26-00-patches from SFT nightlies: (/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Mon/ROOT/v6-26-00-patches/). 2. centos7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:3004,security,patch,patches,3004," see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/total);. mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);. mix2->AddElement(mix, 0.85);. mix2->AddElement(c, 0.15);. mix2->Print();. std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';. for(int i=0; i< mix2->GetNelements(); i++) {. std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; . }. mix2->ComputeDerivedQuantities();. }. ``` . reproduces the segfault with v6-26-00-patches, whereas 6.24.06 runs fine. ### Setup. 1. ROOT v6-26-00-patches from SFT nightlies: (/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Mon/ROOT/v6-26-00-patches/). 2. centos7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:3099,security,patch,patches,3099," see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/total);. mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);. mix2->AddElement(mix, 0.85);. mix2->AddElement(c, 0.15);. mix2->Print();. std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';. for(int i=0; i< mix2->GetNelements(); i++) {. std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; . }. mix2->ComputeDerivedQuantities();. }. ``` . reproduces the segfault with v6-26-00-patches, whereas 6.24.06 runs fine. ### Setup. 1. ROOT v6-26-00-patches from SFT nightlies: (/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Mon/ROOT/v6-26-00-patches/). 2. centos7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:157,testability,test,testing,157,"Segfault in TGeoMixture::ComputeDerivedQuantities; - [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector. ```. #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:1445,testability,unit,unit,1445,"007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->Ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:1669,testability,unit,unit,1669,"2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/total);. mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);. mix2->AddElement(mix, 0.85);. mix2->AddElement(c, 0.15);. mix2->Print();. std::cout << ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:1965,testability,simpl,simple,1965,":xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/total);. mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);. mix2->AddElement(mix, 0.85);. mix2->AddElement(c, 0.15);. mix2->Print();. std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';. for(int i=0; i< mix2->GetNelements(); i++) {. std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; . }. mix2->ComputeDerivedQuantities();. }. ``` . reproduces the segfault with v6-26-00-patches, whereas 6.24.06 run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:1353,usability,Support,Supports,1353,"ts/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76. #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0). at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. dou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:1572,usability,Support,Supports,1572,"projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262. #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...). at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/total);. mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:1879,usability,behavi,behavior,1879,"ep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489. #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/total);. mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);. mix2->AddElement(mix, 0.85);. mix2->AddElement(c, 0.15);. mix2->Print();. std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';. for(int i=0; i< mix2->GetNelements(); i++) {. std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; . }. mix2->ComputeDerivedQuant",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
https://github.com/root-project/root/issues/11272:1950,usability,behavi,behaviour,1950,"c3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...). ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```. <!-- ### Pipe Supports Sintimid ### -->. <material name =""Pipe:Sintimid"">. <D type=""density"" value=""1.43"" unit=""g/cm3""/>. <composite ref=""C"" n=""18""/>. <composite ref=""O"" n=""5""/>. <composite ref=""N"" n=""2""/>. </material>. <!--### Pipe Supports Sintimid15G ###-->. <material name =""Pipe:Sintimid15G"">. <D type=""density"" value=""1.42"" unit=""g/cm3""/>. <fraction ref=""Pipe:Sintimid"" n=""0.85""/>. <fraction ref=""C"" n=""0.15""/>. </material>. ```. where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior. No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:. ```. void test_mixture(). {. TGeoManager *geom = new TGeoManager("""","""");. TGeoElementTable *table = gGeoManager->GetElementTable();. TGeoElement *c = table->GetElement(6);. TGeoElement *n = table->GetElement(7);. TGeoElement *o = table->GetElement(8);. . TGeoMixture *mix = new TGeoMixture(""Pipe:Sintimid"", 3, 1.43);. double cc = 18 * c->A();. double cn = 2 * n->A();. double co = 5 * o->A();. double total = cc + cn + co;. mix->AddElement(c, cc/total);. mix->AddElement(n, cn/total);. mix->AddElement(o, co/total);. mix->Print();. TGeoMixture *mix2 = new TGeoMixture(""Pipe:Sintimid15G"", 2, 1.42);. mix2->AddElement(mix, 0.85);. mix2->AddElement(c, 0.15);. mix2->Print();. std::cout << ""Number of elements:"" << mix2->GetNelements() << '\n';. for(int i=0; i< mix2->GetNelements(); i++) {. std::cout << ""Element "" << i << "": "" << mix2->GetElement(i)->GetName() << '\n'; . }. mix2->ComputeDerivedQuantities();. }. ``` . reproduces the segfault with v6-26-00-patches, wherea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11272
