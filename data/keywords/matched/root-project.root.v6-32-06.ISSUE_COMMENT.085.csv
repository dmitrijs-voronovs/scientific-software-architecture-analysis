id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/13825:47,usability,help,help,47,"Hi @unelg - you missed my point, I'm trying to help you with your software stack. Even if we update libpng you still have a problem because you are mixing multiple libpng versions. Up to you :-) But please at https://root-forum.cern.ch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13825
https://github.com/root-project/root/issues/13834:84,energy efficiency,draw,draw,84,"I also encountered this problem on the new Macos 14. Even in the ROOT prompt, I can draw plots normally, but if I click the menu ""edit"" or others, ROOT will crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:124,usability,menu,menu,124,"I also encountered this problem on the new Macos 14. Even in the ROOT prompt, I can draw plots normally, but if I click the menu ""edit"" or others, ROOT will crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:13,security,access,access,13,I don't have access to a Mac. Maybe @couet can try?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:180,deployability,manag,manage,180,"I just tried on macos14 and pyroot. The browser opens fine. Can it be linked to the event loop? In any case the web browser works very well, as a stop gap solution. What I did not manage to reproduce is the crash upon clicking ""Edit"" when drawing a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:180,energy efficiency,manag,manage,180,"I just tried on macos14 and pyroot. The browser opens fine. Can it be linked to the event loop? In any case the web browser works very well, as a stop gap solution. What I did not manage to reproduce is the crash upon clicking ""Edit"" when drawing a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:239,energy efficiency,draw,drawing,239,"I just tried on macos14 and pyroot. The browser opens fine. Can it be linked to the event loop? In any case the web browser works very well, as a stop gap solution. What I did not manage to reproduce is the crash upon clicking ""Edit"" when drawing a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:84,integrability,event,event,84,"I just tried on macos14 and pyroot. The browser opens fine. Can it be linked to the event loop? In any case the web browser works very well, as a stop gap solution. What I did not manage to reproduce is the crash upon clicking ""Edit"" when drawing a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:180,safety,manag,manage,180,"I just tried on macos14 and pyroot. The browser opens fine. Can it be linked to the event loop? In any case the web browser works very well, as a stop gap solution. What I did not manage to reproduce is the crash upon clicking ""Edit"" when drawing a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:146,usability,stop,stop,146,"I just tried on macos14 and pyroot. The browser opens fine. Can it be linked to the event loop? In any case the web browser works very well, as a stop gap solution. What I did not manage to reproduce is the crash upon clicking ""Edit"" when drawing a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:182,deployability,manag,manage,182,"> I just tried on macos14 and pyroot. The browser opens fine. Can it be linked to the event loop? In any case the web browser works very well, as a stop gap solution. What I did not manage to reproduce is the crash upon clicking ""Edit"" when drawing a plot. Thanks for trying this. Can you just try the root prompt? And open a TBrowser, or draw a plot and then click the edit menu.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:182,energy efficiency,manag,manage,182,"> I just tried on macos14 and pyroot. The browser opens fine. Can it be linked to the event loop? In any case the web browser works very well, as a stop gap solution. What I did not manage to reproduce is the crash upon clicking ""Edit"" when drawing a plot. Thanks for trying this. Can you just try the root prompt? And open a TBrowser, or draw a plot and then click the edit menu.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:241,energy efficiency,draw,drawing,241,"> I just tried on macos14 and pyroot. The browser opens fine. Can it be linked to the event loop? In any case the web browser works very well, as a stop gap solution. What I did not manage to reproduce is the crash upon clicking ""Edit"" when drawing a plot. Thanks for trying this. Can you just try the root prompt? And open a TBrowser, or draw a plot and then click the edit menu.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:339,energy efficiency,draw,draw,339,"> I just tried on macos14 and pyroot. The browser opens fine. Can it be linked to the event loop? In any case the web browser works very well, as a stop gap solution. What I did not manage to reproduce is the crash upon clicking ""Edit"" when drawing a plot. Thanks for trying this. Can you just try the root prompt? And open a TBrowser, or draw a plot and then click the edit menu.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:86,integrability,event,event,86,"> I just tried on macos14 and pyroot. The browser opens fine. Can it be linked to the event loop? In any case the web browser works very well, as a stop gap solution. What I did not manage to reproduce is the crash upon clicking ""Edit"" when drawing a plot. Thanks for trying this. Can you just try the root prompt? And open a TBrowser, or draw a plot and then click the edit menu.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:182,safety,manag,manage,182,"> I just tried on macos14 and pyroot. The browser opens fine. Can it be linked to the event loop? In any case the web browser works very well, as a stop gap solution. What I did not manage to reproduce is the crash upon clicking ""Edit"" when drawing a plot. Thanks for trying this. Can you just try the root prompt? And open a TBrowser, or draw a plot and then click the edit menu.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:148,usability,stop,stop,148,"> I just tried on macos14 and pyroot. The browser opens fine. Can it be linked to the event loop? In any case the web browser works very well, as a stop gap solution. What I did not manage to reproduce is the crash upon clicking ""Edit"" when drawing a plot. Thanks for trying this. Can you just try the root prompt? And open a TBrowser, or draw a plot and then click the edit menu.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:375,usability,menu,menu,375,"> I just tried on macos14 and pyroot. The browser opens fine. Can it be linked to the event loop? In any case the web browser works very well, as a stop gap solution. What I did not manage to reproduce is the crash upon clicking ""Edit"" when drawing a plot. Thanks for trying this. Can you just try the root prompt? And open a TBrowser, or draw a plot and then click the edit menu.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:87,deployability,build,build,87,I just tried:. ```. root [0] TBrowser B. ```. It is fine with master on my mac. I will build 6.28,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:75,availability,down,downloaded,75,"> By the way, where did you take root from ? did you built it yourself ? I downloaded the source code from the official website, https://root.cern/releases/release-62806/. I made no changes to the source code and subsequently compiled and installed root. I think it's the macos upgrade that's causing this bug, because everything was fine before the upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:147,deployability,releas,releases,147,"> By the way, where did you take root from ? did you built it yourself ? I downloaded the source code from the official website, https://root.cern/releases/release-62806/. I made no changes to the source code and subsequently compiled and installed root. I think it's the macos upgrade that's causing this bug, because everything was fine before the upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:156,deployability,releas,release-,156,"> By the way, where did you take root from ? did you built it yourself ? I downloaded the source code from the official website, https://root.cern/releases/release-62806/. I made no changes to the source code and subsequently compiled and installed root. I think it's the macos upgrade that's causing this bug, because everything was fine before the upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:239,deployability,instal,installed,239,"> By the way, where did you take root from ? did you built it yourself ? I downloaded the source code from the official website, https://root.cern/releases/release-62806/. I made no changes to the source code and subsequently compiled and installed root. I think it's the macos upgrade that's causing this bug, because everything was fine before the upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:278,deployability,upgrad,upgrade,278,"> By the way, where did you take root from ? did you built it yourself ? I downloaded the source code from the official website, https://root.cern/releases/release-62806/. I made no changes to the source code and subsequently compiled and installed root. I think it's the macos upgrade that's causing this bug, because everything was fine before the upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:350,deployability,upgrad,upgrade,350,"> By the way, where did you take root from ? did you built it yourself ? I downloaded the source code from the official website, https://root.cern/releases/release-62806/. I made no changes to the source code and subsequently compiled and installed root. I think it's the macos upgrade that's causing this bug, because everything was fine before the upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:213,integrability,sub,subsequently,213,"> By the way, where did you take root from ? did you built it yourself ? I downloaded the source code from the official website, https://root.cern/releases/release-62806/. I made no changes to the source code and subsequently compiled and installed root. I think it's the macos upgrade that's causing this bug, because everything was fine before the upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:278,modifiability,upgrad,upgrade,278,"> By the way, where did you take root from ? did you built it yourself ? I downloaded the source code from the official website, https://root.cern/releases/release-62806/. I made no changes to the source code and subsequently compiled and installed root. I think it's the macos upgrade that's causing this bug, because everything was fine before the upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:350,modifiability,upgrad,upgrade,350,"> By the way, where did you take root from ? did you built it yourself ? I downloaded the source code from the official website, https://root.cern/releases/release-62806/. I made no changes to the source code and subsequently compiled and installed root. I think it's the macos upgrade that's causing this bug, because everything was fine before the upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:39,deployability,modul,module,39,"Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:117,deployability,build,build,117,"Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:199,deployability,version,version,199,"Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:263,deployability,build,build,263,"Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:199,integrability,version,version,199,"Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:39,modifiability,modul,module,39,"Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:199,modifiability,version,version,199,"Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:39,safety,modul,module,39,"Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:41,deployability,modul,module,41,"> Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want. I'm sorry if I didn't make myself clear. I also build it from sources on my MacOS 14 machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:119,deployability,build,build,119,"> Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want. I'm sorry if I didn't make myself clear. I also build it from sources on my MacOS 14 machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:201,deployability,version,version,201,"> Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want. I'm sorry if I didn't make myself clear. I also build it from sources on my MacOS 14 machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:265,deployability,build,build,265,"> Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want. I'm sorry if I didn't make myself clear. I also build it from sources on my MacOS 14 machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:349,deployability,build,build,349,"> Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want. I'm sorry if I didn't make myself clear. I also build it from sources on my MacOS 14 machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:201,integrability,version,version,201,"> Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want. I'm sorry if I didn't make myself clear. I also build it from sources on my MacOS 14 machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:41,modifiability,modul,module,41,"> Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want. I'm sorry if I didn't make myself clear. I also build it from sources on my MacOS 14 machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:201,modifiability,version,version,201,"> Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want. I'm sorry if I didn't make myself clear. I also build it from sources on my MacOS 14 machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:41,safety,modul,module,41,"> Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want. I'm sorry if I didn't make myself clear. I also build it from sources on my MacOS 14 machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:335,usability,clear,clear,335,"> Yes, but on that web page, there is no module for MacOS14 yet. That might be the cause of the problem because when I build it from sources on my MacOS 14 machine I have no problem with TBrowser. The version for macOS14 should come soon. Meanwhile, you can try to build from the sources if you want. I'm sorry if I didn't make myself clear. I also build it from sources on my MacOS 14 machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:86,energy efficiency,draw,draw,86,"> I also encountered this problem on the new Macos 14. Even in the ROOT prompt, I can draw plots normally, but if I click the menu ""edit"" or others, ROOT will crash. Intel machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:126,usability,menu,menu,126,"> I also encountered this problem on the new Macos 14. Even in the ROOT prompt, I can draw plots normally, but if I click the menu ""edit"" or others, ROOT will crash. Intel machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:26,deployability,build,build,26,"I just tried with a local build using ""master"" on my Intel MacOS machine 14.0 23A344 . and it works:. <img width=""839"" alt=""Screenshot 2023-10-11 at 09 19 37"" src=""https://github.com/root-project/root/assets/4697738/60d1f530-dd59-4a2c-91b9-4e059aeef962"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:28,deployability,build,build,28,"> I just tried with a local build using ""master"" on my Intel MacOS machine 14.0 23A344 and it works: <img alt=""Screenshot 2023-10-11 at 09 19 37"" width=""839"" src=""https://user-images.githubusercontent.com/4697738/274177192-60d1f530-dd59-4a2c-91b9-4e059aeef962.png"">. ok, I will try ""master"" sources.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:171,usability,user,user-images,171,"> I just tried with a local build using ""master"" on my Intel MacOS machine 14.0 23A344 and it works: <img alt=""Screenshot 2023-10-11 at 09 19 37"" width=""839"" src=""https://user-images.githubusercontent.com/4697738/274177192-60d1f530-dd59-4a2c-91b9-4e059aeef962.png"">. ok, I will try ""master"" sources.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:269,availability,down,downloaded,269,"> I just tried with a local build using ""master"" on my Intel MacOS machine 14.0 23A344 and it works: <img alt=""Screenshot 2023-10-11 at 09 19 37"" width=""839"" src=""https://user-images.githubusercontent.com/4697738/274177192-60d1f530-dd59-4a2c-91b9-4e059aeef962.png"">. I downloaded the master on github and ran root successfully after cmake. TBrowser still doesn't work though, luckily the web version works. <img width=""1126"" alt=""截屏2023-10-11 16 01 39"" src=""https://github.com/root-project/root/assets/61787337/1481909e-57ea-4c48-84cf-6c64129ab7f2"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:28,deployability,build,build,28,"> I just tried with a local build using ""master"" on my Intel MacOS machine 14.0 23A344 and it works: <img alt=""Screenshot 2023-10-11 at 09 19 37"" width=""839"" src=""https://user-images.githubusercontent.com/4697738/274177192-60d1f530-dd59-4a2c-91b9-4e059aeef962.png"">. I downloaded the master on github and ran root successfully after cmake. TBrowser still doesn't work though, luckily the web version works. <img width=""1126"" alt=""截屏2023-10-11 16 01 39"" src=""https://github.com/root-project/root/assets/61787337/1481909e-57ea-4c48-84cf-6c64129ab7f2"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:392,deployability,version,version,392,"> I just tried with a local build using ""master"" on my Intel MacOS machine 14.0 23A344 and it works: <img alt=""Screenshot 2023-10-11 at 09 19 37"" width=""839"" src=""https://user-images.githubusercontent.com/4697738/274177192-60d1f530-dd59-4a2c-91b9-4e059aeef962.png"">. I downloaded the master on github and ran root successfully after cmake. TBrowser still doesn't work though, luckily the web version works. <img width=""1126"" alt=""截屏2023-10-11 16 01 39"" src=""https://github.com/root-project/root/assets/61787337/1481909e-57ea-4c48-84cf-6c64129ab7f2"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:392,integrability,version,version,392,"> I just tried with a local build using ""master"" on my Intel MacOS machine 14.0 23A344 and it works: <img alt=""Screenshot 2023-10-11 at 09 19 37"" width=""839"" src=""https://user-images.githubusercontent.com/4697738/274177192-60d1f530-dd59-4a2c-91b9-4e059aeef962.png"">. I downloaded the master on github and ran root successfully after cmake. TBrowser still doesn't work though, luckily the web version works. <img width=""1126"" alt=""截屏2023-10-11 16 01 39"" src=""https://github.com/root-project/root/assets/61787337/1481909e-57ea-4c48-84cf-6c64129ab7f2"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:392,modifiability,version,version,392,"> I just tried with a local build using ""master"" on my Intel MacOS machine 14.0 23A344 and it works: <img alt=""Screenshot 2023-10-11 at 09 19 37"" width=""839"" src=""https://user-images.githubusercontent.com/4697738/274177192-60d1f530-dd59-4a2c-91b9-4e059aeef962.png"">. I downloaded the master on github and ran root successfully after cmake. TBrowser still doesn't work though, luckily the web version works. <img width=""1126"" alt=""截屏2023-10-11 16 01 39"" src=""https://github.com/root-project/root/assets/61787337/1481909e-57ea-4c48-84cf-6c64129ab7f2"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:355,reliability,doe,doesn,355,"> I just tried with a local build using ""master"" on my Intel MacOS machine 14.0 23A344 and it works: <img alt=""Screenshot 2023-10-11 at 09 19 37"" width=""839"" src=""https://user-images.githubusercontent.com/4697738/274177192-60d1f530-dd59-4a2c-91b9-4e059aeef962.png"">. I downloaded the master on github and ran root successfully after cmake. TBrowser still doesn't work though, luckily the web version works. <img width=""1126"" alt=""截屏2023-10-11 16 01 39"" src=""https://github.com/root-project/root/assets/61787337/1481909e-57ea-4c48-84cf-6c64129ab7f2"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:171,usability,user,user-images,171,"> I just tried with a local build using ""master"" on my Intel MacOS machine 14.0 23A344 and it works: <img alt=""Screenshot 2023-10-11 at 09 19 37"" width=""839"" src=""https://user-images.githubusercontent.com/4697738/274177192-60d1f530-dd59-4a2c-91b9-4e059aeef962.png"">. I downloaded the master on github and ran root successfully after cmake. TBrowser still doesn't work though, luckily the web version works. <img width=""1126"" alt=""截屏2023-10-11 16 01 39"" src=""https://github.com/root-project/root/assets/61787337/1481909e-57ea-4c48-84cf-6c64129ab7f2"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:107,deployability,updat,update,107,"_TBrowser still doesn't work though_. On both Intel and M2 ? I was also thinking about Xcode, is there any update to be done on your machine(s) ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:16,reliability,doe,doesn,16,"_TBrowser still doesn't work though_. On both Intel and M2 ? I was also thinking about Xcode, is there any update to be done on your machine(s) ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:107,safety,updat,update,107,"_TBrowser still doesn't work though_. On both Intel and M2 ? I was also thinking about Xcode, is there any update to be done on your machine(s) ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:107,security,updat,update,107,"_TBrowser still doesn't work though_. On both Intel and M2 ? I was also thinking about Xcode, is there any update to be done on your machine(s) ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:121,deployability,updat,update,121,"> _TBrowser still doesn't work though_. > . > On both Intel and M2 ? > . > I was also thinking about Xcode, is there any update to be done on your machine(s) ? M2 machine is a new one, so the Xcode v15.0 is installed for the latest version. Intel machine is my friend's, so I'm not quite sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:207,deployability,instal,installed,207,"> _TBrowser still doesn't work though_. > . > On both Intel and M2 ? > . > I was also thinking about Xcode, is there any update to be done on your machine(s) ? M2 machine is a new one, so the Xcode v15.0 is installed for the latest version. Intel machine is my friend's, so I'm not quite sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:232,deployability,version,version,232,"> _TBrowser still doesn't work though_. > . > On both Intel and M2 ? > . > I was also thinking about Xcode, is there any update to be done on your machine(s) ? M2 machine is a new one, so the Xcode v15.0 is installed for the latest version. Intel machine is my friend's, so I'm not quite sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:232,integrability,version,version,232,"> _TBrowser still doesn't work though_. > . > On both Intel and M2 ? > . > I was also thinking about Xcode, is there any update to be done on your machine(s) ? M2 machine is a new one, so the Xcode v15.0 is installed for the latest version. Intel machine is my friend's, so I'm not quite sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:232,modifiability,version,version,232,"> _TBrowser still doesn't work though_. > . > On both Intel and M2 ? > . > I was also thinking about Xcode, is there any update to be done on your machine(s) ? M2 machine is a new one, so the Xcode v15.0 is installed for the latest version. Intel machine is my friend's, so I'm not quite sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:18,reliability,doe,doesn,18,"> _TBrowser still doesn't work though_. > . > On both Intel and M2 ? > . > I was also thinking about Xcode, is there any update to be done on your machine(s) ? M2 machine is a new one, so the Xcode v15.0 is installed for the latest version. Intel machine is my friend's, so I'm not quite sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:121,safety,updat,update,121,"> _TBrowser still doesn't work though_. > . > On both Intel and M2 ? > . > I was also thinking about Xcode, is there any update to be done on your machine(s) ? M2 machine is a new one, so the Xcode v15.0 is installed for the latest version. Intel machine is my friend's, so I'm not quite sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:121,security,updat,update,121,"> _TBrowser still doesn't work though_. > . > On both Intel and M2 ? > . > I was also thinking about Xcode, is there any update to be done on your machine(s) ? M2 machine is a new one, so the Xcode v15.0 is installed for the latest version. Intel machine is my friend's, so I'm not quite sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:63,availability,down,down,63,It does not seem to be blocked because the GUI reacts the pull-down menus from the menu bar display correctly and the fit panel displays correctly also ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:3,reliability,doe,does,3,It does not seem to be blocked because the GUI reacts the pull-down menus from the menu bar display correctly and the fit panel displays correctly also ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:68,usability,menu,menus,68,It does not seem to be blocked because the GUI reacts the pull-down menus from the menu bar display correctly and the fit panel displays correctly also ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:83,usability,menu,menu,83,It does not seem to be blocked because the GUI reacts the pull-down menus from the menu bar display correctly and the fit panel displays correctly also ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:90,deployability,instal,installed,90,"Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:224,deployability,version,version,224,"Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:270,deployability,fail,failing,270,"Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:301,deployability,version,version,301,"Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:224,integrability,version,version,224,"Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:301,integrability,version,version,301,"Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:224,modifiability,version,version,224,"Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:301,modifiability,version,version,301,"Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:270,reliability,fail,failing,270,"Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:207,usability,command,command,207,"Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:92,deployability,instal,installed,92,"> Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ... M2 machine: clang version is 15.0.0(clang-1500.0.40.1)& MacOS 14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:226,deployability,version,version,226,"> Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ... M2 machine: clang version is 15.0.0(clang-1500.0.40.1)& MacOS 14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:272,deployability,fail,failing,272,"> Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ... M2 machine: clang version is 15.0.0(clang-1500.0.40.1)& MacOS 14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:303,deployability,version,version,303,"> Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ... M2 machine: clang version is 15.0.0(clang-1500.0.40.1)& MacOS 14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:356,deployability,version,version,356,"> Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ... M2 machine: clang version is 15.0.0(clang-1500.0.40.1)& MacOS 14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:226,integrability,version,version,226,"> Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ... M2 machine: clang version is 15.0.0(clang-1500.0.40.1)& MacOS 14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:303,integrability,version,version,303,"> Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ... M2 machine: clang version is 15.0.0(clang-1500.0.40.1)& MacOS 14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:356,integrability,version,version,356,"> Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ... M2 machine: clang version is 15.0.0(clang-1500.0.40.1)& MacOS 14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:226,modifiability,version,version,226,"> Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ... M2 machine: clang version is 15.0.0(clang-1500.0.40.1)& MacOS 14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:303,modifiability,version,version,303,"> Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ... M2 machine: clang version is 15.0.0(clang-1500.0.40.1)& MacOS 14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:356,modifiability,version,version,356,"> Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ... M2 machine: clang version is 15.0.0(clang-1500.0.40.1)& MacOS 14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:272,reliability,fail,failing,272,"> Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ... M2 machine: clang version is 15.0.0(clang-1500.0.40.1)& MacOS 14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:209,usability,command,command,209,"> Some news: We have an M1 machine, `macphsft24`, running MacOS14 but using clang 12.0.5. I installed ROOT master on it and TBrowser is working ... I see the bug on machines running clang 15. Can you type the command `clang --version` on the machines on which TBrowser is failing for you ? to see which version of clang you are using ... M2 machine: clang version is 15.0.0(clang-1500.0.40.1)& MacOS 14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:248,reliability,doe,does,248,> clang 15 with MacOs 13.6 is working... (M1). > . > So it seems we need MacOS 14 AND clang 15 to get the problem. > . > Is it the case for the Intel machine of your friend? The intel machine is also clang 15.0.0 (clang-1500.0.40.1) & MacOS 14. It does look like macOS 14 and clang 15 are causing the problem!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:94,deployability,build,build,94,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:113,deployability,updat,update,113,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:166,deployability,updat,updated,166,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:205,deployability,version,versions,205,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:342,deployability,Version,Versions,342,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:374,deployability,version,version,374,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:397,deployability,version,version,397,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:454,deployability,version,version,454,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:477,deployability,version,version,477,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:541,deployability,version,version,541,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:564,deployability,version,version,564,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:628,deployability,Version,Versions,628,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:661,deployability,version,version,661,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:685,deployability,version,version,685,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:757,deployability,Version,Versions,757,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:798,deployability,version,version,798,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:823,deployability,version,version,823,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:893,deployability,Version,Versions,893,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:930,deployability,version,version,930,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:955,deployability,version,version,955,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1017,deployability,version,version,1017,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1040,deployability,version,version,1040,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1135,deployability,Version,Versions,1135,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1167,deployability,version,version,1167,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1190,deployability,version,version,1190,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1247,deployability,version,version,1247,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1270,deployability,version,version,1270,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1333,deployability,version,version,1333,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1356,deployability,version,version,1356,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1422,deployability,Version,Versions,1422,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1455,deployability,version,version,1455,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1479,deployability,version,version,1479,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1554,deployability,Version,Versions,1554,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1595,deployability,version,version,1595,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1620,deployability,version,version,1620,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1688,deployability,Version,Versions,1688,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1725,deployability,version,version,1725,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1750,deployability,version,version,1750,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1810,deployability,version,version,1810,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1833,deployability,version,version,1833,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:266,energy efficiency,Current,Current,266,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:389,energy efficiency,current,current,389,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:469,energy efficiency,current,current,469,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:556,energy efficiency,current,current,556,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:677,energy efficiency,current,current,677,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:732,energy efficiency,Core,CoreFoundation,732,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:768,energy efficiency,Core,CoreFoundation,768,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:815,energy efficiency,current,current,815,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:947,energy efficiency,current,current,947,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1032,energy efficiency,current,current,1032,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1182,energy efficiency,current,current,1182,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1262,energy efficiency,current,current,1262,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1348,energy efficiency,current,current,1348,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1471,energy efficiency,current,current,1471,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1529,energy efficiency,Core,CoreFoundation,1529,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1565,energy efficiency,Core,CoreFoundation,1565,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1612,energy efficiency,current,current,1612,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1742,energy efficiency,current,current,1742,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1825,energy efficiency,current,current,1825,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:205,integrability,version,versions,205,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:342,integrability,Version,Versions,342,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:374,integrability,version,version,374,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:397,integrability,version,version,397,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:454,integrability,version,version,454,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:477,integrability,version,version,477,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:541,integrability,version,version,541,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:564,integrability,version,version,564,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:628,integrability,Version,Versions,628,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:661,integrability,version,version,661,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:685,integrability,version,version,685,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:757,integrability,Version,Versions,757,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:798,integrability,version,version,798,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:823,integrability,version,version,823,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:893,integrability,Version,Versions,893,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:930,integrability,version,version,930,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:955,integrability,version,version,955,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1017,integrability,version,version,1017,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1040,integrability,version,version,1040,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1135,integrability,Version,Versions,1135,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1167,integrability,version,version,1167,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1190,integrability,version,version,1190,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1247,integrability,version,version,1247,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1270,integrability,version,version,1270,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1333,integrability,version,version,1333,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1356,integrability,version,version,1356,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1422,integrability,Version,Versions,1422,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1455,integrability,version,version,1455,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1479,integrability,version,version,1479,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1554,integrability,Version,Versions,1554,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1595,integrability,version,version,1595,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1620,integrability,version,version,1620,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1688,integrability,Version,Versions,1688,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1725,integrability,version,version,1725,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1750,integrability,version,version,1750,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1810,integrability,version,version,1810,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1833,integrability,version,version,1833,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:360,interoperability,compatib,compatibility,360,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:440,interoperability,compatib,compatibility,440,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:527,interoperability,compatib,compatibility,527,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:647,interoperability,compatib,compatibility,647,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:784,interoperability,compatib,compatibility,784,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:916,interoperability,compatib,compatibility,916,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1003,interoperability,compatib,compatibility,1003,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1153,interoperability,compatib,compatibility,1153,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1233,interoperability,compatib,compatibility,1233,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1319,interoperability,compatib,compatibility,1319,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1441,interoperability,compatib,compatibility,1441,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1581,interoperability,compatib,compatibility,1581,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1711,interoperability,compatib,compatibility,1711,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1796,interoperability,compatib,compatibility,1796,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:205,modifiability,version,versions,205,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:342,modifiability,Version,Versions,342,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:374,modifiability,version,version,374,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:397,modifiability,version,version,397,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:454,modifiability,version,version,454,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:477,modifiability,version,version,477,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:541,modifiability,version,version,541,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:564,modifiability,version,version,564,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:628,modifiability,Version,Versions,628,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:661,modifiability,version,version,661,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:685,modifiability,version,version,685,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:757,modifiability,Version,Versions,757,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:798,modifiability,version,version,798,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:823,modifiability,version,version,823,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:893,modifiability,Version,Versions,893,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:930,modifiability,version,version,930,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:955,modifiability,version,version,955,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1017,modifiability,version,version,1017,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1040,modifiability,version,version,1040,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1135,modifiability,Version,Versions,1135,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1167,modifiability,version,version,1167,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1190,modifiability,version,version,1190,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1247,modifiability,version,version,1247,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1270,modifiability,version,version,1270,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1333,modifiability,version,version,1333,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1356,modifiability,version,version,1356,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1422,modifiability,Version,Versions,1422,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1455,modifiability,version,version,1455,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1479,modifiability,version,version,1479,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1554,modifiability,Version,Versions,1554,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1595,modifiability,version,version,1595,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1620,modifiability,version,version,1620,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1688,modifiability,Version,Versions,1688,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1725,modifiability,version,version,1725,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1750,modifiability,version,version,1750,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1810,modifiability,version,version,1810,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:1833,modifiability,version,version,1833,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:113,safety,updat,update,113,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:166,safety,updat,updated,166,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:113,security,updat,update,113,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:166,security,updat,updated,166,"On my m2 with macos 14 I have the same issue with ROOT built with clang 15. However the older build, done before update to macos 14 with clang 14.0.3, still works on updated system as it links to previous versions of system libraries. Output of `otool -L bin/root`. Current (with the issue):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 24.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1600.151.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2483.0.0). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 2048.1.255). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 2048.1.255). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```. Old (works normally):. ```. 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa (compatibility version 1.0.0, current version 23.0.0). 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1500.65.0). 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.100.3). 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2299.50.120). 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1971.0.0). 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 1971.0.0). 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:54,deployability,updat,updating,54,I have the same issue on intel and Clang 11.0.0 after updating to MacOS14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:54,safety,updat,updating,54,I have the same issue on intel and Clang 11.0.0 after updating to MacOS14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:54,security,updat,updating,54,I have the same issue on intel and Clang 11.0.0 after updating to MacOS14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:140,availability,fault,faulty,140,"I do not see it with Intel Clang 12 and OSX 14. It is strange you see it with Clang 11. I am now updating my Intel machine to Clang 15 (the faulty one). . Anyway, this PR fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:97,deployability,updat,updating,97,"I do not see it with Intel Clang 12 and OSX 14. It is strange you see it with Clang 11. I am now updating my Intel machine to Clang 15 (the faulty one). . Anyway, this PR fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:140,energy efficiency,fault,faulty,140,"I do not see it with Intel Clang 12 and OSX 14. It is strange you see it with Clang 11. I am now updating my Intel machine to Clang 15 (the faulty one). . Anyway, this PR fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:140,performance,fault,faulty,140,"I do not see it with Intel Clang 12 and OSX 14. It is strange you see it with Clang 11. I am now updating my Intel machine to Clang 15 (the faulty one). . Anyway, this PR fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:140,reliability,fault,faulty,140,"I do not see it with Intel Clang 12 and OSX 14. It is strange you see it with Clang 11. I am now updating my Intel machine to Clang 15 (the faulty one). . Anyway, this PR fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:97,safety,updat,updating,97,"I do not see it with Intel Clang 12 and OSX 14. It is strange you see it with Clang 11. I am now updating my Intel machine to Clang 15 (the faulty one). . Anyway, this PR fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:140,safety,fault,faulty,140,"I do not see it with Intel Clang 12 and OSX 14. It is strange you see it with Clang 11. I am now updating my Intel machine to Clang 15 (the faulty one). . Anyway, this PR fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/issues/13834:97,security,updat,updating,97,"I do not see it with Intel Clang 12 and OSX 14. It is strange you see it with Clang 11. I am now updating my Intel machine to Clang 15 (the faulty one). . Anyway, this PR fixes the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13834
https://github.com/root-project/root/pull/13840:11,deployability,fail,failing,11,"I hope the failing checks are unrelated (at least, I don't understand the relationship). If they're related, I need some help. I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:234,energy efficiency,Core,Core,234,"I hope the failing checks are unrelated (at least, I don't understand the relationship). If they're related, I need some help. I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:203,modifiability,variab,variable,203,"I hope the failing checks are unrelated (at least, I don't understand the relationship). If they're related, I need some help. I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:11,reliability,fail,failing,11,"I hope the failing checks are unrelated (at least, I don't understand the relationship). If they're related, I need some help. I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:264,security,iso,isocpp,264,"I hope the failing checks are unrelated (at least, I don't understand the relationship). If they're related, I need some help. I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:59,testability,understand,understand,59,"I hope the failing checks are unrelated (at least, I don't understand the relationship). If they're related, I need some help. I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:121,usability,help,help,121,"I hope the failing checks are unrelated (at least, I don't understand the relationship). If they're related, I need some help. I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:239,usability,Guid,Guidelines,239,"I hope the failing checks are unrelated (at least, I don't understand the relationship). If they're related, I need some help. I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:107,energy efficiency,Core,Core,107,"> I wonder, whether all the new TList should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))? Yes, this is a fair point. Feel free to open another PR with that further simplification.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:76,modifiability,variab,variable,76,"> I wonder, whether all the new TList should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))? Yes, this is a fair point. Feel free to open another PR with that further simplification.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:137,security,iso,isocpp,137,"> I wonder, whether all the new TList should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))? Yes, this is a fair point. Feel free to open another PR with that further simplification.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:291,testability,simpl,simplification,291,"> I wonder, whether all the new TList should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))? Yes, this is a fair point. Feel free to open another PR with that further simplification.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:112,usability,Guid,Guidelines,112,"> I wonder, whether all the new TList should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))? Yes, this is a fair point. Feel free to open another PR with that further simplification.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:291,usability,simpl,simplification,291,"> I wonder, whether all the new TList should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))? Yes, this is a fair point. Feel free to open another PR with that further simplification.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:4,availability,failur,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:4,deployability,fail,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:4,performance,failur,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:4,reliability,fail,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:111,energy efficiency,Core,Core,111,"> > I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))? > . > Yes, this is a fair point. Feel free to open another PR with that further simplification. Hi @pcanal,. I started to look into this. And. ```cpp. #ifdef R__LESS_INCLUDES. class TList;. #else. #include ""TList.h"". #endif. ```. in `TTask.h` would need to be changed to a plain `#include ""TList.h""`. That sounds like it contradicts the `R__LESS_INCLUDES` movement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:80,modifiability,variab,variable,80,"> > I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))? > . > Yes, this is a fair point. Feel free to open another PR with that further simplification. Hi @pcanal,. I started to look into this. And. ```cpp. #ifdef R__LESS_INCLUDES. class TList;. #else. #include ""TList.h"". #endif. ```. in `TTask.h` would need to be changed to a plain `#include ""TList.h""`. That sounds like it contradicts the `R__LESS_INCLUDES` movement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:141,security,iso,isocpp,141,"> > I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))? > . > Yes, this is a fair point. Feel free to open another PR with that further simplification. Hi @pcanal,. I started to look into this. And. ```cpp. #ifdef R__LESS_INCLUDES. class TList;. #else. #include ""TList.h"". #endif. ```. in `TTask.h` would need to be changed to a plain `#include ""TList.h""`. That sounds like it contradicts the `R__LESS_INCLUDES` movement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:301,testability,simpl,simplification,301,"> > I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))? > . > Yes, this is a fair point. Feel free to open another PR with that further simplification. Hi @pcanal,. I started to look into this. And. ```cpp. #ifdef R__LESS_INCLUDES. class TList;. #else. #include ""TList.h"". #endif. ```. in `TTask.h` would need to be changed to a plain `#include ""TList.h""`. That sounds like it contradicts the `R__LESS_INCLUDES` movement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:116,usability,Guid,Guidelines,116,"> > I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))? > . > Yes, this is a fair point. Feel free to open another PR with that further simplification. Hi @pcanal,. I started to look into this. And. ```cpp. #ifdef R__LESS_INCLUDES. class TList;. #else. #include ""TList.h"". #endif. ```. in `TTask.h` would need to be changed to a plain `#include ""TList.h""`. That sounds like it contradicts the `R__LESS_INCLUDES` movement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13840:301,usability,simpl,simplification,301,"> > I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))? > . > Yes, this is a fair point. Feel free to open another PR with that further simplification. Hi @pcanal,. I started to look into this. And. ```cpp. #ifdef R__LESS_INCLUDES. class TList;. #else. #include ""TList.h"". #endif. ```. in `TTask.h` would need to be changed to a plain `#include ""TList.h""`. That sounds like it contradicts the `R__LESS_INCLUDES` movement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13840
https://github.com/root-project/root/pull/13841:232,energy efficiency,current,current,232,"> In theory that won't be necessary when we have LLVM16 and turn on the clang-repl-based parsing. LGTM. Yes I agree, that's the proper long-term solution. That's also why I'm not bothering to handle combinations of modifiers in the current approach...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13841
https://github.com/root-project/root/pull/13841:215,security,modif,modifiers,215,"> In theory that won't be necessary when we have LLVM16 and turn on the clang-repl-based parsing. LGTM. Yes I agree, that's the proper long-term solution. That's also why I'm not bothering to handle combinations of modifiers in the current approach...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13841
https://github.com/root-project/root/issues/13845:38,deployability,patch,patch,38,"I forgot to add that there is a small patch to one CMakeLists.txt file needed:. ```. sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt. ```. This adds an explicit `src/` before all cxx files in `hist/hist/CMakeLists.txt` where none are added. Without this, CMake fails to find the correct files. We are not using ROOT7, so this doens't affect any differences. Patch included in reproducer above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:275,deployability,fail,fails,275,"I forgot to add that there is a small patch to one CMakeLists.txt file needed:. ```. sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt. ```. This adds an explicit `src/` before all cxx files in `hist/hist/CMakeLists.txt` where none are added. Without this, CMake fails to find the correct files. We are not using ROOT7, so this doens't affect any differences. Patch included in reproducer above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:372,deployability,Patch,Patch,372,"I forgot to add that there is a small patch to one CMakeLists.txt file needed:. ```. sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt. ```. This adds an explicit `src/` before all cxx files in `hist/hist/CMakeLists.txt` where none are added. Without this, CMake fails to find the correct files. We are not using ROOT7, so this doens't affect any differences. Patch included in reproducer above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:275,reliability,fail,fails,275,"I forgot to add that there is a small patch to one CMakeLists.txt file needed:. ```. sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt. ```. This adds an explicit `src/` before all cxx files in `hist/hist/CMakeLists.txt` where none are added. Without this, CMake fails to find the correct files. We are not using ROOT7, so this doens't affect any differences. Patch included in reproducer above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:340,reliability,doe,doens,340,"I forgot to add that there is a small patch to one CMakeLists.txt file needed:. ```. sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt. ```. This adds an explicit `src/` before all cxx files in `hist/hist/CMakeLists.txt` where none are added. Without this, CMake fails to find the correct files. We are not using ROOT7, so this doens't affect any differences. Patch included in reproducer above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:38,safety,patch,patch,38,"I forgot to add that there is a small patch to one CMakeLists.txt file needed:. ```. sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt. ```. This adds an explicit `src/` before all cxx files in `hist/hist/CMakeLists.txt` where none are added. Without this, CMake fails to find the correct files. We are not using ROOT7, so this doens't affect any differences. Patch included in reproducer above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:372,safety,Patch,Patch,372,"I forgot to add that there is a small patch to one CMakeLists.txt file needed:. ```. sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt. ```. This adds an explicit `src/` before all cxx files in `hist/hist/CMakeLists.txt` where none are added. Without this, CMake fails to find the correct files. We are not using ROOT7, so this doens't affect any differences. Patch included in reproducer above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:38,security,patch,patch,38,"I forgot to add that there is a small patch to one CMakeLists.txt file needed:. ```. sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt. ```. This adds an explicit `src/` before all cxx files in `hist/hist/CMakeLists.txt` where none are added. Without this, CMake fails to find the correct files. We are not using ROOT7, so this doens't affect any differences. Patch included in reproducer above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:372,security,Patch,Patch,372,"I forgot to add that there is a small patch to one CMakeLists.txt file needed:. ```. sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt. ```. This adds an explicit `src/` before all cxx files in `hist/hist/CMakeLists.txt` where none are added. Without this, CMake fails to find the correct files. We are not using ROOT7, so this doens't affect any differences. Patch included in reproducer above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:173,deployability,updat,updated,173,"Thanks, Wouter. I will look at this likely in 10 days. If you have a moment before, could you configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` and post the updated backtrace? I find it very suspicious that you need to patch `hist/hist/CMakeLists.txt` when all our builds work... Does it help to build with the default `-Druntime_cxxmodules=On`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:235,deployability,patch,patch,235,"Thanks, Wouter. I will look at this likely in 10 days. If you have a moment before, could you configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` and post the updated backtrace? I find it very suspicious that you need to patch `hist/hist/CMakeLists.txt` when all our builds work... Does it help to build with the default `-Druntime_cxxmodules=On`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:281,deployability,build,builds,281,"Thanks, Wouter. I will look at this likely in 10 days. If you have a moment before, could you configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` and post the updated backtrace? I find it very suspicious that you need to patch `hist/hist/CMakeLists.txt` when all our builds work... Does it help to build with the default `-Druntime_cxxmodules=On`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:312,deployability,build,build,312,"Thanks, Wouter. I will look at this likely in 10 days. If you have a moment before, could you configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` and post the updated backtrace? I find it very suspicious that you need to patch `hist/hist/CMakeLists.txt` when all our builds work... Does it help to build with the default `-Druntime_cxxmodules=On`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:94,integrability,configur,configure,94,"Thanks, Wouter. I will look at this likely in 10 days. If you have a moment before, could you configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` and post the updated backtrace? I find it very suspicious that you need to patch `hist/hist/CMakeLists.txt` when all our builds work... Does it help to build with the default `-Druntime_cxxmodules=On`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:94,modifiability,configur,configure,94,"Thanks, Wouter. I will look at this likely in 10 days. If you have a moment before, could you configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` and post the updated backtrace? I find it very suspicious that you need to patch `hist/hist/CMakeLists.txt` when all our builds work... Does it help to build with the default `-Druntime_cxxmodules=On`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:296,reliability,Doe,Does,296,"Thanks, Wouter. I will look at this likely in 10 days. If you have a moment before, could you configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` and post the updated backtrace? I find it very suspicious that you need to patch `hist/hist/CMakeLists.txt` when all our builds work... Does it help to build with the default `-Druntime_cxxmodules=On`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:173,safety,updat,updated,173,"Thanks, Wouter. I will look at this likely in 10 days. If you have a moment before, could you configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` and post the updated backtrace? I find it very suspicious that you need to patch `hist/hist/CMakeLists.txt` when all our builds work... Does it help to build with the default `-Druntime_cxxmodules=On`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:235,safety,patch,patch,235,"Thanks, Wouter. I will look at this likely in 10 days. If you have a moment before, could you configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` and post the updated backtrace? I find it very suspicious that you need to patch `hist/hist/CMakeLists.txt` when all our builds work... Does it help to build with the default `-Druntime_cxxmodules=On`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:94,security,configur,configure,94,"Thanks, Wouter. I will look at this likely in 10 days. If you have a moment before, could you configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` and post the updated backtrace? I find it very suspicious that you need to patch `hist/hist/CMakeLists.txt` when all our builds work... Does it help to build with the default `-Druntime_cxxmodules=On`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:173,security,updat,updated,173,"Thanks, Wouter. I will look at this likely in 10 days. If you have a moment before, could you configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` and post the updated backtrace? I find it very suspicious that you need to patch `hist/hist/CMakeLists.txt` when all our builds work... Does it help to build with the default `-Druntime_cxxmodules=On`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:235,security,patch,patch,235,"Thanks, Wouter. I will look at this likely in 10 days. If you have a moment before, could you configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` and post the updated backtrace? I find it very suspicious that you need to patch `hist/hist/CMakeLists.txt` when all our builds work... Does it help to build with the default `-Druntime_cxxmodules=On`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:304,usability,help,help,304,"Thanks, Wouter. I will look at this likely in 10 days. If you have a moment before, could you configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` and post the updated backtrace? I find it very suspicious that you need to patch `hist/hist/CMakeLists.txt` when all our builds work... Does it help to build with the default `-Druntime_cxxmodules=On`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:29,deployability,patch,patching,29,"Thanks for the response. The patching of the CMakeLists.txt is unrelated and also needed before this specific commit. It's essentially due to cmake often but not always failing to return any files on certain globs [here](https://github.com/root-project/root/blob/7fa6bc530b386a185bb91b1aadf1a7ab22eab7b7/cmake/modules/RootMacros.cmake#L98) when the file itself doesn't exist yet, but again only in qemu/docker. It's suspicious, not very reproducible, hard to debug, but pretty sure it is not an issue with ROOT. I'll give the debug build a try today. I should have done that before reporting. Attaching debuggers inside a qemu emulated docker container is a bit limited unless one can run docker in privileged mode with cap ptrace added. Our usual build system doesn't have that capability so I'm used to this issue not resulting in any backtrace, but on my laptop I can enable that (as I did for this issue). I'll also try with/without runtime_cxxmodules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:169,deployability,fail,failing,169,"Thanks for the response. The patching of the CMakeLists.txt is unrelated and also needed before this specific commit. It's essentially due to cmake often but not always failing to return any files on certain globs [here](https://github.com/root-project/root/blob/7fa6bc530b386a185bb91b1aadf1a7ab22eab7b7/cmake/modules/RootMacros.cmake#L98) when the file itself doesn't exist yet, but again only in qemu/docker. It's suspicious, not very reproducible, hard to debug, but pretty sure it is not an issue with ROOT. I'll give the debug build a try today. I should have done that before reporting. Attaching debuggers inside a qemu emulated docker container is a bit limited unless one can run docker in privileged mode with cap ptrace added. Our usual build system doesn't have that capability so I'm used to this issue not resulting in any backtrace, but on my laptop I can enable that (as I did for this issue). I'll also try with/without runtime_cxxmodules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:310,deployability,modul,modules,310,"Thanks for the response. The patching of the CMakeLists.txt is unrelated and also needed before this specific commit. It's essentially due to cmake often but not always failing to return any files on certain globs [here](https://github.com/root-project/root/blob/7fa6bc530b386a185bb91b1aadf1a7ab22eab7b7/cmake/modules/RootMacros.cmake#L98) when the file itself doesn't exist yet, but again only in qemu/docker. It's suspicious, not very reproducible, hard to debug, but pretty sure it is not an issue with ROOT. I'll give the debug build a try today. I should have done that before reporting. Attaching debuggers inside a qemu emulated docker container is a bit limited unless one can run docker in privileged mode with cap ptrace added. Our usual build system doesn't have that capability so I'm used to this issue not resulting in any backtrace, but on my laptop I can enable that (as I did for this issue). I'll also try with/without runtime_cxxmodules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:532,deployability,build,build,532,"Thanks for the response. The patching of the CMakeLists.txt is unrelated and also needed before this specific commit. It's essentially due to cmake often but not always failing to return any files on certain globs [here](https://github.com/root-project/root/blob/7fa6bc530b386a185bb91b1aadf1a7ab22eab7b7/cmake/modules/RootMacros.cmake#L98) when the file itself doesn't exist yet, but again only in qemu/docker. It's suspicious, not very reproducible, hard to debug, but pretty sure it is not an issue with ROOT. I'll give the debug build a try today. I should have done that before reporting. Attaching debuggers inside a qemu emulated docker container is a bit limited unless one can run docker in privileged mode with cap ptrace added. Our usual build system doesn't have that capability so I'm used to this issue not resulting in any backtrace, but on my laptop I can enable that (as I did for this issue). I'll also try with/without runtime_cxxmodules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:643,deployability,contain,container,643,"Thanks for the response. The patching of the CMakeLists.txt is unrelated and also needed before this specific commit. It's essentially due to cmake often but not always failing to return any files on certain globs [here](https://github.com/root-project/root/blob/7fa6bc530b386a185bb91b1aadf1a7ab22eab7b7/cmake/modules/RootMacros.cmake#L98) when the file itself doesn't exist yet, but again only in qemu/docker. It's suspicious, not very reproducible, hard to debug, but pretty sure it is not an issue with ROOT. I'll give the debug build a try today. I should have done that before reporting. Attaching debuggers inside a qemu emulated docker container is a bit limited unless one can run docker in privileged mode with cap ptrace added. Our usual build system doesn't have that capability so I'm used to this issue not resulting in any backtrace, but on my laptop I can enable that (as I did for this issue). I'll also try with/without runtime_cxxmodules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:748,deployability,build,build,748,"Thanks for the response. The patching of the CMakeLists.txt is unrelated and also needed before this specific commit. It's essentially due to cmake often but not always failing to return any files on certain globs [here](https://github.com/root-project/root/blob/7fa6bc530b386a185bb91b1aadf1a7ab22eab7b7/cmake/modules/RootMacros.cmake#L98) when the file itself doesn't exist yet, but again only in qemu/docker. It's suspicious, not very reproducible, hard to debug, but pretty sure it is not an issue with ROOT. I'll give the debug build a try today. I should have done that before reporting. Attaching debuggers inside a qemu emulated docker container is a bit limited unless one can run docker in privileged mode with cap ptrace added. Our usual build system doesn't have that capability so I'm used to this issue not resulting in any backtrace, but on my laptop I can enable that (as I did for this issue). I'll also try with/without runtime_cxxmodules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:101,interoperability,specif,specific,101,"Thanks for the response. The patching of the CMakeLists.txt is unrelated and also needed before this specific commit. It's essentially due to cmake often but not always failing to return any files on certain globs [here](https://github.com/root-project/root/blob/7fa6bc530b386a185bb91b1aadf1a7ab22eab7b7/cmake/modules/RootMacros.cmake#L98) when the file itself doesn't exist yet, but again only in qemu/docker. It's suspicious, not very reproducible, hard to debug, but pretty sure it is not an issue with ROOT. I'll give the debug build a try today. I should have done that before reporting. Attaching debuggers inside a qemu emulated docker container is a bit limited unless one can run docker in privileged mode with cap ptrace added. Our usual build system doesn't have that capability so I'm used to this issue not resulting in any backtrace, but on my laptop I can enable that (as I did for this issue). I'll also try with/without runtime_cxxmodules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:310,modifiability,modul,modules,310,"Thanks for the response. The patching of the CMakeLists.txt is unrelated and also needed before this specific commit. It's essentially due to cmake often but not always failing to return any files on certain globs [here](https://github.com/root-project/root/blob/7fa6bc530b386a185bb91b1aadf1a7ab22eab7b7/cmake/modules/RootMacros.cmake#L98) when the file itself doesn't exist yet, but again only in qemu/docker. It's suspicious, not very reproducible, hard to debug, but pretty sure it is not an issue with ROOT. I'll give the debug build a try today. I should have done that before reporting. Attaching debuggers inside a qemu emulated docker container is a bit limited unless one can run docker in privileged mode with cap ptrace added. Our usual build system doesn't have that capability so I'm used to this issue not resulting in any backtrace, but on my laptop I can enable that (as I did for this issue). I'll also try with/without runtime_cxxmodules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:169,reliability,fail,failing,169,"Thanks for the response. The patching of the CMakeLists.txt is unrelated and also needed before this specific commit. It's essentially due to cmake often but not always failing to return any files on certain globs [here](https://github.com/root-project/root/blob/7fa6bc530b386a185bb91b1aadf1a7ab22eab7b7/cmake/modules/RootMacros.cmake#L98) when the file itself doesn't exist yet, but again only in qemu/docker. It's suspicious, not very reproducible, hard to debug, but pretty sure it is not an issue with ROOT. I'll give the debug build a try today. I should have done that before reporting. Attaching debuggers inside a qemu emulated docker container is a bit limited unless one can run docker in privileged mode with cap ptrace added. Our usual build system doesn't have that capability so I'm used to this issue not resulting in any backtrace, but on my laptop I can enable that (as I did for this issue). I'll also try with/without runtime_cxxmodules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:361,reliability,doe,doesn,361,"Thanks for the response. The patching of the CMakeLists.txt is unrelated and also needed before this specific commit. It's essentially due to cmake often but not always failing to return any files on certain globs [here](https://github.com/root-project/root/blob/7fa6bc530b386a185bb91b1aadf1a7ab22eab7b7/cmake/modules/RootMacros.cmake#L98) when the file itself doesn't exist yet, but again only in qemu/docker. It's suspicious, not very reproducible, hard to debug, but pretty sure it is not an issue with ROOT. I'll give the debug build a try today. I should have done that before reporting. Attaching debuggers inside a qemu emulated docker container is a bit limited unless one can run docker in privileged mode with cap ptrace added. Our usual build system doesn't have that capability so I'm used to this issue not resulting in any backtrace, but on my laptop I can enable that (as I did for this issue). I'll also try with/without runtime_cxxmodules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:761,reliability,doe,doesn,761,"Thanks for the response. The patching of the CMakeLists.txt is unrelated and also needed before this specific commit. It's essentially due to cmake often but not always failing to return any files on certain globs [here](https://github.com/root-project/root/blob/7fa6bc530b386a185bb91b1aadf1a7ab22eab7b7/cmake/modules/RootMacros.cmake#L98) when the file itself doesn't exist yet, but again only in qemu/docker. It's suspicious, not very reproducible, hard to debug, but pretty sure it is not an issue with ROOT. I'll give the debug build a try today. I should have done that before reporting. Attaching debuggers inside a qemu emulated docker container is a bit limited unless one can run docker in privileged mode with cap ptrace added. Our usual build system doesn't have that capability so I'm used to this issue not resulting in any backtrace, but on my laptop I can enable that (as I did for this issue). I'll also try with/without runtime_cxxmodules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:29,safety,patch,patching,29,"Thanks for the response. The patching of the CMakeLists.txt is unrelated and also needed before this specific commit. It's essentially due to cmake often but not always failing to return any files on certain globs [here](https://github.com/root-project/root/blob/7fa6bc530b386a185bb91b1aadf1a7ab22eab7b7/cmake/modules/RootMacros.cmake#L98) when the file itself doesn't exist yet, but again only in qemu/docker. It's suspicious, not very reproducible, hard to debug, but pretty sure it is not an issue with ROOT. I'll give the debug build a try today. I should have done that before reporting. Attaching debuggers inside a qemu emulated docker container is a bit limited unless one can run docker in privileged mode with cap ptrace added. Our usual build system doesn't have that capability so I'm used to this issue not resulting in any backtrace, but on my laptop I can enable that (as I did for this issue). I'll also try with/without runtime_cxxmodules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:310,safety,modul,modules,310,"Thanks for the response. The patching of the CMakeLists.txt is unrelated and also needed before this specific commit. It's essentially due to cmake often but not always failing to return any files on certain globs [here](https://github.com/root-project/root/blob/7fa6bc530b386a185bb91b1aadf1a7ab22eab7b7/cmake/modules/RootMacros.cmake#L98) when the file itself doesn't exist yet, but again only in qemu/docker. It's suspicious, not very reproducible, hard to debug, but pretty sure it is not an issue with ROOT. I'll give the debug build a try today. I should have done that before reporting. Attaching debuggers inside a qemu emulated docker container is a bit limited unless one can run docker in privileged mode with cap ptrace added. Our usual build system doesn't have that capability so I'm used to this issue not resulting in any backtrace, but on my laptop I can enable that (as I did for this issue). I'll also try with/without runtime_cxxmodules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:29,security,patch,patching,29,"Thanks for the response. The patching of the CMakeLists.txt is unrelated and also needed before this specific commit. It's essentially due to cmake often but not always failing to return any files on certain globs [here](https://github.com/root-project/root/blob/7fa6bc530b386a185bb91b1aadf1a7ab22eab7b7/cmake/modules/RootMacros.cmake#L98) when the file itself doesn't exist yet, but again only in qemu/docker. It's suspicious, not very reproducible, hard to debug, but pretty sure it is not an issue with ROOT. I'll give the debug build a try today. I should have done that before reporting. Attaching debuggers inside a qemu emulated docker container is a bit limited unless one can run docker in privileged mode with cap ptrace added. Our usual build system doesn't have that capability so I'm used to this issue not resulting in any backtrace, but on my laptop I can enable that (as I did for this issue). I'll also try with/without runtime_cxxmodules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:699,security,privil,privileged,699,"Thanks for the response. The patching of the CMakeLists.txt is unrelated and also needed before this specific commit. It's essentially due to cmake often but not always failing to return any files on certain globs [here](https://github.com/root-project/root/blob/7fa6bc530b386a185bb91b1aadf1a7ab22eab7b7/cmake/modules/RootMacros.cmake#L98) when the file itself doesn't exist yet, but again only in qemu/docker. It's suspicious, not very reproducible, hard to debug, but pretty sure it is not an issue with ROOT. I'll give the debug build a try today. I should have done that before reporting. Attaching debuggers inside a qemu emulated docker container is a bit limited unless one can run docker in privileged mode with cap ptrace added. Our usual build system doesn't have that capability so I'm used to this issue not resulting in any backtrace, but on my laptop I can enable that (as I did for this issue). I'll also try with/without runtime_cxxmodules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:627,testability,emul,emulated,627,"Thanks for the response. The patching of the CMakeLists.txt is unrelated and also needed before this specific commit. It's essentially due to cmake often but not always failing to return any files on certain globs [here](https://github.com/root-project/root/blob/7fa6bc530b386a185bb91b1aadf1a7ab22eab7b7/cmake/modules/RootMacros.cmake#L98) when the file itself doesn't exist yet, but again only in qemu/docker. It's suspicious, not very reproducible, hard to debug, but pretty sure it is not an issue with ROOT. I'll give the debug build a try today. I should have done that before reporting. Attaching debuggers inside a qemu emulated docker container is a bit limited unless one can run docker in privileged mode with cap ptrace added. Our usual build system doesn't have that capability so I'm used to this issue not resulting in any backtrace, but on my laptop I can enable that (as I did for this issue). I'll also try with/without runtime_cxxmodules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:13,deployability,instal,install,13,You can just install gdb in your VM and we should get a useful backtrace. Thanks for being so supportive!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:94,usability,support,supportive,94,You can just install gdb in your VM and we should get a useful backtrace. Thanks for being so supportive!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:118,availability,down,down,118,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1443,availability,Error,Error,1443,"before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1596,availability,Error,Error,1596," lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1704,availability,Error,Error,1704,"dules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5738,availability,down,downloading,5738,"cessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1. Continuing. Program received signal SIGINT, Interrupt. 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::getNumBuckets (this=0x7f6917ca5868). at /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h:1168. warning: 1168 /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h: No such file or directory. (gdb) bt. #0 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:9516,availability,operat,operator,9516,"::Decl*, unsigned int> >, clang::Decl*, unsigned int, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::try_emplace<unsigned int const&> (this=0x7f6917ca5868, Key=@0x7f6918c65f70: 0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h:258. #5 0x00007f690825d3fc in llvm::DenseMapBase<llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >, clang::Decl*, unsigned int, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::insert (this=0x7f6917ca5868, KV=...) at /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h:208. #6 0x00007f69082509ac in llvm::MapVector<clang::Decl*, unsigned long, llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >, llvm::SmallVector<std::pair<clang::Decl*, unsigned long>, 4u> >::operator[] (this=0x7f6917ca5868, Key=@0x7f6918c65fd8: 0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/include/llvm/ADT/MapVector.h:100. #7 0x00007f69082263d8 in clang::ASTDeclReader::ReadFunctionDefinition (this=0x7f6918c66130, FD=0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:529. #8 0x00007f6908226624 in clang::ASTDeclReader::Visit (this=0x7f6918c66130, D=0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:564. #9 0x00007f6908245f10 in clang::ASTReader::ReadDeclRecord (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:4120. #10 0x00007f6908176fa0 in clang::ASTReader::GetDecl (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7531. #11 0x00007f690819cda8 in clang::ASTReader::GetLocalDecl (this=0x7f6917ca49b0, F=..., LocalID=366988) at /mnt/root/interpreter/llvm/src/tool",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:10600,availability,operat,operator,10600,"preter/llvm/src/include/llvm/ADT/MapVector.h:100. #7 0x00007f69082263d8 in clang::ASTDeclReader::ReadFunctionDefinition (this=0x7f6918c66130, FD=0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:529. #8 0x00007f6908226624 in clang::ASTDeclReader::Visit (this=0x7f6918c66130, D=0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:564. #9 0x00007f6908245f10 in clang::ASTReader::ReadDeclRecord (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:4120. #10 0x00007f6908176fa0 in clang::ASTReader::GetDecl (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7531. #11 0x00007f690819cda8 in clang::ASTReader::GetLocalDecl (this=0x7f6917ca49b0, F=..., LocalID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/Serialization/ASTReader.h:1856. #12 0x00007f690817749c in operator() (__closure=0x7f6918c66568, M=0x7f69176b1f90, LexicalDecls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7611. #13 0x00007f69081776ac in clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca49b0, DC=0x7f68fdb16850, . IsKindWeWant=..., Decls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7625. #14 0x00007f690730267c in cling::ExternalASTSourceWrapper::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca84a0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:170. #15 0x00007f69083873b4 in clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:68,deployability,build,build,68,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:137,deployability,build,building,137,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:361,deployability,fail,fail,361,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:552,deployability,build,build-,552,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:604,deployability,modul,modules,604,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:630,deployability,build,build-,630,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:693,deployability,modul,modules,693,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:705,deployability,modul,modules,705,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:737,deployability,build,build-,737,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:798,deployability,build,build-,798,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:872,deployability,build,build-,872,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1314,deployability,fail,failed,1314,"ine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/Runti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1338,deployability,fail,failed,1338,"yldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1410,deployability,build,build,1410,"out runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===-----------------------------------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1430,deployability,modul,modules,1430,"s, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===--------------------------------------------------------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1493,deployability,build,build-,1493,"e:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldEL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1644,deployability,build,build-,1644,"modules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1749,deployability,build,build-,1749,"xxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1962,deployability,fail,failing,1962,"5849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", Fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3167,deployability,fail,failed,3167,"e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3334,deployability,fail,fails,3334,"F.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3513,deployability,build,build-,3513,"imeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3681,deployability,version,version,3681,"+ Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu cal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3969,deployability,configurat,configuration,3969,"). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3988,deployability,configurat,configuration,3988,""" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4142,deployability,resourc,resources,4142," && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4332,deployability,build,build-,4332,"ails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4405,deployability,build,build-,4405,"rity-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4613,deployability,instal,install,4613,"(C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4855,deployability,build,build-,4855,"ype ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5063,deployability,contain,container,5063,".gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5129,deployability,build,build-,5129,"mentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5237,deployability,build,build-,5237,"e ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1. Continuing. Program received signal SIGINT, Interrupt. 0x000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5349,deployability,continu,continue,5349,"les-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1. Continuing. Program received signal SIGINT, Interrupt. 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::deta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5389,deployability,build,build-,5389,": /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1. Continuing. Program received signal SIGINT, Interrupt. 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:6180,deployability,Continu,Continuing,6180,"tecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1. Continuing. Program received signal SIGINT, Interrupt. 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::getNumBuckets (this=0x7f6917ca5868). at /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h:1168. warning: 1168 /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h: No such file or directory. (gdb) bt. #0 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::getNumBuckets (this=0x7f6917ca5868). at /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h:1168. #1 0x00007f69081ee0e0 in llvm::DenseMapBase<llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >, clang::Decl*, unsigned int, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, uns",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:13297,deployability,build,build-,13297,"er/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:13896,deployability,build,build-,13896,"::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:14797,deployability,build,build-,14797,"itionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:16248,deployability,continu,continue,16248,"ing/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static without `gdb` hook doesn't actually segfault, only when running directly:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bf010 FinalAddress: 0x55849bf010 Value: 0x7fdbf6065000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/Runt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:16911,deployability,build,build-,16911,":1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static without `gdb` hook doesn't actually segfault, only when running directly:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bf010 FinalAddress: 0x55849bf010 Value: 0x7fdbf6065000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:17009,deployability,build,build-,17009,":1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static without `gdb` hook doesn't actually segfault, only when running directly:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bf010 FinalAddress: 0x55849bf010 Value: 0x7fdbf6065000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:17451,deployability,fail,failed,17451,":1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static without `gdb` hook doesn't actually segfault, only when running directly:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bf010 FinalAddress: 0x55849bf010 Value: 0x7fdbf6065000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:17475,deployability,fail,failed,17475,":1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static without `gdb` hook doesn't actually segfault, only when running directly:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bf010 FinalAddress: 0x55849bf010 Value: 0x7fdbf6065000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1355,energy efficiency,core,core,1355," to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4142,energy efficiency,resourc,resources,4142," && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4970,energy efficiency,CPU,CPU,4970,"figuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5326,energy efficiency,load,load,5326,"oot-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1. Continuing. Program received signal SIGINT, Interrupt. 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:12067,energy efficiency,Load,LoadLexicalDeclsFromExternalStorage,12067,"pp:7625. #14 0x00007f690730267c in cling::ExternalASTSourceWrapper::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca84a0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:170. #15 0x00007f69083873b4 in clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6918df92d0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:121. #16 0x00007f690b4f0ed4 in clang::ExternalASTSource::FindExternalLexicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185. #17 0x00007f690b4ee6e0 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:12559,energy efficiency,load,loadGlobalModuleIndex,12559,"f<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6918df92d0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:121. #16 0x00007f690b4f0ed4 in clang::ExternalASTSource::FindExternalLexicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185. #17 0x00007f690b4ee6e0 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:12857,energy efficiency,load,loadGlobalModuleIndex,12857,"xicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185. #17 0x00007f690b4ee6e0 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:13152,energy efficiency,load,loadGlobalModuleIndex,13152,"s/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:13448,energy efficiency,load,loadGlobalModuleIndex,13448,"tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:13751,energy efficiency,load,loadGlobalModuleIndex,13751,"ude/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:14047,energy efficiency,load,loadGlobalModuleIndex,14047,"de/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:14345,energy efficiency,load,loadGlobalModuleIndex,14345,"g/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:14652,energy efficiency,load,loadGlobalModuleIndex,14652,"ng/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:15019,energy efficiency,core,core,15019,"lang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:15081,energy efficiency,load,loadGlobalModuleIndex,15081,"efinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:15129,energy efficiency,core,core,15129,"lper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:15241,energy efficiency,core,core,15241,"ng/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:15480,energy efficiency,core,core,15480,"6d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:15627,energy efficiency,core,core,15627,"g::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ``",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:15761,energy efficiency,alloc,alloc,15761," D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static wit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:15782,energy efficiency,core,core,15782,"at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static without `gdb` hook does",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:15879,energy efficiency,core,core,15879,"odes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static without `gdb` hook doesn't actually segfault, only when running directly:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:15964,energy efficiency,core,core,15964,"6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static without `gdb` hook doesn't actually segfault, only when running directly:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:16173,energy efficiency,core,core,16173,"7f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static without `gdb` hook doesn't actually segfault, only when running directly:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bf010 FinalAddress: 0x55849bf010 Value: 0x7fdbf6065000 Type: 0x113 A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:16494,energy efficiency,core,core,16494,"rc/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static without `gdb` hook doesn't actually segfault, only when running directly:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bf010 FinalAddress: 0x55849bf010 Value: 0x7fdbf6065000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:17492,energy efficiency,core,core,17492,":1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static without `gdb` hook doesn't actually segfault, only when running directly:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bf010 FinalAddress: 0x55849bf010 Value: 0x7fdbf6065000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3681,integrability,version,version,3681,"+ Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu cal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3923,integrability,configur,configured,3923,"FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3969,integrability,configur,configuration,3969,"). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3988,integrability,configur,configuration,3988,""" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:14443,integrability,Translat,TranslationUnitDecl,14443,"lobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:2867,interoperability,format,format,2867,"solveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:2949,interoperability,format,format,2949,"g for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3000,interoperability,format,format,3000,"nterpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3043,interoperability,format,format,3043,"timeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, ple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3085,interoperability,format,format,3085,"llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gd",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5180,interoperability,architectur,architecture,5180,"ftware/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1. Contin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5444,interoperability,architectur,architecture,5444,"q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1. Continuing. Program received signal SIGINT, Interrupt. 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::getNumBuckets (this=0x7f6917ca5868). at /mnt/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:14443,interoperability,Translat,TranslationUnitDecl,14443,"lobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:604,modifiability,modul,modules,604,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:693,modifiability,modul,modules,693,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:705,modifiability,modul,modules,705,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1430,modifiability,modul,modules,1430,"s, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===--------------------------------------------------------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3681,modifiability,version,version,3681,"+ Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu cal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3832,modifiability,exten,extent,3832,"cation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-stati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3923,modifiability,configur,configured,3923,"FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3969,modifiability,configur,configuration,3969,"). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3988,modifiability,configur,configuration,3988,""" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:713,performance,time,timestamp,713,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1443,performance,Error,Error,1443,"before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1596,performance,Error,Error,1596," lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1704,performance,Error,Error,1704,"dules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4142,performance,resourc,resources,4142," && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4970,performance,CPU,CPU,4970,"figuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5326,performance,load,load,5326,"oot-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1. Continuing. Program received signal SIGINT, Interrupt. 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:11472,performance,Multiplex,MultiplexExternalSemaSource,11472,"mnt/root/interpreter/llvm/src/tools/clang/include/clang/Serialization/ASTReader.h:1856. #12 0x00007f690817749c in operator() (__closure=0x7f6918c66568, M=0x7f69176b1f90, LexicalDecls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7611. #13 0x00007f69081776ac in clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca49b0, DC=0x7f68fdb16850, . IsKindWeWant=..., Decls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7625. #14 0x00007f690730267c in cling::ExternalASTSourceWrapper::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca84a0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:170. #15 0x00007f69083873b4 in clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6918df92d0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:121. #16 0x00007f690b4f0ed4 in clang::ExternalASTSource::FindExternalLexicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185. #17 0x00007f690b4ee6e0 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:11765,performance,Multiplex,MultiplexExternalSemaSource,11765,"c in clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca49b0, DC=0x7f68fdb16850, . IsKindWeWant=..., Decls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7625. #14 0x00007f690730267c in cling::ExternalASTSourceWrapper::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca84a0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:170. #15 0x00007f69083873b4 in clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6918df92d0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:121. #16 0x00007f690b4f0ed4 in clang::ExternalASTSource::FindExternalLexicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185. #17 0x00007f690b4ee6e0 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/Rec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:12067,performance,Load,LoadLexicalDeclsFromExternalStorage,12067,"pp:7625. #14 0x00007f690730267c in cling::ExternalASTSourceWrapper::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca84a0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:170. #15 0x00007f69083873b4 in clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6918df92d0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:121. #16 0x00007f690b4f0ed4 in clang::ExternalASTSource::FindExternalLexicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185. #17 0x00007f690b4ee6e0 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:12559,performance,load,loadGlobalModuleIndex,12559,"f<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6918df92d0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:121. #16 0x00007f690b4f0ed4 in clang::ExternalASTSource::FindExternalLexicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185. #17 0x00007f690b4ee6e0 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:12857,performance,load,loadGlobalModuleIndex,12857,"xicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185. #17 0x00007f690b4ee6e0 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:13152,performance,load,loadGlobalModuleIndex,13152,"s/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:13448,performance,load,loadGlobalModuleIndex,13448,"tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:13751,performance,load,loadGlobalModuleIndex,13751,"ude/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:14047,performance,load,loadGlobalModuleIndex,14047,"de/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:14345,performance,load,loadGlobalModuleIndex,14345,"g/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:14652,performance,load,loadGlobalModuleIndex,14652,"ng/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:15081,performance,load,loadGlobalModuleIndex,15081,"efinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:361,reliability,fail,fail,361,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1314,reliability,fail,failed,1314,"ine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/Runti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1338,reliability,fail,failed,1338,"yldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1893,reliability,diagno,diagnostic,1893,"N/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1962,reliability,fail,failing,1962,"5849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", Fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3167,reliability,fail,failed,3167,"e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3334,reliability,fail,fails,3334,"F.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4921,reliability,doe,doesn,4921,"onfigured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting perm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5541,reliability,doe,does,5541,"d. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1. Continuing. Program received signal SIGINT, Interrupt. 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::getNumBuckets (this=0x7f6917ca5868). at /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h:1168. warning: 1168 /mnt/root/interpreter/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:16780,reliability,doe,doesn,16780,":1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static without `gdb` hook doesn't actually segfault, only when running directly:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bf010 FinalAddress: 0x55849bf010 Value: 0x7fdbf6065000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:17451,reliability,fail,failed,17451,":1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static without `gdb` hook doesn't actually segfault, only when running directly:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bf010 FinalAddress: 0x55849bf010 Value: 0x7fdbf6065000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:17475,reliability,fail,failed,17475,":1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static without `gdb` hook doesn't actually segfault, only when running directly:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bf010 FinalAddress: 0x55849bf010 Value: 0x7fdbf6065000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:100,safety,test,test,100,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:604,safety,modul,modules,604,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:693,safety,modul,modules,693,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:705,safety,modul,modules,705,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1430,safety,modul,modules,1430,"s, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===--------------------------------------------------------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1443,safety,Error,Error,1443,"before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1596,safety,Error,Error,1596," lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1704,safety,Error,Error,1704,"dules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4142,safety,resourc,resources,4142," && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5331,safety,safe,safe-path,5331,"d-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1. Continuing. Program received signal SIGINT, Interrupt. 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:480,security,ident,identified,480,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3404,security,secur,security-opt,3404,"--------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3923,security,configur,configured,3923,"FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3969,security,configur,configuration,3969,"). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3988,security,configur,configuration,3988,""" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4605,security,apt,apt-get,4605,"pyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from loca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5587,security,access,access,5587," ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1. Continuing. Program received signal SIGINT, Interrupt. 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::getNumBuckets (this=0x7f6917ca5868). at /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h:1168. warning: 1168 /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h: No such fi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5846,security,session,session,5846,"root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1. Continuing. Program received signal SIGINT, Interrupt. 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::getNumBuckets (this=0x7f6917ca5868). at /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h:1168. warning: 1168 /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h: No such file or directory. (gdb) bt. #0 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::getNumBuckets (this=0x7f6917ca5868). at /mnt/root/interpreter/ll",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:6209,security,sign,signal,6209,"olib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1. Continuing. Program received signal SIGINT, Interrupt. 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::getNumBuckets (this=0x7f6917ca5868). at /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h:1168. warning: 1168 /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h: No such file or directory. (gdb) bt. #0 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::getNumBuckets (this=0x7f6917ca5868). at /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h:1168. #1 0x00007f69081ee0e0 in llvm::DenseMapBase<llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >, clang::Decl*, unsigned int, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::getNumBuckets",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:100,testability,test,test,100,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:189,testability,assert,assert,189,"Apologies for the delay. Turning on LLVM debug really increases the build size, so I had to turn my test setup upside down. In any case, building with LLVM debug in particular triggers an [assert](https://github.com/root-project/root/blob/a88664672571c352f77b9d267e58600cbf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1266,testability,Assert,Assertion,1266,"bf9a3b78/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp#L479) to fail before the segfault happens, both with and without runtime_cxxmodules, and both before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1893,testability,diagno,diagnostic,1893,"N/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1970,testability,assert,assert,1970,"10 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:3123,testability,assert,assert,3123,"ld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL) - (FinalAddress & ~0xfffULL);. . // Check that -2^32 <= X < 2^32. + if (! isInt<33>(Result)) {. + outs() << ""resolveAArch64Relocation, LocalAddress: 0x"". + << format(""%llx"", Section.getAddressWithOffset(Offset)). + << "" FinalAddress: 0x"" << format(""%llx"", FinalAddress). + << "" Value: 0x"" << format(""%llx"", Value) << "" Type: 0x"". + << format(""%x"", Type) << "" Addend: 0x"". + << format(""%llx"", Addend) << ""\n"";. + }. assert(isInt<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and othe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4142,testability,resourc,resources,4142," && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4475,testability,trace,trace,4475,"IST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4657,testability,hook,hook,4657,"cense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:16775,testability,hook,hook,16775,":1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static without `gdb` hook doesn't actually segfault, only when running directly:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bf010 FinalAddress: 0x55849bf010 Value: 0x7fdbf6065000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:17403,testability,Assert,Assertion,17403,":1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Internal::GetROOT2 () at /mnt/root/core/base/src/TROOT.cxx:383. #35 0x00007f6919762940 in ROOT::GetROOT () at /mnt/root/core/base/src/TROOT.cxx:465. #36 0x00007f69197762c4 in TApplication::TApplication (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, numOptions=0) at /mnt/root/core/base/src/TApplication.cxx:153. --Type <RET> for more, q to quit, c to continue without paging--c. #37 0x00007f6925d6e398 in TRint::TRint (this=0x7f6918cf8e70, appClassName=0x7f6918c6b508 ""Rint"", argc=0x7f6918c6956c, argv=0x7f6918c696f8, options=0x0, numOptions=0, noLogo=false, exitOnUnknownArgs=true). at /mnt/root/core/rint/src/TRint.cxx:174. #38 0x00007f6918c6b2c0 in main (argc=4, argv=0x7f6918c696f8) at /mnt/root/main/src/rmain.cxx:81. (gdb). ```. Maybe I should have let it run longer? After all it's jitting while jitting. - But even just running through qemu-aarch64-static without `gdb` hook doesn't actually segfault, only when running directly:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bf010 FinalAddress: 0x55849bf010 Value: 0x7fdbf6065000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1443,usability,Error,Error,1443,"before and after the commit I had identified before:. ```console. make[2]: Entering directory '/data/root-build-runtime_cxxmodules-ON'. [100%] Generating lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1596,usability,Error,Error,1596," lib/modules.idx. cd /mnt/root-build-runtime_cxxmodules-ON/lib && /usr/bin/cmake -E remove -f modules.idx modules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:1704,usability,Error,Error,1704,"dules.timestamp. cd /mnt/root-build-runtime_cxxmodules-ON/lib && LD_LIBRARY_PATH=/mnt/root-build-runtime_cxxmodules-ON/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. resolveAArch64Relocation, LocalAddress: 0x55849bc010 FinalAddress: 0x55849bc010 Value: 0x7f7a5f8eb000 Type: 0x113 Addend: 0x0. root.exe: /mnt/root/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:488: void llvm::RuntimeDyldELF::resolveAArch64Relocation(const llvm::SectionEntry&, uint64_t, uint64_t, uint32_t, int64_t): Assertion `isInt<33>(Result) && ""overflow check failed for relocation""' failed. Aborted (core dumped). make[2]: *** [CMakeFiles/modules_idx.dir/build.make:145: lib/modules.idx] Error 134. make[2]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make[1]: *** [CMakeFiles/Makefile2:7643: CMakeFiles/modules_idx.dir/all] Error 2. make[1]: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. make: *** [Makefile:156: all] Error 2. make: Leaving directory '/data/root-build-runtime_cxxmodules-ON'. ```. (The same happens with runtime_cxxmodules=OFF, just with different addresses.). The resolveAArch64Relocation diagnostic output is added by (since I only wanted debugging for the failing assert):. ```diff. diff --git a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. index efe0b9cd61..9d7e5b896d 100644. --- a/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. +++ b/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp. @@ -10,6 +10,7 @@. //. //===----------------------------------------------------------------------===//. . +#include <iostream>. #include ""RuntimeDyldELF.h"". #include ""RuntimeDyldCheckerImpl.h"". #include ""Targets/RuntimeDyldELFMips.h"". @@ -476,6 +477,14 @@ void RuntimeDyldELF::resolveAArch64Relocation(const SectionEntry &Section,. ((Value + Addend) & ~0xfffULL)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4128,usability,document,documentation,4128,"<33>(Result) && ""overflow check failed for relocation"");. . // Immediate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4197,usability,document,documentation,4197,"ate goes in bits 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4218,usability,help,help,4218," 30:29 + 5:23 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-sea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4230,usability,help,help,4230,"3 of ADRP instruction, taken. ```. Using gdb proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4271,usability,command,commands,4271,"b proved to be fruitless in this environment. - Just `gdb` fails due to the absence of ptrace, even with `--cap-add=SYS_PTRACE --security-opt seccomp=unconfined`:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 gdb -ex run --args /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. GNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1. Copyright (C) 2022 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:4626,usability,user,user-static,4626,"oftware Foundation, Inc. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Type ""show copying"" and ""show warranty"" for details. This GDB was configured as ""aarch64-linux-gnu"". Type ""show configuration"" for configuration details. For bug reporting instructions, please see:. <https://www.gnu.org/software/gdb/bugs/>. Find the GDB manual and other documentation resources online at:. <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"". Type ""apropos word"" to search for commands related to ""word""... Reading symbols from /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe... Starting program: /data/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. warning: Could not trace the inferior process. warning: ptrace: Function not implemented. During startup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5550,usability,support,support,5550,"tartup program exited with code 127. ```. - After `apt-get install qemu-user-static`, there is a `gdb` hook in an explicit qemu call, and with `docker cp sad_gauss:/lib/ .` I can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1. Continuing. Program received signal SIGINT, Interrupt. 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::getNumBuckets (this=0x7f6917ca5868). at /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h:1168. warning: 1168 /mnt/root/interpreter/llvm/src/inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:5724,usability,support,supports,5724," can copy the necessary aarch64 libs over:. ```console. # ROOTIGNOREPREFIX=1 ROOT_HIST=0 qemu-aarch64-static -g 1234 /mnt/root-build-runtime_cxxmodules-ON/bin/root.exe -l -q -b. ^C^\. ```. but doesn't crash, and it just keep spinning at 100% CPU for a few hours, and requires a SIGINT to get a backtrace, which we can view outside the container:. ```console. $ gdb-multiarch -q --nh -ex 'file ../root-build-runtime_cxxmodules-ON/bin/root.exe' -ex 'set architecture aarch64' -ex 'set solib-search-path ../root-build-runtime_cxxmodules-ON/lib:./lib' -ex 'target remote 172.17.0.3:1234' -ex 'set auto-load safe-path /' -ex 'continue'. Reading symbols from ../root-build-runtime_cxxmodules-ON/bin/root.exe... The target architecture is set to ""aarch64"". Remote debugging using 172.17.0.3:1234. warning: remote target does not support file transfer, attempting to access files from local filesystem. Reading symbols from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1... This GDB supports auto-downloading debuginfo from the following URLs:. <https://debuginfod.ubuntu.com>. Enable debuginfod for this session? (y or [n]) n. Debuginfod has been disabled. To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit. (No debugging symbols found in /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1). 0x00007f6925dc2c40 in ?? () from /home/wdconinc/git/root/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1. Continuing. Program received signal SIGINT, Interrupt. 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::getNumBuckets (this=0x7f6917ca5868). at /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h:1168. warning: 1168 /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h: No such file or directory. (gdb) bt. #0 0x00007f6908203f2c in llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:9799,usability,tool,tools,9799,"vm/ADT/DenseMap.h:258. #5 0x00007f690825d3fc in llvm::DenseMapBase<llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >, clang::Decl*, unsigned int, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::insert (this=0x7f6917ca5868, KV=...) at /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h:208. #6 0x00007f69082509ac in llvm::MapVector<clang::Decl*, unsigned long, llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >, llvm::SmallVector<std::pair<clang::Decl*, unsigned long>, 4u> >::operator[] (this=0x7f6917ca5868, Key=@0x7f6918c65fd8: 0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/include/llvm/ADT/MapVector.h:100. #7 0x00007f69082263d8 in clang::ASTDeclReader::ReadFunctionDefinition (this=0x7f6918c66130, FD=0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:529. #8 0x00007f6908226624 in clang::ASTDeclReader::Visit (this=0x7f6918c66130, D=0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:564. #9 0x00007f6908245f10 in clang::ASTReader::ReadDeclRecord (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:4120. #10 0x00007f6908176fa0 in clang::ASTReader::GetDecl (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7531. #11 0x00007f690819cda8 in clang::ASTReader::GetLocalDecl (this=0x7f6917ca49b0, F=..., LocalID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/Serialization/ASTReader.h:1856. #12 0x00007f690817749c in operator() (__closure=0x7f6918c66568, M=0x7f69176b1f90, LexicalDecls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7611. #13 0x00007f69081776ac in clang::ASTReader::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:9979,usability,tool,tools,9979,"clang::Decl*, unsigned int> >, clang::Decl*, unsigned int, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >::insert (this=0x7f6917ca5868, KV=...) at /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h:208. #6 0x00007f69082509ac in llvm::MapVector<clang::Decl*, unsigned long, llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >, llvm::SmallVector<std::pair<clang::Decl*, unsigned long>, 4u> >::operator[] (this=0x7f6917ca5868, Key=@0x7f6918c65fd8: 0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/include/llvm/ADT/MapVector.h:100. #7 0x00007f69082263d8 in clang::ASTDeclReader::ReadFunctionDefinition (this=0x7f6918c66130, FD=0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:529. #8 0x00007f6908226624 in clang::ASTDeclReader::Visit (this=0x7f6918c66130, D=0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:564. #9 0x00007f6908245f10 in clang::ASTReader::ReadDeclRecord (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:4120. #10 0x00007f6908176fa0 in clang::ASTReader::GetDecl (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7531. #11 0x00007f690819cda8 in clang::ASTReader::GetLocalDecl (this=0x7f6917ca49b0, F=..., LocalID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/Serialization/ASTReader.h:1856. #12 0x00007f690817749c in operator() (__closure=0x7f6918c66568, M=0x7f69176b1f90, LexicalDecls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7611. #13 0x00007f69081776ac in clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca49b0, DC=0x7f68fdb16850, . I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:10157,usability,tool,tools,10157,", KV=...) at /mnt/root/interpreter/llvm/src/include/llvm/ADT/DenseMap.h:208. #6 0x00007f69082509ac in llvm::MapVector<clang::Decl*, unsigned long, llvm::SmallDenseMap<clang::Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >, llvm::SmallVector<std::pair<clang::Decl*, unsigned long>, 4u> >::operator[] (this=0x7f6917ca5868, Key=@0x7f6918c65fd8: 0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/include/llvm/ADT/MapVector.h:100. #7 0x00007f69082263d8 in clang::ASTDeclReader::ReadFunctionDefinition (this=0x7f6918c66130, FD=0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:529. #8 0x00007f6908226624 in clang::ASTDeclReader::Visit (this=0x7f6918c66130, D=0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:564. #9 0x00007f6908245f10 in clang::ASTReader::ReadDeclRecord (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:4120. #10 0x00007f6908176fa0 in clang::ASTReader::GetDecl (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7531. #11 0x00007f690819cda8 in clang::ASTReader::GetLocalDecl (this=0x7f6917ca49b0, F=..., LocalID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/Serialization/ASTReader.h:1856. #12 0x00007f690817749c in operator() (__closure=0x7f6918c66568, M=0x7f69176b1f90, LexicalDecls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7611. #13 0x00007f69081776ac in clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca49b0, DC=0x7f68fdb16850, . IsKindWeWant=..., Decls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7625. #14 0x00007f690730267c in cling::ExternalASTSourceWrapper::FindExt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:10330,usability,tool,tools,10330,":Decl*, unsigned int, 4u, llvm::DenseMapInfo<clang::Decl*>, llvm::detail::DenseMapPair<clang::Decl*, unsigned int> >, llvm::SmallVector<std::pair<clang::Decl*, unsigned long>, 4u> >::operator[] (this=0x7f6917ca5868, Key=@0x7f6918c65fd8: 0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/include/llvm/ADT/MapVector.h:100. #7 0x00007f69082263d8 in clang::ASTDeclReader::ReadFunctionDefinition (this=0x7f6918c66130, FD=0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:529. #8 0x00007f6908226624 in clang::ASTDeclReader::Visit (this=0x7f6918c66130, D=0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:564. #9 0x00007f6908245f10 in clang::ASTReader::ReadDeclRecord (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:4120. #10 0x00007f6908176fa0 in clang::ASTReader::GetDecl (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7531. #11 0x00007f690819cda8 in clang::ASTReader::GetLocalDecl (this=0x7f6917ca49b0, F=..., LocalID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/Serialization/ASTReader.h:1856. #12 0x00007f690817749c in operator() (__closure=0x7f6918c66568, M=0x7f69176b1f90, LexicalDecls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7611. #13 0x00007f69081776ac in clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca49b0, DC=0x7f68fdb16850, . IsKindWeWant=..., Decls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7625. #14 0x00007f690730267c in cling::ExternalASTSourceWrapper::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca84a0, . DC=0x7f68fdb16850, I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:10516,usability,tool,tools,10516,"rator[] (this=0x7f6917ca5868, Key=@0x7f6918c65fd8: 0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/include/llvm/ADT/MapVector.h:100. #7 0x00007f69082263d8 in clang::ASTDeclReader::ReadFunctionDefinition (this=0x7f6918c66130, FD=0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:529. #8 0x00007f6908226624 in clang::ASTDeclReader::Visit (this=0x7f6918c66130, D=0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:564. #9 0x00007f6908245f10 in clang::ASTReader::ReadDeclRecord (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:4120. #10 0x00007f6908176fa0 in clang::ASTReader::GetDecl (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7531. #11 0x00007f690819cda8 in clang::ASTReader::GetLocalDecl (this=0x7f6917ca49b0, F=..., LocalID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/Serialization/ASTReader.h:1856. #12 0x00007f690817749c in operator() (__closure=0x7f6918c66568, M=0x7f69176b1f90, LexicalDecls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7611. #13 0x00007f69081776ac in clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca49b0, DC=0x7f68fdb16850, . IsKindWeWant=..., Decls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7625. #14 0x00007f690730267c in cling::ExternalASTSourceWrapper::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca84a0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:170. #15 0x00007f69083873b4 in clang::MultiplexExternalSemaSource::FindExternalLexica",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:10708,usability,tool,tools,10708,"onDefinition (this=0x7f6918c66130, FD=0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:529. #8 0x00007f6908226624 in clang::ASTDeclReader::Visit (this=0x7f6918c66130, D=0x7f68f85b4988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:564. #9 0x00007f6908245f10 in clang::ASTReader::ReadDeclRecord (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:4120. #10 0x00007f6908176fa0 in clang::ASTReader::GetDecl (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7531. #11 0x00007f690819cda8 in clang::ASTReader::GetLocalDecl (this=0x7f6917ca49b0, F=..., LocalID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/Serialization/ASTReader.h:1856. #12 0x00007f690817749c in operator() (__closure=0x7f6918c66568, M=0x7f69176b1f90, LexicalDecls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7611. #13 0x00007f69081776ac in clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca49b0, DC=0x7f68fdb16850, . IsKindWeWant=..., Decls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7625. #14 0x00007f690730267c in cling::ExternalASTSourceWrapper::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca84a0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:170. #15 0x00007f69083873b4 in clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6918df92d0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:11044,usability,tool,tools,11044,"245f10 in clang::ASTReader::ReadDeclRecord (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:4120. #10 0x00007f6908176fa0 in clang::ASTReader::GetDecl (this=0x7f6917ca49b0, ID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7531. #11 0x00007f690819cda8 in clang::ASTReader::GetLocalDecl (this=0x7f6917ca49b0, F=..., LocalID=366988) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/Serialization/ASTReader.h:1856. #12 0x00007f690817749c in operator() (__closure=0x7f6918c66568, M=0x7f69176b1f90, LexicalDecls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7611. #13 0x00007f69081776ac in clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca49b0, DC=0x7f68fdb16850, . IsKindWeWant=..., Decls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7625. #14 0x00007f690730267c in cling::ExternalASTSourceWrapper::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca84a0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:170. #15 0x00007f69083873b4 in clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6918df92d0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:121. #16 0x00007f690b4f0ed4 in clang::ExternalASTSource::FindExternalLexicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185. #17 0x00007f690b4ee6e0 in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:11744,usability,tool,tools,11744,".cpp:7611. #13 0x00007f69081776ac in clang::ASTReader::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca49b0, DC=0x7f68fdb16850, . IsKindWeWant=..., Decls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7625. #14 0x00007f690730267c in cling::ExternalASTSourceWrapper::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca84a0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:170. #15 0x00007f69083873b4 in clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6918df92d0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:121. #16 0x00007f690b4f0ed4 in clang::ExternalASTSource::FindExternalLexicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185. #17 0x00007f690b4ee6e0 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:11966,usability,tool,tools,11966,"fdb16850, . IsKindWeWant=..., Decls=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7625. #14 0x00007f690730267c in cling::ExternalASTSourceWrapper::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca84a0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:170. #15 0x00007f69083873b4 in clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6918df92d0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:121. #16 0x00007f690b4f0ed4 in clang::ExternalASTSource::FindExternalLexicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185. #17 0x00007f690b4ee6e0 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:12159,usability,tool,tools,12159,"nalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca84a0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:170. #15 0x00007f69083873b4 in clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6918df92d0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:121. #16 0x00007f690b4f0ed4 in clang::ExternalASTSource::FindExternalLexicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185. #17 0x00007f690b4ee6e0 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:12312,usability,tool,tools,12312,"=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:170. #15 0x00007f69083873b4 in clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6918df92d0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:121. #16 0x00007f690b4f0ed4 in clang::ExternalASTSource::FindExternalLexicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185. #17 0x00007f690b4ee6e0 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:12459,usability,tool,tools,12459,"in clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6918df92d0, . DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:121. #16 0x00007f690b4f0ed4 in clang::ExternalASTSource::FindExternalLexicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185. #17 0x00007f690b4ee6e0 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:12746,usability,tool,tools,12746,"/clang/lib/Sema/MultiplexExternalSemaSource.cpp:121. #16 0x00007f690b4f0ed4 in clang::ExternalASTSource::FindExternalLexicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185. #17 0x00007f690b4ee6e0 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisito",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:13041,usability,tool,tools,13041,"in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356. #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412. #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:13346,usability,tool,tools,13346,". #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109. #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<load",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:13640,usability,tool,tools,13640,"lper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393. #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveAS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:13945,usability,tool,tools,13945,":CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908. #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::Definitio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:14234,usability,tool,tools,14234,"cl *) (this=0x7f6918c66d10, D=0x7f68fdb16810). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283. #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:14541,usability,tool,tools,14541,"ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785. #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in Cr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13845:14846,usability,tool,tools,14846,"x7f6918c66d10, D=0x7f68fdb166d8). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227. #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395. #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496. #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718). at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621. #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124. #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175. #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273. #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, interpLibHandle=0x7f6918d00330). at /mnt/root/core/metacling/src/TCling.cxx:1592. #32 0x00007f6907028fe0 in CreateInterpreter (interpLibHandle=0x7f6918d00330, argv=0x7f6918c67348) at /mnt/root/core/metacling/src/TCling.cxx:609. #33 0x00007f691976892c in TROOT::InitInterpreter (this=0x7f6919c40c38 <ROOT::Internal::GetROOT1()::alloc>) at /mnt/root/core/base/src/TROOT.cxx:2072. #34 0x00007f691976271c in ROOT::Inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13845
https://github.com/root-project/root/issues/13846:61,integrability,Event,Event,61,"Dear @mmaneyro ,. Thank you for your report. I take it that `Event.NParticles` is a sub-branch of the `Event` branch. What you describe is not really surprising, as `Redefine` is meant to substitute the values of the full column of the RDataFrame (column==branch). The difference in behaviour between non-jitted and jitted code is more surprising though. As a fast workaround, you could be more explicit about the columns you want to save in your output TTree by adding the list of column names to the `Snapshot` call. ```cpp. auto snap = df2.Snapshot(""LHEF"", ""out_snapshot.root"", {""Event.NParticles""});. ```. In order for me to better reproduce your problem though, I believe I would also need some instructions on how to generate the dictionaries for the classes in your file. Meanwhile, I can try to come up with a simpler reproducer, but having also your scenario would help. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:84,integrability,sub,sub-branch,84,"Dear @mmaneyro ,. Thank you for your report. I take it that `Event.NParticles` is a sub-branch of the `Event` branch. What you describe is not really surprising, as `Redefine` is meant to substitute the values of the full column of the RDataFrame (column==branch). The difference in behaviour between non-jitted and jitted code is more surprising though. As a fast workaround, you could be more explicit about the columns you want to save in your output TTree by adding the list of column names to the `Snapshot` call. ```cpp. auto snap = df2.Snapshot(""LHEF"", ""out_snapshot.root"", {""Event.NParticles""});. ```. In order for me to better reproduce your problem though, I believe I would also need some instructions on how to generate the dictionaries for the classes in your file. Meanwhile, I can try to come up with a simpler reproducer, but having also your scenario would help. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:103,integrability,Event,Event,103,"Dear @mmaneyro ,. Thank you for your report. I take it that `Event.NParticles` is a sub-branch of the `Event` branch. What you describe is not really surprising, as `Redefine` is meant to substitute the values of the full column of the RDataFrame (column==branch). The difference in behaviour between non-jitted and jitted code is more surprising though. As a fast workaround, you could be more explicit about the columns you want to save in your output TTree by adding the list of column names to the `Snapshot` call. ```cpp. auto snap = df2.Snapshot(""LHEF"", ""out_snapshot.root"", {""Event.NParticles""});. ```. In order for me to better reproduce your problem though, I believe I would also need some instructions on how to generate the dictionaries for the classes in your file. Meanwhile, I can try to come up with a simpler reproducer, but having also your scenario would help. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:188,integrability,sub,substitute,188,"Dear @mmaneyro ,. Thank you for your report. I take it that `Event.NParticles` is a sub-branch of the `Event` branch. What you describe is not really surprising, as `Redefine` is meant to substitute the values of the full column of the RDataFrame (column==branch). The difference in behaviour between non-jitted and jitted code is more surprising though. As a fast workaround, you could be more explicit about the columns you want to save in your output TTree by adding the list of column names to the `Snapshot` call. ```cpp. auto snap = df2.Snapshot(""LHEF"", ""out_snapshot.root"", {""Event.NParticles""});. ```. In order for me to better reproduce your problem though, I believe I would also need some instructions on how to generate the dictionaries for the classes in your file. Meanwhile, I can try to come up with a simpler reproducer, but having also your scenario would help. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:583,integrability,Event,Event,583,"Dear @mmaneyro ,. Thank you for your report. I take it that `Event.NParticles` is a sub-branch of the `Event` branch. What you describe is not really surprising, as `Redefine` is meant to substitute the values of the full column of the RDataFrame (column==branch). The difference in behaviour between non-jitted and jitted code is more surprising though. As a fast workaround, you could be more explicit about the columns you want to save in your output TTree by adding the list of column names to the `Snapshot` call. ```cpp. auto snap = df2.Snapshot(""LHEF"", ""out_snapshot.root"", {""Event.NParticles""});. ```. In order for me to better reproduce your problem though, I believe I would also need some instructions on how to generate the dictionaries for the classes in your file. Meanwhile, I can try to come up with a simpler reproducer, but having also your scenario would help. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:859,modifiability,scenario,scenario,859,"Dear @mmaneyro ,. Thank you for your report. I take it that `Event.NParticles` is a sub-branch of the `Event` branch. What you describe is not really surprising, as `Redefine` is meant to substitute the values of the full column of the RDataFrame (column==branch). The difference in behaviour between non-jitted and jitted code is more surprising though. As a fast workaround, you could be more explicit about the columns you want to save in your output TTree by adding the list of column names to the `Snapshot` call. ```cpp. auto snap = df2.Snapshot(""LHEF"", ""out_snapshot.root"", {""Event.NParticles""});. ```. In order for me to better reproduce your problem though, I believe I would also need some instructions on how to generate the dictionaries for the classes in your file. Meanwhile, I can try to come up with a simpler reproducer, but having also your scenario would help. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:818,testability,simpl,simpler,818,"Dear @mmaneyro ,. Thank you for your report. I take it that `Event.NParticles` is a sub-branch of the `Event` branch. What you describe is not really surprising, as `Redefine` is meant to substitute the values of the full column of the RDataFrame (column==branch). The difference in behaviour between non-jitted and jitted code is more surprising though. As a fast workaround, you could be more explicit about the columns you want to save in your output TTree by adding the list of column names to the `Snapshot` call. ```cpp. auto snap = df2.Snapshot(""LHEF"", ""out_snapshot.root"", {""Event.NParticles""});. ```. In order for me to better reproduce your problem though, I believe I would also need some instructions on how to generate the dictionaries for the classes in your file. Meanwhile, I can try to come up with a simpler reproducer, but having also your scenario would help. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:283,usability,behavi,behaviour,283,"Dear @mmaneyro ,. Thank you for your report. I take it that `Event.NParticles` is a sub-branch of the `Event` branch. What you describe is not really surprising, as `Redefine` is meant to substitute the values of the full column of the RDataFrame (column==branch). The difference in behaviour between non-jitted and jitted code is more surprising though. As a fast workaround, you could be more explicit about the columns you want to save in your output TTree by adding the list of column names to the `Snapshot` call. ```cpp. auto snap = df2.Snapshot(""LHEF"", ""out_snapshot.root"", {""Event.NParticles""});. ```. In order for me to better reproduce your problem though, I believe I would also need some instructions on how to generate the dictionaries for the classes in your file. Meanwhile, I can try to come up with a simpler reproducer, but having also your scenario would help. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:818,usability,simpl,simpler,818,"Dear @mmaneyro ,. Thank you for your report. I take it that `Event.NParticles` is a sub-branch of the `Event` branch. What you describe is not really surprising, as `Redefine` is meant to substitute the values of the full column of the RDataFrame (column==branch). The difference in behaviour between non-jitted and jitted code is more surprising though. As a fast workaround, you could be more explicit about the columns you want to save in your output TTree by adding the list of column names to the `Snapshot` call. ```cpp. auto snap = df2.Snapshot(""LHEF"", ""out_snapshot.root"", {""Event.NParticles""});. ```. In order for me to better reproduce your problem though, I believe I would also need some instructions on how to generate the dictionaries for the classes in your file. Meanwhile, I can try to come up with a simpler reproducer, but having also your scenario would help. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:874,usability,help,help,874,"Dear @mmaneyro ,. Thank you for your report. I take it that `Event.NParticles` is a sub-branch of the `Event` branch. What you describe is not really surprising, as `Redefine` is meant to substitute the values of the full column of the RDataFrame (column==branch). The difference in behaviour between non-jitted and jitted code is more surprising though. As a fast workaround, you could be more explicit about the columns you want to save in your output TTree by adding the list of column names to the `Snapshot` call. ```cpp. auto snap = df2.Snapshot(""LHEF"", ""out_snapshot.root"", {""Event.NParticles""});. ```. In order for me to better reproduce your problem though, I believe I would also need some instructions on how to generate the dictionaries for the classes in your file. Meanwhile, I can try to come up with a simpler reproducer, but having also your scenario would help. Cheers,. Vincenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:398,availability,error,error,398,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:586,availability,error,error,586,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:31,deployability,manag,managed,31,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:31,energy efficiency,manag,managed,31,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:174,integrability,event,event,174,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:451,interoperability,specif,specify,451,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:398,performance,error,error,398,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:586,performance,error,error,586,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:1436,performance,time,time,1436,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:31,safety,manag,managed,31,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:398,safety,error,error,398,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:586,safety,error,error,586,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:595,testability,understand,understand,595,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:911,testability,simpl,simple,911,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:262,usability,custom,custom,262,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:398,usability,error,error,398,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:586,usability,error,error,586,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:769,usability,support,support,769,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:911,usability,simpl,simple,911,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/issues/13846:1639,usability,learn,learn,1639,"Dear Vincenzo,. I have already managed to work with the redefined trees I need, just with a number of workarounds. The tree files in this case are generated from Les Houches event files using the ExRootLHEFConverter from ExRootAnalysis. As such the branches are custom classes, which can be found in the ExRootAnalysis source files. I can't actually snapshot individual columns without gettting an error as there are TClonesArray column headers which specify the structure of the branches. The obvious fix would be to snapshot the column plus the header, but then that also gives me an error. I understand that Redefine is ideally used for columns, however I need to be able to apply different redefinitions to different leaves within a branch. Do RDataFrames just not support rewriting leaves/nested columns? The columns seem to actually be doing what I'd like before snapshotting. It seems like there's not a simple solution where I get to benefit from using RDataFrame and keep the tree structure untouched. I need to be able to add rows of data to each entry within a leaf (I'm actually concatenating multiple trees), and TTrees don't allow this as far as I can see. I guess I could define a new TTree by hand, setup the branches and fill new arrays from my original trees with the redefinitions I need,(just by iterating over every entry and data value). But then I'm still changing my TTree stucture, as with snapshot. Maybe next time I'll just start by rewriting ExRootLHEFConverter to take the data from two .lhe files, or just stick to TTrees, but to be fair this project has been my first attempt at using ROOT/C++. You code you learn! What I am trying to do may be a bit of a niche use case, but I hope some of what I wrote is useful to you. Regards, . Marina",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13846
https://github.com/root-project/root/pull/13849:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13849
https://github.com/root-project/root/pull/13850:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:29,deployability,build,build,29,@smuzaffar can you trigger a build on the ppc64 infrastructure for cmssw?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:48,deployability,infrastructur,infrastructure,48,@smuzaffar can you trigger a build on the ppc64 infrastructure for cmssw?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:6,availability,failur,failures,6,"Build failures are due to calling `empty` in assert, fixing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:0,deployability,Build,Build,0,"Build failures are due to calling `empty` in assert, fixing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:6,deployability,fail,failures,6,"Build failures are due to calling `empty` in assert, fixing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:6,performance,failur,failures,6,"Build failures are due to calling `empty` in assert, fixing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:6,reliability,fail,failures,6,"Build failures are due to calling `empty` in assert, fixing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:45,testability,assert,assert,45,"Build failures are due to calling `empty` in assert, fixing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:31,deployability,build,build,31,> @smuzaffar can you trigger a build on the ppc64 infrastructure for cmssw? CMS tests started via https://github.com/cms-sw/root/pull/188,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:50,deployability,infrastructur,infrastructure,50,> @smuzaffar can you trigger a build on the ppc64 infrastructure for cmssw? CMS tests started via https://github.com/cms-sw/root/pull/188,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:80,safety,test,tests,80,> @smuzaffar can you trigger a build on the ppc64 infrastructure for cmssw? CMS tests started via https://github.com/cms-sw/root/pull/188,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:80,testability,test,tests,80,> @smuzaffar can you trigger a build on the ppc64 infrastructure for cmssw? CMS tests started via https://github.com/cms-sw/root/pull/188,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:112,availability,failur,failures,112,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:13,deployability,depend,depends,13,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:112,deployability,fail,failures,112,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:154,deployability,updat,updates,154,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:13,integrability,depend,depends,13,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:13,modifiability,depend,depends,13,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:112,performance,failur,failures,112,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:112,reliability,fail,failures,112,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:13,safety,depend,depends,13,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:154,safety,updat,updates,154,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:234,safety,test,testing,234,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:154,security,updat,updates,154,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:13,testability,depend,depends,13,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:234,testability,test,testing,234,"Merging this depends on https://github.com/root-project/root/pull/13273, so marking as draft. FWIW the roottest failures are because some references need updates (https://github.com/root-project/roottest/pull/992), but not needed for testing here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:22,safety,test,tests,22,"@smuzaffar, I see the tests were rejected on the cmssw side but can you help us understand if something was missing on the ppc64 backend side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:22,testability,test,tests,22,"@smuzaffar, I see the tests were rejected on the cmssw side but can you help us understand if something was missing on the ppc64 backend side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:80,testability,understand,understand,80,"@smuzaffar, I see the tests were rejected on the cmssw side but can you help us understand if something was missing on the ppc64 backend side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:72,usability,help,help,72,"@smuzaffar, I see the tests were rejected on the cmssw side but can you help us understand if something was missing on the ppc64 backend side?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:2551,availability,error,error,2551,"ernal/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:17:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/string.hpp:23:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/level.hpp:30:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/integral_c.hpp:32:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/integral_wrapper.hpp:73:31: error: integer value -1 is outside the valid range of values [0, 3] for this enumeration type [-Wenum-constexpr-conversion]. typedef AUX_WRAPPER_INST( BOOST_MPL_AUX_STATIC_CAST(AUX_WRAPPER_VALUE_TYPE, (value - 1)) ) prior;. ^. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/static_cast.hpp:24:47: note: expanded from macro 'BOOST_MPL_AUX_STATIC_CAST'. # define BOOST_MPL_AUX_STATIC_CAST(T, expr) static_cast<T>(expr). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:115,deployability,build,build,115,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:130,deployability,fail,failing,130,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:153,deployability,fail,failed,153,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:163,deployability,build,build,163,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:238,deployability,patch,patching,238,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:311,deployability,build,build,311,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:365,deployability,artifact,artifacts,365,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:388,deployability,integr,integration,388,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:416,deployability,build,build-logs,416,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:447,deployability,log,log,447,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:465,deployability,Build,Building,465,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:388,integrability,integr,integration,388,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:784,integrability,interfac,interface,784,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:868,integrability,interfac,interface,868,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1995,integrability,interfac,interface,1995,"ernal/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:17:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/string.hpp:23:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/level.hpp:30:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/integral_c.hpp:32:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/integral_wrapper.hpp:73:31: error: integer value -1 is outside the valid range of values [0, 3] for this enumeration type [-Wenum-constexpr-conversion]. typedef AUX_WRAPPER_INST( BOOST_MPL_AUX_STATIC_CAST(AUX_WRAPPER_VALUE_TYPE, (value - 1)) ) prior;. ^. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/static_cast.hpp:24:47: note: expanded from macro 'BOOST_MPL_AUX_STATIC_CAST'. # define BOOST_MPL_AUX_STATIC_CAST(T, expr) static_cast<T>(expr). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:2079,integrability,interfac,interface,2079,"ernal/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:17:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/string.hpp:23:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/level.hpp:30:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/integral_c.hpp:32:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/integral_wrapper.hpp:73:31: error: integer value -1 is outside the valid range of values [0, 3] for this enumeration type [-Wenum-constexpr-conversion]. typedef AUX_WRAPPER_INST( BOOST_MPL_AUX_STATIC_CAST(AUX_WRAPPER_VALUE_TYPE, (value - 1)) ) prior;. ^. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/static_cast.hpp:24:47: note: expanded from macro 'BOOST_MPL_AUX_STATIC_CAST'. # define BOOST_MPL_AUX_STATIC_CAST(T, expr) static_cast<T>(expr). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:388,interoperability,integr,integration,388,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:784,interoperability,interfac,interface,784,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:868,interoperability,interfac,interface,868,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1995,interoperability,interfac,interface,1995,"ernal/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:17:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/string.hpp:23:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/level.hpp:30:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/integral_c.hpp:32:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/integral_wrapper.hpp:73:31: error: integer value -1 is outside the valid range of values [0, 3] for this enumeration type [-Wenum-constexpr-conversion]. typedef AUX_WRAPPER_INST( BOOST_MPL_AUX_STATIC_CAST(AUX_WRAPPER_VALUE_TYPE, (value - 1)) ) prior;. ^. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/static_cast.hpp:24:47: note: expanded from macro 'BOOST_MPL_AUX_STATIC_CAST'. # define BOOST_MPL_AUX_STATIC_CAST(T, expr) static_cast<T>(expr). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:2079,interoperability,interfac,interface,2079,"ernal/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:17:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/string.hpp:23:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/level.hpp:30:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/integral_c.hpp:32:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/integral_wrapper.hpp:73:31: error: integer value -1 is outside the valid range of values [0, 3] for this enumeration type [-Wenum-constexpr-conversion]. typedef AUX_WRAPPER_INST( BOOST_MPL_AUX_STATIC_CAST(AUX_WRAPPER_VALUE_TYPE, (value - 1)) ) prior;. ^. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/static_cast.hpp:24:47: note: expanded from macro 'BOOST_MPL_AUX_STATIC_CAST'. # define BOOST_MPL_AUX_STATIC_CAST(T, expr) static_cast<T>(expr). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:2663,interoperability,convers,conversion,2663,"ernal/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:17:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/string.hpp:23:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/level.hpp:30:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/integral_c.hpp:32:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/integral_wrapper.hpp:73:31: error: integer value -1 is outside the valid range of values [0, 3] for this enumeration type [-Wenum-constexpr-conversion]. typedef AUX_WRAPPER_INST( BOOST_MPL_AUX_STATIC_CAST(AUX_WRAPPER_VALUE_TYPE, (value - 1)) ) prior;. ^. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/static_cast.hpp:24:47: note: expanded from macro 'BOOST_MPL_AUX_STATIC_CAST'. # define BOOST_MPL_AUX_STATIC_CAST(T, expr) static_cast<T>(expr). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:198,modifiability,pac,package,198,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:388,modifiability,integr,integration,388,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:784,modifiability,interfac,interface,784,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:868,modifiability,interfac,interface,868,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1995,modifiability,interfac,interface,1995,"ernal/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:17:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/string.hpp:23:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/level.hpp:30:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/integral_c.hpp:32:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/integral_wrapper.hpp:73:31: error: integer value -1 is outside the valid range of values [0, 3] for this enumeration type [-Wenum-constexpr-conversion]. typedef AUX_WRAPPER_INST( BOOST_MPL_AUX_STATIC_CAST(AUX_WRAPPER_VALUE_TYPE, (value - 1)) ) prior;. ^. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/static_cast.hpp:24:47: note: expanded from macro 'BOOST_MPL_AUX_STATIC_CAST'. # define BOOST_MPL_AUX_STATIC_CAST(T, expr) static_cast<T>(expr). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:2079,modifiability,interfac,interface,2079,"ernal/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:17:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/string.hpp:23:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/level.hpp:30:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/integral_c.hpp:32:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/integral_wrapper.hpp:73:31: error: integer value -1 is outside the valid range of values [0, 3] for this enumeration type [-Wenum-constexpr-conversion]. typedef AUX_WRAPPER_INST( BOOST_MPL_AUX_STATIC_CAST(AUX_WRAPPER_VALUE_TYPE, (value - 1)) ) prior;. ^. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/static_cast.hpp:24:47: note: expanded from macro 'BOOST_MPL_AUX_STATIC_CAST'. # define BOOST_MPL_AUX_STATIC_CAST(T, expr) static_cast<T>(expr). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:103,performance,time,time,103,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:2551,performance,error,error,2551,"ernal/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:17:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/string.hpp:23:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/level.hpp:30:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/integral_c.hpp:32:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/integral_wrapper.hpp:73:31: error: integer value -1 is outside the valid range of values [0, 3] for this enumeration type [-Wenum-constexpr-conversion]. typedef AUX_WRAPPER_INST( BOOST_MPL_AUX_STATIC_CAST(AUX_WRAPPER_VALUE_TYPE, (value - 1)) ) prior;. ^. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/static_cast.hpp:24:47: note: expanded from macro 'BOOST_MPL_AUX_STATIC_CAST'. # define BOOST_MPL_AUX_STATIC_CAST(T, expr) static_cast<T>(expr). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:130,reliability,fail,failing,130,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:153,reliability,fail,failed,153,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:388,reliability,integr,integration,388,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:18,safety,test,tests,18,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:238,safety,patch,patching,238,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:422,safety,log,logs,422,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:447,safety,log,log,447,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:649,safety,test,tests,649,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:961,safety,test,tests,961,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:967,safety,test,testBuildDir,967,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:2551,safety,error,error,2551,"ernal/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:17:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/string.hpp:23:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/level.hpp:30:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/integral_c.hpp:32:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/integral_wrapper.hpp:73:31: error: integer value -1 is outside the valid range of values [0, 3] for this enumeration type [-Wenum-constexpr-conversion]. typedef AUX_WRAPPER_INST( BOOST_MPL_AUX_STATIC_CAST(AUX_WRAPPER_VALUE_TYPE, (value - 1)) ) prior;. ^. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/static_cast.hpp:24:47: note: expanded from macro 'BOOST_MPL_AUX_STATIC_CAST'. # define BOOST_MPL_AUX_STATIC_CAST(T, expr) static_cast<T>(expr). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:2590,safety,valid,valid,2590,"ernal/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:17:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/string.hpp:23:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/level.hpp:30:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/integral_c.hpp:32:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/integral_wrapper.hpp:73:31: error: integer value -1 is outside the valid range of values [0, 3] for this enumeration type [-Wenum-constexpr-conversion]. typedef AUX_WRAPPER_INST( BOOST_MPL_AUX_STATIC_CAST(AUX_WRAPPER_VALUE_TYPE, (value - 1)) ) prior;. ^. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/static_cast.hpp:24:47: note: expanded from macro 'BOOST_MPL_AUX_STATIC_CAST'. # define BOOST_MPL_AUX_STATIC_CAST(T, expr) static_cast<T>(expr). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:238,security,patch,patching,238,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:388,security,integr,integration,388,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:422,security,log,logs,422,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:447,security,log,log,447,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:18,testability,test,tests,18,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:388,testability,integr,integration,388,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:422,testability,log,logs,422,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:447,testability,log,log,447,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:649,testability,test,tests,649,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:961,testability,test,tests,961,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:967,testability,test,testBuildDir,967,"@vgvassilev , CMS tests [passed](https://github.com/cms-sw/root/pull/188#issuecomment-1782229736) this time. CMSSW build step was failing as `rootcling` failed to build dictionary[a] for one of our package ( with boost headers). Anyway, [patching boost](https://github.com/cms-externals/boost/pull/6) fixed the build issue. . [a] https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-0e3c07/35428/build-logs/CondFormats/RunInfo/log.html. ```. >> Building LCG reflex dict from header file src/CondFormats/RunInfo/src/classes.h. In file included from input_line_7:57:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_3_ROOT6_X_2023-10-25-2300/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:18:. In file included from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc12/external/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:2551,usability,error,error,2551,"ernal/boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/vector.hpp:26:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/nvp.hpp:35:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/split_free.hpp:22:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/serialization.hpp:14:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/strong_typedef.hpp:28:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/type_traits/has_nothrow_assign.hpp:65:7: warning: builtin __has_nothrow_assign is deprecated; use __is_nothrow_assignable instead [-Wdeprecated-builtins]. BOOST_HAS_NOTHROW_ASSIGN(T). .... .... In file included from input_line_7:57:. In file included from cmssw/src/CondFormats/RunInfo/src/headers.h:1:. In file included from cmssw/src/CondFormats/RunInfo/interface/RunNumber.h:4:. In file included from cmssw/src/CondFormats/Serialization/interface/Serializable.h:17:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/string.hpp:23:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/serialization/level.hpp:30:. In file included from .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/integral_c.hpp:32:. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/integral_wrapper.hpp:73:31: error: integer value -1 is outside the valid range of values [0, 3] for this enumeration type [-Wenum-constexpr-conversion]. typedef AUX_WRAPPER_INST( BOOST_MPL_AUX_STATIC_CAST(AUX_WRAPPER_VALUE_TYPE, (value - 1)) ) prior;. ^. .../boost/1.80.0-826a207b8543c52970cb1f72d50f068c/include/boost/mpl/aux_/static_cast.hpp:24:47: note: expanded from macro 'BOOST_MPL_AUX_STATIC_CAST'. # define BOOST_MPL_AUX_STATIC_CAST(T, expr) static_cast<T>(expr). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:126,energy efficiency,current,current,126,"We merged https://github.com/root-project/root/pull/13273 this morning. In order to move forward, we need to. * [ ] rebase on current `master`. * [ ] get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. * [ ] get a CMSSW test on PowerPC64 (the above test is for `x86`!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:279,safety,test,test,279,"We merged https://github.com/root-project/root/pull/13273 this morning. In order to move forward, we need to. * [ ] rebase on current `master`. * [ ] get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. * [ ] get a CMSSW test on PowerPC64 (the above test is for `x86`!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:308,safety,test,test,308,"We merged https://github.com/root-project/root/pull/13273 this morning. In order to move forward, we need to. * [ ] rebase on current `master`. * [ ] get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. * [ ] get a CMSSW test on PowerPC64 (the above test is for `x86`!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:186,security,hash,hashes,186,"We merged https://github.com/root-project/root/pull/13273 this morning. In order to move forward, we need to. * [ ] rebase on current `master`. * [ ] get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. * [ ] get a CMSSW test on PowerPC64 (the above test is for `x86`!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:279,testability,test,test,279,"We merged https://github.com/root-project/root/pull/13273 this morning. In order to move forward, we need to. * [ ] rebase on current `master`. * [ ] get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. * [ ] get a CMSSW test on PowerPC64 (the above test is for `x86`!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:308,testability,test,test,308,"We merged https://github.com/root-project/root/pull/13273 this morning. In order to move forward, we need to. * [ ] rebase on current `master`. * [ ] get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. * [ ] get a CMSSW test on PowerPC64 (the above test is for `x86`!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:12,energy efficiency,current,current,12,"> rebase on current master. Sure. > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. Will do. Must be noted, some commits are not cherry-picked cleanly. > get a CMSSW test on PowerPC64 (the above test is for x86!). Can you elaborate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:229,safety,test,test,229,"> rebase on current master. Sure. > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. Will do. Must be noted, some commits are not cherry-picked cleanly. > get a CMSSW test on PowerPC64 (the above test is for x86!). Can you elaborate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:258,safety,test,test,258,"> rebase on current master. Sure. > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. Will do. Must be noted, some commits are not cherry-picked cleanly. > get a CMSSW test on PowerPC64 (the above test is for x86!). Can you elaborate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:72,security,hash,hashes,72,"> rebase on current master. Sure. > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. Will do. Must be noted, some commits are not cherry-picked cleanly. > get a CMSSW test on PowerPC64 (the above test is for x86!). Can you elaborate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:229,testability,test,test,229,"> rebase on current master. Sure. > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. Will do. Must be noted, some commits are not cherry-picked cleanly. > get a CMSSW test on PowerPC64 (the above test is for x86!). Can you elaborate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:258,testability,test,test,258,"> rebase on current master. Sure. > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. Will do. Must be noted, some commits are not cherry-picked cleanly. > get a CMSSW test on PowerPC64 (the above test is for x86!). Can you elaborate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:290,deployability,automat,automatically,290,"> > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. > . > Will do. Must be noted, some commits are not cherry-picked cleanly. Ok, is this because of other changes? Ideally, we really want to apply upstream commits so that they automatically rebase out during the next upgrade. > > get a CMSSW test on PowerPC64 (the above test is for x86!). > . > Can you elaborate? https://github.com/root-project/root/pull/13850#issuecomment-1782483745 notes that CMS tests passed, however that is for the `amd64` architecture, *not* for `ppc64le`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:331,deployability,upgrad,upgrade,331,"> > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. > . > Will do. Must be noted, some commits are not cherry-picked cleanly. Ok, is this because of other changes? Ideally, we really want to apply upstream commits so that they automatically rebase out during the next upgrade. > > get a CMSSW test on PowerPC64 (the above test is for x86!). > . > Can you elaborate? https://github.com/root-project/root/pull/13850#issuecomment-1782483745 notes that CMS tests passed, however that is for the `amd64` architecture, *not* for `ppc64le`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:562,interoperability,architectur,architecture,562,"> > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. > . > Will do. Must be noted, some commits are not cherry-picked cleanly. Ok, is this because of other changes? Ideally, we really want to apply upstream commits so that they automatically rebase out during the next upgrade. > > get a CMSSW test on PowerPC64 (the above test is for x86!). > . > Can you elaborate? https://github.com/root-project/root/pull/13850#issuecomment-1782483745 notes that CMS tests passed, however that is for the `amd64` architecture, *not* for `ppc64le`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:331,modifiability,upgrad,upgrade,331,"> > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. > . > Will do. Must be noted, some commits are not cherry-picked cleanly. Ok, is this because of other changes? Ideally, we really want to apply upstream commits so that they automatically rebase out during the next upgrade. > > get a CMSSW test on PowerPC64 (the above test is for x86!). > . > Can you elaborate? https://github.com/root-project/root/pull/13850#issuecomment-1782483745 notes that CMS tests passed, however that is for the `amd64` architecture, *not* for `ppc64le`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:356,safety,test,test,356,"> > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. > . > Will do. Must be noted, some commits are not cherry-picked cleanly. Ok, is this because of other changes? Ideally, we really want to apply upstream commits so that they automatically rebase out during the next upgrade. > > get a CMSSW test on PowerPC64 (the above test is for x86!). > . > Can you elaborate? https://github.com/root-project/root/pull/13850#issuecomment-1782483745 notes that CMS tests passed, however that is for the `amd64` architecture, *not* for `ppc64le`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:385,safety,test,test,385,"> > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. > . > Will do. Must be noted, some commits are not cherry-picked cleanly. Ok, is this because of other changes? Ideally, we really want to apply upstream commits so that they automatically rebase out during the next upgrade. > > get a CMSSW test on PowerPC64 (the above test is for x86!). > . > Can you elaborate? https://github.com/root-project/root/pull/13850#issuecomment-1782483745 notes that CMS tests passed, however that is for the `amd64` architecture, *not* for `ppc64le`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:516,safety,test,tests,516,"> > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. > . > Will do. Must be noted, some commits are not cherry-picked cleanly. Ok, is this because of other changes? Ideally, we really want to apply upstream commits so that they automatically rebase out during the next upgrade. > > get a CMSSW test on PowerPC64 (the above test is for x86!). > . > Can you elaborate? https://github.com/root-project/root/pull/13850#issuecomment-1782483745 notes that CMS tests passed, however that is for the `amd64` architecture, *not* for `ppc64le`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:40,security,hash,hashes,40,"> > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. > . > Will do. Must be noted, some commits are not cherry-picked cleanly. Ok, is this because of other changes? Ideally, we really want to apply upstream commits so that they automatically rebase out during the next upgrade. > > get a CMSSW test on PowerPC64 (the above test is for x86!). > . > Can you elaborate? https://github.com/root-project/root/pull/13850#issuecomment-1782483745 notes that CMS tests passed, however that is for the `amd64` architecture, *not* for `ppc64le`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:290,testability,automat,automatically,290,"> > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. > . > Will do. Must be noted, some commits are not cherry-picked cleanly. Ok, is this because of other changes? Ideally, we really want to apply upstream commits so that they automatically rebase out during the next upgrade. > > get a CMSSW test on PowerPC64 (the above test is for x86!). > . > Can you elaborate? https://github.com/root-project/root/pull/13850#issuecomment-1782483745 notes that CMS tests passed, however that is for the `amd64` architecture, *not* for `ppc64le`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:356,testability,test,test,356,"> > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. > . > Will do. Must be noted, some commits are not cherry-picked cleanly. Ok, is this because of other changes? Ideally, we really want to apply upstream commits so that they automatically rebase out during the next upgrade. > > get a CMSSW test on PowerPC64 (the above test is for x86!). > . > Can you elaborate? https://github.com/root-project/root/pull/13850#issuecomment-1782483745 notes that CMS tests passed, however that is for the `amd64` architecture, *not* for `ppc64le`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:385,testability,test,test,385,"> > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. > . > Will do. Must be noted, some commits are not cherry-picked cleanly. Ok, is this because of other changes? Ideally, we really want to apply upstream commits so that they automatically rebase out during the next upgrade. > > get a CMSSW test on PowerPC64 (the above test is for x86!). > . > Can you elaborate? https://github.com/root-project/root/pull/13850#issuecomment-1782483745 notes that CMS tests passed, however that is for the `amd64` architecture, *not* for `ppc64le`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:516,testability,test,tests,516,"> > get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/. > . > Will do. Must be noted, some commits are not cherry-picked cleanly. Ok, is this because of other changes? Ideally, we really want to apply upstream commits so that they automatically rebase out during the next upgrade. > > get a CMSSW test on PowerPC64 (the above test is for x86!). > . > Can you elaborate? https://github.com/root-project/root/pull/13850#issuecomment-1782483745 notes that CMS tests passed, however that is for the `amd64` architecture, *not* for `ppc64le`!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:158,deployability,API,APIs,158,"> Ok, is this because of other changes? Yes. When started to develop, JITLink for ppc64 was based on LLVM-17. There are misc changes between 16.x and 17.x in APIs and code structures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:158,integrability,API,APIs,158,"> Ok, is this because of other changes? Yes. When started to develop, JITLink for ppc64 was based on LLVM-17. There are misc changes between 16.x and 17.x in APIs and code structures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:158,interoperability,API,APIs,158,"> Ok, is this because of other changes? Yes. When started to develop, JITLink for ppc64 was based on LLVM-17. There are misc changes between 16.x and 17.x in APIs and code structures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:26,deployability,infrastructur,infrastructure,26,"Right. If there are other infrastructure changes to backport to make things easier, we can also do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:57,security,hash,hashes,57,@bzEq can you please prepare the list of upstream commit hashes that you are backporting here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1352,availability,state,statement,1352,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1362,deployability,contain,contains,1362,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:126,energy efficiency,Power,PowerPC,126,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:202,energy efficiency,Power,PowerPC,202,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:281,energy efficiency,Power,PowerPC,281,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:427,energy efficiency,Power,PowerPC,427,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:520,energy efficiency,Power,PowerPC,520,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:606,energy efficiency,Power,PowerPC,606,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:667,energy efficiency,Power,PowerPC,667,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:742,energy efficiency,Power,PowerPC,742,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:799,energy efficiency,Power,PowerPC,799,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:858,energy efficiency,current,current,858,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:992,energy efficiency,Power,PowerPC,992,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1135,energy efficiency,Power,PowerPC,1135,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1203,energy efficiency,Power,PowerPC,1203,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1274,integrability,Sub,SubtargetFeatures,1274,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1352,integrability,state,statement,1352,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:548,interoperability,stub,stubs,548,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1455,interoperability,skeleton,skeleton,1455,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1157,modifiability,variab,variable,1157,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:59,security,hash,hashes,59,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:925,security,control,control,925,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:304,testability,assert,assertion,304,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:548,testability,stub,stubs,548,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:925,testability,control,control,925,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:144,usability,Support,Support,144,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:220,usability,Support,Support,220,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:629,usability,support,support,629,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:698,usability,support,support,698,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:751,usability,Support,Support,751,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1470,usability,support,support,1470,"> @bzEq can you please prepare the list of upstream commit hashes that you are backporting here? They are. ```. 18dc8dcd768f [PowerPC][JITLink] Support R_PPC64_GOT_TLSGD_PCREL34 (#68660). a712244f3b76 [PowerPC][JITLink] Support R_PPC64_GOT_PCREL34 (#68658). 1dae4dd0d80f [JITLink][PowerPC] Fix incorrect assertion of addend for R_PPC64_REL24. 94239712eb17 Fix typos in comments of ExecutionEngine (NFC). b6e2eac2930e [JITLink][PowerPC] Add relocations included in rtdyld but missing from jitlink. d6791fb77402 [JITLink][PowerPC] Fix relocations in stubs for ppc64 big-endian target. 9c38a178d3a6 [JITLink][PowerPC] Add basic TLS support for ppc64. 5cb2a78ac2fe [Orc][PowerPC] Enable ELFNixPlatform support for ppc64le. ca6d86f6bf12 [JITLink][PowerPC] Support R_PPC64_PCREL34. 11a02de7829a [JITLink][PowerPC] Change method to check if a symbol is external to current object. 7bf9c5bbb7d1 [JITLink] ppc64.h - fix MSVC ""not all control paths return a value"" warning. NFC. 995f199f0a76 [JITLink][PowerPC] Correct handling of R_PPC64_REL24_NOTOC. 74f2a76904d7 [JITLink] Rename TableManager::appendEntry, add comment. 79786c4d23f1 [JITLink][PowerPC] Fixed unused variable warning. NFC. 61358d4fbeb3 [JITLink][PowerPC] Add TOC and relocations for ppc64. 52b88457baf8 [JITLink] Use SubtargetFeatures to store features in LinkGraph. 846bde483d63 Silence switch statement contains 'default' but no 'case' labels warning; NFC. 8313507a7c3f [JITLink][ELF][ppc64] Add skeleton ppc64 support and ELF/ppc64 JITLink backend. ```. `52b88457baf8` can't be cherry-pick'ed cleanly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:79,availability,error,errors,79,"I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:79,performance,error,errors,79,"I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:79,safety,error,errors,79,"I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:79,usability,error,errors,79,"I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:81,availability,error,errors,81,"> I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors? We need to have a tag in https://github.com/root-project/llvm-project/. I will take care of this, that's why I asked for the commit hashes :wink: . In the mean time, it would be great to get CMS testing on `ppc64le`. @smuzaffar can you help with that? Now that the LLVM upgrade is merged, I guess this should be a bit easier...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:359,deployability,upgrad,upgrade,359,"> I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors? We need to have a tag in https://github.com/root-project/llvm-project/. I will take care of this, that's why I asked for the commit hashes :wink: . In the mean time, it would be great to get CMS testing on `ppc64le`. @smuzaffar can you help with that? Now that the LLVM upgrade is merged, I guess this should be a bit easier...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:359,modifiability,upgrad,upgrade,359,"> I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors? We need to have a tag in https://github.com/root-project/llvm-project/. I will take care of this, that's why I asked for the commit hashes :wink: . In the mean time, it would be great to get CMS testing on `ppc64le`. @smuzaffar can you help with that? Now that the LLVM upgrade is merged, I guess this should be a bit easier...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:81,performance,error,errors,81,"> I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors? We need to have a tag in https://github.com/root-project/llvm-project/. I will take care of this, that's why I asked for the commit hashes :wink: . In the mean time, it would be great to get CMS testing on `ppc64le`. @smuzaffar can you help with that? Now that the LLVM upgrade is merged, I guess this should be a bit easier...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:249,performance,time,time,249,"> I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors? We need to have a tag in https://github.com/root-project/llvm-project/. I will take care of this, that's why I asked for the commit hashes :wink: . In the mean time, it would be great to get CMS testing on `ppc64le`. @smuzaffar can you help with that? Now that the LLVM upgrade is merged, I guess this should be a bit easier...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:81,safety,error,errors,81,"> I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors? We need to have a tag in https://github.com/root-project/llvm-project/. I will take care of this, that's why I asked for the commit hashes :wink: . In the mean time, it would be great to get CMS testing on `ppc64le`. @smuzaffar can you help with that? Now that the LLVM upgrade is merged, I guess this should be a bit easier...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:284,safety,test,testing,284,"> I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors? We need to have a tag in https://github.com/root-project/llvm-project/. I will take care of this, that's why I asked for the commit hashes :wink: . In the mean time, it would be great to get CMS testing on `ppc64le`. @smuzaffar can you help with that? Now that the LLVM upgrade is merged, I guess this should be a bit easier...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:221,security,hash,hashes,221,"> I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors? We need to have a tag in https://github.com/root-project/llvm-project/. I will take care of this, that's why I asked for the commit hashes :wink: . In the mean time, it would be great to get CMS testing on `ppc64le`. @smuzaffar can you help with that? Now that the LLVM upgrade is merged, I guess this should be a bit easier...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:284,testability,test,testing,284,"> I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors? We need to have a tag in https://github.com/root-project/llvm-project/. I will take care of this, that's why I asked for the commit hashes :wink: . In the mean time, it would be great to get CMS testing on `ppc64le`. @smuzaffar can you help with that? Now that the LLVM upgrade is merged, I guess this should be a bit easier...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:81,usability,error,errors,81,"> I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors? We need to have a tag in https://github.com/root-project/llvm-project/. I will take care of this, that's why I asked for the commit hashes :wink: . In the mean time, it would be great to get CMS testing on `ppc64le`. @smuzaffar can you help with that? Now that the LLVM upgrade is merged, I guess this should be a bit easier...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:325,usability,help,help,325,"> I'm not familiar with root's llvm merging strategy, how to fix above llvm-diff errors? We need to have a tag in https://github.com/root-project/llvm-project/. I will take care of this, that's why I asked for the commit hashes :wink: . In the mean time, it would be great to get CMS testing on `ppc64le`. @smuzaffar can you help with that? Now that the LLVM upgrade is merged, I guess this should be a bit easier...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:150,availability,avail,available,150,"@hahnjo , I have opened https://github.com/cms-sw/root/pull/192 and will start testing it once ppc64le Integration Build (IB) based on ROOT master is available ( hopefully tomorrow morning)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:103,deployability,Integr,Integration,103,"@hahnjo , I have opened https://github.com/cms-sw/root/pull/192 and will start testing it once ppc64le Integration Build (IB) based on ROOT master is available ( hopefully tomorrow morning)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:115,deployability,Build,Build,115,"@hahnjo , I have opened https://github.com/cms-sw/root/pull/192 and will start testing it once ppc64le Integration Build (IB) based on ROOT master is available ( hopefully tomorrow morning)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:103,integrability,Integr,Integration,103,"@hahnjo , I have opened https://github.com/cms-sw/root/pull/192 and will start testing it once ppc64le Integration Build (IB) based on ROOT master is available ( hopefully tomorrow morning)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:103,interoperability,Integr,Integration,103,"@hahnjo , I have opened https://github.com/cms-sw/root/pull/192 and will start testing it once ppc64le Integration Build (IB) based on ROOT master is available ( hopefully tomorrow morning)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:103,modifiability,Integr,Integration,103,"@hahnjo , I have opened https://github.com/cms-sw/root/pull/192 and will start testing it once ppc64le Integration Build (IB) based on ROOT master is available ( hopefully tomorrow morning)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:103,reliability,Integr,Integration,103,"@hahnjo , I have opened https://github.com/cms-sw/root/pull/192 and will start testing it once ppc64le Integration Build (IB) based on ROOT master is available ( hopefully tomorrow morning)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:150,reliability,availab,available,150,"@hahnjo , I have opened https://github.com/cms-sw/root/pull/192 and will start testing it once ppc64le Integration Build (IB) based on ROOT master is available ( hopefully tomorrow morning)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:79,safety,test,testing,79,"@hahnjo , I have opened https://github.com/cms-sw/root/pull/192 and will start testing it once ppc64le Integration Build (IB) based on ROOT master is available ( hopefully tomorrow morning)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:150,safety,avail,available,150,"@hahnjo , I have opened https://github.com/cms-sw/root/pull/192 and will start testing it once ppc64le Integration Build (IB) based on ROOT master is available ( hopefully tomorrow morning)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:103,security,Integr,Integration,103,"@hahnjo , I have opened https://github.com/cms-sw/root/pull/192 and will start testing it once ppc64le Integration Build (IB) based on ROOT master is available ( hopefully tomorrow morning)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:150,security,availab,available,150,"@hahnjo , I have opened https://github.com/cms-sw/root/pull/192 and will start testing it once ppc64le Integration Build (IB) based on ROOT master is available ( hopefully tomorrow morning)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:79,testability,test,testing,79,"@hahnjo , I have opened https://github.com/cms-sw/root/pull/192 and will start testing it once ppc64le Integration Build (IB) based on ROOT master is available ( hopefully tomorrow morning)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:103,testability,Integr,Integration,103,"@hahnjo , I have opened https://github.com/cms-sw/root/pull/192 and will start testing it once ppc64le Integration Build (IB) based on ROOT master is available ( hopefully tomorrow morning)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:59,energy efficiency,power,powerpc,59,cms tests passed for production arch (el8_amd64_gcc12) and powerpc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:4,safety,test,tests,4,cms tests passed for production arch (el8_amd64_gcc12) and powerpc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:4,testability,test,tests,4,cms tests passed for production arch (el8_amd64_gcc12) and powerpc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:61,energy efficiency,power,powerpc,61,> cms tests passed for production arch (el8_amd64_gcc12) and powerpc. Thanks! And I understand correctly it solves some problems that were there on ppc64le before?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:6,safety,test,tests,6,> cms tests passed for production arch (el8_amd64_gcc12) and powerpc. Thanks! And I understand correctly it solves some problems that were there on ppc64le before?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:6,testability,test,tests,6,> cms tests passed for production arch (el8_amd64_gcc12) and powerpc. Thanks! And I understand correctly it solves some problems that were there on ppc64le before?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:84,testability,understand,understand,84,> cms tests passed for production arch (el8_amd64_gcc12) and powerpc. Thanks! And I understand correctly it solves some problems that were there on ppc64le before?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:432,availability,error,errors,432,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:583,deployability,fail,failed,583,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:628,deployability,patch,patches,628,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:63,energy efficiency,power,powerpc,63,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:432,performance,error,errors,432,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:583,reliability,fail,failed,583,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:8,safety,test,tests,8,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:327,safety,test,test,327,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:369,safety,test,test,369,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:432,safety,error,errors,432,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:628,safety,patch,patches,628,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:654,safety,test,test,654,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:628,security,patch,patches,628,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:8,testability,test,tests,8,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:92,testability,understand,understand,92,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:327,testability,test,test,327,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:369,testability,test,test,369,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:654,testability,test,test,654,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:432,usability,error,errors,432,"> > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > . > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? @hahnjo , most of ppc64le issues (e.g. https://github.com/cms-sw/cmssw/issues/41658) were already fixed when we moved to ROOT 6.30 ( LLVM 13). In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:701,availability,error,errors,701,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:384,deployability,infrastructur,infrastructure,384,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:852,deployability,fail,failed,852,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:897,deployability,patch,patches,897,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1034,deployability,upgrad,upgrade,1034,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:65,energy efficiency,power,powerpc,65,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1034,modifiability,upgrad,upgrade,1034,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:701,performance,error,errors,701,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:506,reliability,doe,does,506,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:852,reliability,fail,failed,852,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:10,safety,test,tests,10,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:596,safety,test,test,596,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:638,safety,test,test,638,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:701,safety,error,errors,701,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:897,safety,patch,patches,897,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:923,safety,test,test,923,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:897,security,patch,patches,897,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:10,testability,test,tests,10,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:98,testability,understand,understand,98,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:596,testability,test,test,596,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:638,testability,test,test,638,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:923,testability,test,test,923,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:701,usability,error,errors,701,"> > > cms tests passed for production arch (el8_amd64_gcc12) and powerpc. > > . > > Thanks! And I understand correctly it solves some problems that were there on ppc64le before? > . > @hahnjo , most of ppc64le issues (e.g. [cms-sw/cmssw#41658](https://github.com/cms-sw/cmssw/issues/41658)) were already fixed when we moved to ROOT 6.30 ( LLVM 13). Ah ok, so it wasn't the JIT linker infrastructure after all. That's good to hear, I hope things are still equally fine in `ROOT6` now with LLVM 16. But then does this JITLink backport actually still solve some issues on top of that? > In order to test this jitlink ppc64 change we need to test it for ROOT 6.26 e.g. CMSSW_13_3_X IBs where we still get errors (https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/relVal/CMSSW_13_3/2023-12-19-2300?selectedArchs=el8_ppc64le_gcc12&selectedFlavors=X&selectedStatus=failed ). If you can open a PR for root 6.26 patches branch then I can test it. ROOT 6.26 had LLVM 9, it would be very hard to backport these JITLink changes there. And also, if the upgrade to LLVM 13 already solved most issues, it seems questionable to me that it would improve anything, or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:43,deployability,upgrad,upgrade,43,The dust is mostly settled from the llvm16 upgrade. This PR becomes important for cmssw and we should probably include it in the next release. Let's move forward here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:134,deployability,releas,release,134,The dust is mostly settled from the llvm16 upgrade. This PR becomes important for cmssw and we should probably include it in the next release. Let's move forward here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:43,modifiability,upgrad,upgrade,43,The dust is mostly settled from the llvm16 upgrade. This PR becomes important for cmssw and we should probably include it in the next release. Let's move forward here.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:45,deployability,upgrad,upgrade,45,"> The dust is mostly settled from the llvm16 upgrade. This PR becomes important for cmssw and we should probably include it in the next release. Let's move forward here. To be fair, what I heard from CMS is that most things already work with ROOT 6.30... But yes, we need to synchronize the commits into https://github.com/root-project/llvm-project/; that's on me, I was hoping that I can replace three patches by proper backports before though...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:136,deployability,releas,release,136,"> The dust is mostly settled from the llvm16 upgrade. This PR becomes important for cmssw and we should probably include it in the next release. Let's move forward here. To be fair, what I heard from CMS is that most things already work with ROOT 6.30... But yes, we need to synchronize the commits into https://github.com/root-project/llvm-project/; that's on me, I was hoping that I can replace three patches by proper backports before though...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:403,deployability,patch,patches,403,"> The dust is mostly settled from the llvm16 upgrade. This PR becomes important for cmssw and we should probably include it in the next release. Let's move forward here. To be fair, what I heard from CMS is that most things already work with ROOT 6.30... But yes, we need to synchronize the commits into https://github.com/root-project/llvm-project/; that's on me, I was hoping that I can replace three patches by proper backports before though...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:45,modifiability,upgrad,upgrade,45,"> The dust is mostly settled from the llvm16 upgrade. This PR becomes important for cmssw and we should probably include it in the next release. Let's move forward here. To be fair, what I heard from CMS is that most things already work with ROOT 6.30... But yes, we need to synchronize the commits into https://github.com/root-project/llvm-project/; that's on me, I was hoping that I can replace three patches by proper backports before though...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:275,performance,synch,synchronize,275,"> The dust is mostly settled from the llvm16 upgrade. This PR becomes important for cmssw and we should probably include it in the next release. Let's move forward here. To be fair, what I heard from CMS is that most things already work with ROOT 6.30... But yes, we need to synchronize the commits into https://github.com/root-project/llvm-project/; that's on me, I was hoping that I can replace three patches by proper backports before though...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:403,safety,patch,patches,403,"> The dust is mostly settled from the llvm16 upgrade. This PR becomes important for cmssw and we should probably include it in the next release. Let's move forward here. To be fair, what I heard from CMS is that most things already work with ROOT 6.30... But yes, we need to synchronize the commits into https://github.com/root-project/llvm-project/; that's on me, I was hoping that I can replace three patches by proper backports before though...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:403,security,patch,patches,403,"> The dust is mostly settled from the llvm16 upgrade. This PR becomes important for cmssw and we should probably include it in the next release. Let's move forward here. To be fair, what I heard from CMS is that most things already work with ROOT 6.30... But yes, we need to synchronize the commits into https://github.com/root-project/llvm-project/; that's on me, I was hoping that I can replace three patches by proper backports before though...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:120,availability,failur,failures,120,"To be honest, my interpretation of https://github.com/root-project/root/pull/13850#issuecomment-1867519153 is that most failures are solved by the upgrade to ROOT 6.30 / LLVM 13. We will not be backporting to ROOT 6.26 / LLVM 9 and I haven't see confirmation that this fixes anything on top of LLVM 13 or LLVM 16, so it's not on the top of my priority list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:120,deployability,fail,failures,120,"To be honest, my interpretation of https://github.com/root-project/root/pull/13850#issuecomment-1867519153 is that most failures are solved by the upgrade to ROOT 6.30 / LLVM 13. We will not be backporting to ROOT 6.26 / LLVM 9 and I haven't see confirmation that this fixes anything on top of LLVM 13 or LLVM 16, so it's not on the top of my priority list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:147,deployability,upgrad,upgrade,147,"To be honest, my interpretation of https://github.com/root-project/root/pull/13850#issuecomment-1867519153 is that most failures are solved by the upgrade to ROOT 6.30 / LLVM 13. We will not be backporting to ROOT 6.26 / LLVM 9 and I haven't see confirmation that this fixes anything on top of LLVM 13 or LLVM 16, so it's not on the top of my priority list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:147,modifiability,upgrad,upgrade,147,"To be honest, my interpretation of https://github.com/root-project/root/pull/13850#issuecomment-1867519153 is that most failures are solved by the upgrade to ROOT 6.30 / LLVM 13. We will not be backporting to ROOT 6.26 / LLVM 9 and I haven't see confirmation that this fixes anything on top of LLVM 13 or LLVM 16, so it's not on the top of my priority list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:120,performance,failur,failures,120,"To be honest, my interpretation of https://github.com/root-project/root/pull/13850#issuecomment-1867519153 is that most failures are solved by the upgrade to ROOT 6.30 / LLVM 13. We will not be backporting to ROOT 6.26 / LLVM 9 and I haven't see confirmation that this fixes anything on top of LLVM 13 or LLVM 16, so it's not on the top of my priority list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:120,reliability,fail,failures,120,"To be honest, my interpretation of https://github.com/root-project/root/pull/13850#issuecomment-1867519153 is that most failures are solved by the upgrade to ROOT 6.30 / LLVM 13. We will not be backporting to ROOT 6.26 / LLVM 9 and I haven't see confirmation that this fixes anything on top of LLVM 13 or LLVM 16, so it's not on the top of my priority list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:246,usability,confirm,confirmation,246,"To be honest, my interpretation of https://github.com/root-project/root/pull/13850#issuecomment-1867519153 is that most failures are solved by the upgrade to ROOT 6.30 / LLVM 13. We will not be backporting to ROOT 6.26 / LLVM 9 and I haven't see confirmation that this fixes anything on top of LLVM 13 or LLVM 16, so it's not on the top of my priority list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:134,availability,mainten,maintenance,134,I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:42,energy efficiency,current,current,42,I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:120,reliability,stabil,stability,120,I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:134,reliability,mainten,maintenance,134,I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:143,deployability,updat,update,143,"@hahnjo, @smuzaffar let me know if you have any objections in moving forward here. @hahnjo, can you give us a link to what we should follow to update the llvm monorepo with these changes to make the `Diff LLVM and Clang against fork of monorepo` happy?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:143,safety,updat,update,143,"@hahnjo, @smuzaffar let me know if you have any objections in moving forward here. @hahnjo, can you give us a link to what we should follow to update the llvm monorepo with these changes to make the `Diff LLVM and Clang against fork of monorepo` happy?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:143,security,updat,update,143,"@hahnjo, @smuzaffar let me know if you have any objections in moving forward here. @hahnjo, can you give us a link to what we should follow to update the llvm monorepo with these changes to make the `Diff LLVM and Clang against fork of monorepo` happy?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:136,availability,mainten,maintenance,136,"> I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:916,deployability,upgrad,upgrade,916,"> I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:44,energy efficiency,current,current,44,"> I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:436,energy efficiency,current,current,436,"> I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:758,energy efficiency,current,currently,758,"> I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:647,interoperability,architectur,architecture,647,"> I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:842,interoperability,platform,platforms,842,"> I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:916,modifiability,upgrad,upgrade,916,"> I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:122,reliability,stabil,stability,122,"> I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:136,reliability,mainten,maintenance,136,"> I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:444,testability,understand,understanding,444,"> I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:859,testability,understand,understanding,859,"> I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:482,usability,stop,stop,482,"> I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:832,usability,support,supported,832,"> I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:238,availability,error,error,238,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:621,availability,failur,failures,621,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:53,deployability,releas,release,53,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:112,deployability,releas,releases,112,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:132,deployability,releas,release,132,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:165,deployability,releas,release,165,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:225,deployability,fail,failing,225,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:581,deployability,patch,patches,581,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:621,deployability,fail,failures,621,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:640,deployability,releas,releases,640,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:811,deployability,build,buildlogs,811,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:949,deployability,log,log,949,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:2289,energy efficiency,alloc,allocator,2289,"() from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #19 0x000010080b993b08 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #20 0x000010080b8897bc in ExecAutoParse(char const*, bool, cling::Interpreter*) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #21 0x000010080b89a058 in TCling::AutoParseImplRecurse(char const*, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #22 0x000010080b89fda4 in TCling::AutoParse(char const*) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #23 0x000010080b86e918 in TClingLookupHelper__AutoParse(char const*) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/ext",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:3504,energy efficiency,alloc,allocator,3504,"mfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #19 0x000010080b993b08 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #20 0x000010080b8897bc in ExecAutoParse(char const*, bool, cling::Interpreter*) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #21 0x000010080b89a058 in TCling::AutoParseImplRecurse(char const*, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #22 0x000010080b89fda4 in TCling::AutoParse(char const*) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #23 0x000010080b86e918 in TClingLookupHelper__AutoParse(char const*) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #24 0x000010080b7ac95c in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:3592,energy efficiency,alloc,allocator,3592,"mfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #19 0x000010080b993b08 in cling::Interpreter::parseForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #20 0x000010080b8897bc in ExecAutoParse(char const*, bool, cling::Interpreter*) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #21 0x000010080b89a058 in TCling::AutoParseImplRecurse(char const*, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #22 0x000010080b89fda4 in TCling::AutoParse(char const*) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #23 0x000010080b86e918 in TClingLookupHelper__AutoParse(char const*) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #24 0x000010080b7ac95c in ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:238,performance,error,error,238,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:621,performance,failur,failures,621,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:225,reliability,fail,failing,225,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:621,reliability,fail,failures,621,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:238,safety,error,error,238,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:581,safety,patch,patches,581,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:949,safety,log,log,949,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:581,security,patch,patches,581,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:949,security,log,log,949,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:949,testability,log,log,949,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:238,usability,error,error,238,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases. For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]. - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216). - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log. ```. #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so. #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:55,safety,test,test,55,if it is easy to backport this to root 6.26 then I can test it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:55,testability,test,test,55,if it is easy to backport this to root 6.26 then I can test it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:57,safety,test,test,57,"> if it is easy to backport this to root 6.26 then I can test it. Hi @smuzaffar, we will not be backporting to ROOT 6.26 which is based on LLVM 9.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:57,testability,test,test,57,"> if it is easy to backport this to root 6.26 then I can test it. Hi @smuzaffar, we will not be backporting to ROOT 6.26 which is based on LLVM 9.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:57,safety,test,test,57,> if it is easy to backport this to root 6.26 then I can test it. How difficult is to move to 6.30?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:57,testability,test,test,57,> if it is easy to backport this to root 6.26 then I can test it. How difficult is to move to 6.30?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:138,availability,mainten,maintenance,138,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:585,deployability,observ,observe,585,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1248,deployability,upgrad,upgrade,1248,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1383,deployability,upgrad,upgrade,1383,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:46,energy efficiency,current,current,46,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:444,energy efficiency,current,current,444,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1090,energy efficiency,current,currently,1090,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:979,interoperability,architectur,architecture,979,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1174,interoperability,platform,platforms,1174,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:767,modifiability,maintain,maintain,767,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1248,modifiability,upgrad,upgrade,1248,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1383,modifiability,upgrad,upgrade,1383,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:124,reliability,stabil,stability,124,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:138,reliability,mainten,maintenance,138,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:624,reliability,doe,does,624,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:767,safety,maintain,maintain,767,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:452,testability,understand,understanding,452,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:585,testability,observ,observe,585,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1191,testability,understand,understanding,1191,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1404,testability,plan,planned,1404,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:490,usability,stop,stop,490,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:705,usability,support,support,705,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:1164,usability,support,supported,1164,"> > I'd like to move forward with this in the current master as soon as possible. This is a general improvement in terms of stability and maintenance and we probably should not wait until bugs start showing up to justify getting this in. Is there anything else that's required before merging it? > . > Okay, that's a totally different motivation. The previous argument was that this is ""changing the world"" for CMS, which is not the case in my current understanding and we should therefore stop claiming. This is still changing the world for CMSSW in long run. The fact that we do not observe bugs for unclear to me reasons does not change that fact. JitLink allows debugging jit'd code along with native support for ppc. Last 10 years RuntimeDyld was a nightmare to maintain and work with. Now that's gone for good. > . > > @hahnjo, @smuzaffar let me know if you have any objections in moving forward here. > . > I have mixed feelings about backporting that many commits for an architecture where we don't have immediate bug reports at the moment that would be solved by the changes. ROOT currently relies on LLVM 16 and that has a certain number of features and supported platforms; in my understanding these changes come in anyway with the next upgrade, right? That's correct, since there are multiple entities and workplans included here, there is no reason to wait for the next upgrade which is not planned yet. That leaves out the option to ask for additional bugfixes/features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:134,deployability,releas,releases,134,> > if it is easy to backport this to root 6.26 then I can test it. > . > How difficult is to move to 6.30? change root in production releases is not an easy task. We need to redo the physics validation which we do not recommend for production cmssw releases.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:250,deployability,releas,releases,250,> > if it is easy to backport this to root 6.26 then I can test it. > . > How difficult is to move to 6.30? change root in production releases is not an easy task. We need to redo the physics validation which we do not recommend for production cmssw releases.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:59,safety,test,test,59,> > if it is easy to backport this to root 6.26 then I can test it. > . > How difficult is to move to 6.30? change root in production releases is not an easy task. We need to redo the physics validation which we do not recommend for production cmssw releases.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:192,safety,valid,validation,192,> > if it is easy to backport this to root 6.26 then I can test it. > . > How difficult is to move to 6.30? change root in production releases is not an easy task. We need to redo the physics validation which we do not recommend for production cmssw releases.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:192,security,validat,validation,192,> > if it is easy to backport this to root 6.26 then I can test it. > . > How difficult is to move to 6.30? change root in production releases is not an easy task. We need to redo the physics validation which we do not recommend for production cmssw releases.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:59,testability,test,test,59,> > if it is easy to backport this to root 6.26 then I can test it. > . > How difficult is to move to 6.30? change root in production releases is not an easy task. We need to redo the physics validation which we do not recommend for production cmssw releases.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:89,integrability,event,eventual,89,@smuzaffar whats the expected lifetime for 6.26 in cmssw? Is it worth trying to backport eventual fixes for ppc in runtimedyld or entertain the idea of porting back the jitlink backend to llvm9? @bzEq do you have an idea if there were ppc related fixes in RuntimeDyld between llvm9 and llvm16? If so maybe backporting them can help. If not I can talk with the jitlink maintainers if it is even feasible to backport jitlink ppc to llvm9,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:368,modifiability,maintain,maintainers,368,@smuzaffar whats the expected lifetime for 6.26 in cmssw? Is it worth trying to backport eventual fixes for ppc in runtimedyld or entertain the idea of porting back the jitlink backend to llvm9? @bzEq do you have an idea if there were ppc related fixes in RuntimeDyld between llvm9 and llvm16? If so maybe backporting them can help. If not I can talk with the jitlink maintainers if it is even feasible to backport jitlink ppc to llvm9,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:368,safety,maintain,maintainers,368,@smuzaffar whats the expected lifetime for 6.26 in cmssw? Is it worth trying to backport eventual fixes for ppc in runtimedyld or entertain the idea of porting back the jitlink backend to llvm9? @bzEq do you have an idea if there were ppc related fixes in RuntimeDyld between llvm9 and llvm16? If so maybe backporting them can help. If not I can talk with the jitlink maintainers if it is even feasible to backport jitlink ppc to llvm9,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:327,usability,help,help,327,@smuzaffar whats the expected lifetime for 6.26 in cmssw? Is it worth trying to backport eventual fixes for ppc in runtimedyld or entertain the idea of porting back the jitlink backend to llvm9? @bzEq do you have an idea if there were ppc related fixes in RuntimeDyld between llvm9 and llvm16? If so maybe backporting them can help. If not I can talk with the jitlink maintainers if it is even feasible to backport jitlink ppc to llvm9,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:212,deployability,releas,releases,212,"> @smuzaffar whats the expected lifetime for 6.26 in cmssw? Is it worth trying to backport eventual fixes for ppc in runtimedyld or entertain the idea of porting back the jitlink backend to llvm9? looking at the releases where we use root 6.26 [a] and ppc64le has issues, lifetime could be indefinite ( specially if these are used for analysis). As user mostly use `x86_64` for analysis, so I think we can survive without backporting this to 6.26. [a]. ```. Cycle [CMSSW_13_3_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_3_0) General Software updates aiming for 2024. Nano v13 and possibly Mini v4. Last release to include major changes from Simulation. Cycle [CMSSW_13_2_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_2_0) Release for HI data taking in 2023. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:551,deployability,updat,updates,551,"> @smuzaffar whats the expected lifetime for 6.26 in cmssw? Is it worth trying to backport eventual fixes for ppc in runtimedyld or entertain the idea of porting back the jitlink backend to llvm9? looking at the releases where we use root 6.26 [a] and ppc64le has issues, lifetime could be indefinite ( specially if these are used for analysis). As user mostly use `x86_64` for analysis, so I think we can survive without backporting this to 6.26. [a]. ```. Cycle [CMSSW_13_3_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_3_0) General Software updates aiming for 2024. Nano v13 and possibly Mini v4. Last release to include major changes from Simulation. Cycle [CMSSW_13_2_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_2_0) Release for HI data taking in 2023. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:612,deployability,releas,release,612,"> @smuzaffar whats the expected lifetime for 6.26 in cmssw? Is it worth trying to backport eventual fixes for ppc in runtimedyld or entertain the idea of porting back the jitlink backend to llvm9? looking at the releases where we use root 6.26 [a] and ppc64le has issues, lifetime could be indefinite ( specially if these are used for analysis). As user mostly use `x86_64` for analysis, so I think we can survive without backporting this to 6.26. [a]. ```. Cycle [CMSSW_13_3_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_3_0) General Software updates aiming for 2024. Nano v13 and possibly Mini v4. Last release to include major changes from Simulation. Cycle [CMSSW_13_2_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_2_0) Release for HI data taking in 2023. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:738,deployability,Releas,Release,738,"> @smuzaffar whats the expected lifetime for 6.26 in cmssw? Is it worth trying to backport eventual fixes for ppc in runtimedyld or entertain the idea of porting back the jitlink backend to llvm9? looking at the releases where we use root 6.26 [a] and ppc64le has issues, lifetime could be indefinite ( specially if these are used for analysis). As user mostly use `x86_64` for analysis, so I think we can survive without backporting this to 6.26. [a]. ```. Cycle [CMSSW_13_3_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_3_0) General Software updates aiming for 2024. Nano v13 and possibly Mini v4. Last release to include major changes from Simulation. Cycle [CMSSW_13_2_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_2_0) Release for HI data taking in 2023. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:91,integrability,event,eventual,91,"> @smuzaffar whats the expected lifetime for 6.26 in cmssw? Is it worth trying to backport eventual fixes for ppc in runtimedyld or entertain the idea of porting back the jitlink backend to llvm9? looking at the releases where we use root 6.26 [a] and ppc64le has issues, lifetime could be indefinite ( specially if these are used for analysis). As user mostly use `x86_64` for analysis, so I think we can survive without backporting this to 6.26. [a]. ```. Cycle [CMSSW_13_3_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_3_0) General Software updates aiming for 2024. Nano v13 and possibly Mini v4. Last release to include major changes from Simulation. Cycle [CMSSW_13_2_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_2_0) Release for HI data taking in 2023. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:551,safety,updat,updates,551,"> @smuzaffar whats the expected lifetime for 6.26 in cmssw? Is it worth trying to backport eventual fixes for ppc in runtimedyld or entertain the idea of porting back the jitlink backend to llvm9? looking at the releases where we use root 6.26 [a] and ppc64le has issues, lifetime could be indefinite ( specially if these are used for analysis). As user mostly use `x86_64` for analysis, so I think we can survive without backporting this to 6.26. [a]. ```. Cycle [CMSSW_13_3_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_3_0) General Software updates aiming for 2024. Nano v13 and possibly Mini v4. Last release to include major changes from Simulation. Cycle [CMSSW_13_2_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_2_0) Release for HI data taking in 2023. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:551,security,updat,updates,551,"> @smuzaffar whats the expected lifetime for 6.26 in cmssw? Is it worth trying to backport eventual fixes for ppc in runtimedyld or entertain the idea of porting back the jitlink backend to llvm9? looking at the releases where we use root 6.26 [a] and ppc64le has issues, lifetime could be indefinite ( specially if these are used for analysis). As user mostly use `x86_64` for analysis, so I think we can survive without backporting this to 6.26. [a]. ```. Cycle [CMSSW_13_3_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_3_0) General Software updates aiming for 2024. Nano v13 and possibly Mini v4. Last release to include major changes from Simulation. Cycle [CMSSW_13_2_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_2_0) Release for HI data taking in 2023. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:650,testability,Simul,Simulation,650,"> @smuzaffar whats the expected lifetime for 6.26 in cmssw? Is it worth trying to backport eventual fixes for ppc in runtimedyld or entertain the idea of porting back the jitlink backend to llvm9? looking at the releases where we use root 6.26 [a] and ppc64le has issues, lifetime could be indefinite ( specially if these are used for analysis). As user mostly use `x86_64` for analysis, so I think we can survive without backporting this to 6.26. [a]. ```. Cycle [CMSSW_13_3_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_3_0) General Software updates aiming for 2024. Nano v13 and possibly Mini v4. Last release to include major changes from Simulation. Cycle [CMSSW_13_2_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_2_0) Release for HI data taking in 2023. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/pull/13850:349,usability,user,user,349,"> @smuzaffar whats the expected lifetime for 6.26 in cmssw? Is it worth trying to backport eventual fixes for ppc in runtimedyld or entertain the idea of porting back the jitlink backend to llvm9? looking at the releases where we use root 6.26 [a] and ppc64le has issues, lifetime could be indefinite ( specially if these are used for analysis). As user mostly use `x86_64` for analysis, so I think we can survive without backporting this to 6.26. [a]. ```. Cycle [CMSSW_13_3_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_3_0) General Software updates aiming for 2024. Nano v13 and possibly Mini v4. Last release to include major changes from Simulation. Cycle [CMSSW_13_2_0](https://twiki.cern.ch/twiki/bin/view/CMS/CMSSW_13_2_0) Release for HI data taking in 2023. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13850
https://github.com/root-project/root/issues/13852:32,availability,sli,slice,32,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. . Just run this simple code: . ```. auto f = TFile::Open(""histo.root"", ""READ"");. auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);. auto h21 = hist->ProjectionY(""h21"",21,21);. auto c1 = new TCanvas();. c1->Divide(1,2);. c1->cd(1);. h20->Fit(""gaus"");. c1->cd(2);. // second fit fails . h21->Fit(""gaus"");. ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. . You will get better slice fits if using option `L` when fitting the slices:. ```. hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");. ```. and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:39,availability,sli,slice,39,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. . Just run this simple code: . ```. auto f = TFile::Open(""histo.root"", ""READ"");. auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);. auto h21 = hist->ProjectionY(""h21"",21,21);. auto c1 = new TCanvas();. c1->Divide(1,2);. c1->cd(1);. h20->Fit(""gaus"");. c1->cd(2);. // second fit fails . h21->Fit(""gaus"");. ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. . You will get better slice fits if using option `L` when fitting the slices:. ```. hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");. ```. and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:585,availability,sli,slice,585,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. . Just run this simple code: . ```. auto f = TFile::Open(""histo.root"", ""READ"");. auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);. auto h21 = hist->ProjectionY(""h21"",21,21);. auto c1 = new TCanvas();. c1->Divide(1,2);. c1->cd(1);. h20->Fit(""gaus"");. c1->cd(2);. // second fit fails . h21->Fit(""gaus"");. ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. . You will get better slice fits if using option `L` when fitting the slices:. ```. hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");. ```. and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:633,availability,sli,slices,633,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. . Just run this simple code: . ```. auto f = TFile::Open(""histo.root"", ""READ"");. auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);. auto h21 = hist->ProjectionY(""h21"",21,21);. auto c1 = new TCanvas();. c1->Divide(1,2);. c1->cd(1);. h20->Fit(""gaus"");. c1->cd(2);. // second fit fails . h21->Fit(""gaus"");. ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. . You will get better slice fits if using option `L` when fitting the slices:. ```. hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");. ```. and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:430,deployability,fail,fails,430,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. . Just run this simple code: . ```. auto f = TFile::Open(""histo.root"", ""READ"");. auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);. auto h21 = hist->ProjectionY(""h21"",21,21);. auto c1 = new TCanvas();. c1->Divide(1,2);. c1->cd(1);. h20->Fit(""gaus"");. c1->cd(2);. // second fit fails . h21->Fit(""gaus"");. ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. . You will get better slice fits if using option `L` when fitting the slices:. ```. hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");. ```. and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:783,integrability,event,events,783,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. . Just run this simple code: . ```. auto f = TFile::Open(""histo.root"", ""READ"");. auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);. auto h21 = hist->ProjectionY(""h21"",21,21);. auto c1 = new TCanvas();. c1->Divide(1,2);. c1->cd(1);. h20->Fit(""gaus"");. c1->cd(2);. // second fit fails . h21->Fit(""gaus"");. ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. . You will get better slice fits if using option `L` when fitting the slices:. ```. hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");. ```. and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:32,reliability,sli,slice,32,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. . Just run this simple code: . ```. auto f = TFile::Open(""histo.root"", ""READ"");. auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);. auto h21 = hist->ProjectionY(""h21"",21,21);. auto c1 = new TCanvas();. c1->Divide(1,2);. c1->cd(1);. h20->Fit(""gaus"");. c1->cd(2);. // second fit fails . h21->Fit(""gaus"");. ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. . You will get better slice fits if using option `L` when fitting the slices:. ```. hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");. ```. and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:39,reliability,sli,slice,39,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. . Just run this simple code: . ```. auto f = TFile::Open(""histo.root"", ""READ"");. auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);. auto h21 = hist->ProjectionY(""h21"",21,21);. auto c1 = new TCanvas();. c1->Divide(1,2);. c1->cd(1);. h20->Fit(""gaus"");. c1->cd(2);. // second fit fails . h21->Fit(""gaus"");. ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. . You will get better slice fits if using option `L` when fitting the slices:. ```. hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");. ```. and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:430,reliability,fail,fails,430,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. . Just run this simple code: . ```. auto f = TFile::Open(""histo.root"", ""READ"");. auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);. auto h21 = hist->ProjectionY(""h21"",21,21);. auto c1 = new TCanvas();. c1->Divide(1,2);. c1->cd(1);. h20->Fit(""gaus"");. c1->cd(2);. // second fit fails . h21->Fit(""gaus"");. ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. . You will get better slice fits if using option `L` when fitting the slices:. ```. hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");. ```. and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:585,reliability,sli,slice,585,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. . Just run this simple code: . ```. auto f = TFile::Open(""histo.root"", ""READ"");. auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);. auto h21 = hist->ProjectionY(""h21"",21,21);. auto c1 = new TCanvas();. c1->Divide(1,2);. c1->cd(1);. h20->Fit(""gaus"");. c1->cd(2);. // second fit fails . h21->Fit(""gaus"");. ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. . You will get better slice fits if using option `L` when fitting the slices:. ```. hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");. ```. and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:633,reliability,sli,slices,633,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. . Just run this simple code: . ```. auto f = TFile::Open(""histo.root"", ""READ"");. auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);. auto h21 = hist->ProjectionY(""h21"",21,21);. auto c1 = new TCanvas();. c1->Divide(1,2);. c1->cd(1);. h20->Fit(""gaus"");. c1->cd(2);. // second fit fails . h21->Fit(""gaus"");. ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. . You will get better slice fits if using option `L` when fitting the slices:. ```. hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");. ```. and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:757,safety,avoid,avoid,757,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. . Just run this simple code: . ```. auto f = TFile::Open(""histo.root"", ""READ"");. auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);. auto h21 = hist->ProjectionY(""h21"",21,21);. auto c1 = new TCanvas();. c1->Divide(1,2);. c1->cd(1);. h20->Fit(""gaus"");. c1->cd(2);. // second fit fails . h21->Fit(""gaus"");. ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. . You will get better slice fits if using option `L` when fitting the slices:. ```. hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");. ```. and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:133,testability,simpl,simple,133,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. . Just run this simple code: . ```. auto f = TFile::Open(""histo.root"", ""READ"");. auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);. auto h21 = hist->ProjectionY(""h21"",21,21);. auto c1 = new TCanvas();. c1->Divide(1,2);. c1->cd(1);. h20->Fit(""gaus"");. c1->cd(2);. // second fit fails . h21->Fit(""gaus"");. ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. . You will get better slice fits if using option `L` when fitting the slices:. ```. hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");. ```. and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:133,usability,simpl,simple,133,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. . Just run this simple code: . ```. auto f = TFile::Open(""histo.root"", ""READ"");. auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);. auto h21 = hist->ProjectionY(""h21"",21,21);. auto c1 = new TCanvas();. c1->Divide(1,2);. c1->cd(1);. h20->Fit(""gaus"");. c1->cd(2);. // second fit fails . h21->Fit(""gaus"");. ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. . You will get better slice fits if using option `L` when fitting the slices:. ```. hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");. ```. and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/issues/13852:791,usability,Close,Close,791,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. . Just run this simple code: . ```. auto f = TFile::Open(""histo.root"", ""READ"");. auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);. auto h21 = hist->ProjectionY(""h21"",21,21);. auto c1 = new TCanvas();. c1->Divide(1,2);. c1->cd(1);. h20->Fit(""gaus"");. c1->cd(2);. // second fit fails . h21->Fit(""gaus"");. ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. . You will get better slice fits if using option `L` when fitting the slices:. ```. hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");. ```. and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13852
https://github.com/root-project/root/pull/13853:352,interoperability,platform,platforms,352,"> LGTM! I agree much better to use `Taxis::FindBin`. You might want to use the const function `FindFixBin`, which does not modify the axis in the special case when the axis is extendable. Thank you very much for this suggestion! I followed it. > For curiosity, why was crashing before in the nightly? I don't know, and since it only happened on 32-bit platforms I didn't think it was worth it to investigate this further",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13853
https://github.com/root-project/root/pull/13853:176,modifiability,exten,extendable,176,"> LGTM! I agree much better to use `Taxis::FindBin`. You might want to use the const function `FindFixBin`, which does not modify the axis in the special case when the axis is extendable. Thank you very much for this suggestion! I followed it. > For curiosity, why was crashing before in the nightly? I don't know, and since it only happened on 32-bit platforms I didn't think it was worth it to investigate this further",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13853
https://github.com/root-project/root/pull/13853:114,reliability,doe,does,114,"> LGTM! I agree much better to use `Taxis::FindBin`. You might want to use the const function `FindFixBin`, which does not modify the axis in the special case when the axis is extendable. Thank you very much for this suggestion! I followed it. > For curiosity, why was crashing before in the nightly? I don't know, and since it only happened on 32-bit platforms I didn't think it was worth it to investigate this further",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13853
https://github.com/root-project/root/pull/13853:123,security,modif,modify,123,"> LGTM! I agree much better to use `Taxis::FindBin`. You might want to use the const function `FindFixBin`, which does not modify the axis in the special case when the axis is extendable. Thank you very much for this suggestion! I followed it. > For curiosity, why was crashing before in the nightly? I don't know, and since it only happened on 32-bit platforms I didn't think it was worth it to investigate this further",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13853
https://github.com/root-project/root/pull/13856:271,availability,error,error,271,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:325,availability,servic,services,325,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:159,deployability,modul,modules,159,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:228,deployability,build,build,228,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:325,deployability,servic,services,325,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:377,deployability,build,build,377,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:325,integrability,servic,services,325,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:159,modifiability,modul,modules,159,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:325,modifiability,servic,services,325,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:271,performance,error,error,271,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:159,safety,modul,modules,159,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:271,safety,error,error,271,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:390,safety,test,testReport,390,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:428,safety,test,test,428,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:390,testability,test,testReport,390,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:428,testability,test,test,428,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:271,usability,error,error,271,"> Do you mean 6.30 or 6.32? 6.30. I hope we can still make it :-) @bellenot might you be able to fix this while I'm gone? We can remove the actual code of the modules in a second, unrelated step - what's needed now is the CMake build option part. I.e. what's left is the error in [pyunittests_dataframe_cache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/187156/testReport/projectroot.tree.dataframe/test/pyunittests_dataframe_cache/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:96,deployability,updat,update,96,I tried the solution proposed by @bellenot . It works very well also on macos (even if I had to update cmake from version 3.26 to version 3.27 to reproduce the problem it was solving). I am in favour of merging his changes. I can provide a subsequent PR cleaning the dataframe tests (and also other places) from legacy pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:114,deployability,version,version,114,I tried the solution proposed by @bellenot . It works very well also on macos (even if I had to update cmake from version 3.26 to version 3.27 to reproduce the problem it was solving). I am in favour of merging his changes. I can provide a subsequent PR cleaning the dataframe tests (and also other places) from legacy pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:130,deployability,version,version,130,I tried the solution proposed by @bellenot . It works very well also on macos (even if I had to update cmake from version 3.26 to version 3.27 to reproduce the problem it was solving). I am in favour of merging his changes. I can provide a subsequent PR cleaning the dataframe tests (and also other places) from legacy pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:114,integrability,version,version,114,I tried the solution proposed by @bellenot . It works very well also on macos (even if I had to update cmake from version 3.26 to version 3.27 to reproduce the problem it was solving). I am in favour of merging his changes. I can provide a subsequent PR cleaning the dataframe tests (and also other places) from legacy pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:130,integrability,version,version,130,I tried the solution proposed by @bellenot . It works very well also on macos (even if I had to update cmake from version 3.26 to version 3.27 to reproduce the problem it was solving). I am in favour of merging his changes. I can provide a subsequent PR cleaning the dataframe tests (and also other places) from legacy pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:240,integrability,sub,subsequent,240,I tried the solution proposed by @bellenot . It works very well also on macos (even if I had to update cmake from version 3.26 to version 3.27 to reproduce the problem it was solving). I am in favour of merging his changes. I can provide a subsequent PR cleaning the dataframe tests (and also other places) from legacy pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:114,modifiability,version,version,114,I tried the solution proposed by @bellenot . It works very well also on macos (even if I had to update cmake from version 3.26 to version 3.27 to reproduce the problem it was solving). I am in favour of merging his changes. I can provide a subsequent PR cleaning the dataframe tests (and also other places) from legacy pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:130,modifiability,version,version,130,I tried the solution proposed by @bellenot . It works very well also on macos (even if I had to update cmake from version 3.26 to version 3.27 to reproduce the problem it was solving). I am in favour of merging his changes. I can provide a subsequent PR cleaning the dataframe tests (and also other places) from legacy pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:96,safety,updat,update,96,I tried the solution proposed by @bellenot . It works very well also on macos (even if I had to update cmake from version 3.26 to version 3.27 to reproduce the problem it was solving). I am in favour of merging his changes. I can provide a subsequent PR cleaning the dataframe tests (and also other places) from legacy pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:277,safety,test,tests,277,I tried the solution proposed by @bellenot . It works very well also on macos (even if I had to update cmake from version 3.26 to version 3.27 to reproduce the problem it was solving). I am in favour of merging his changes. I can provide a subsequent PR cleaning the dataframe tests (and also other places) from legacy pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:96,security,updat,update,96,I tried the solution proposed by @bellenot . It works very well also on macos (even if I had to update cmake from version 3.26 to version 3.27 to reproduce the problem it was solving). I am in favour of merging his changes. I can provide a subsequent PR cleaning the dataframe tests (and also other places) from legacy pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:277,testability,test,tests,277,I tried the solution proposed by @bellenot . It works very well also on macos (even if I had to update cmake from version 3.26 to version 3.27 to reproduce the problem it was solving). I am in favour of merging his changes. I can provide a subsequent PR cleaning the dataframe tests (and also other places) from legacy pyroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:113,interoperability,plug,plugin,113,Deprecation of `oracle` is fine for me - I am not aware of any active user. Last questions on forum about Oracle plugin was in 2017.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13856:70,usability,user,user,70,Deprecation of `oracle` is fine for me - I am not aware of any active user. Last questions on forum about Oracle plugin was in 2017.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13856
https://github.com/root-project/root/pull/13858:21,safety,review,review,21,"Thanks a lot for the review @jblomer. I tried to implement all your suggestions. Please let me know if I missed anything. Also, your plan for the follow-up PRs sounds great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13858
https://github.com/root-project/root/pull/13858:21,testability,review,review,21,"Thanks a lot for the review @jblomer. I tried to implement all your suggestions. Please let me know if I missed anything. Also, your plan for the follow-up PRs sounds great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13858
https://github.com/root-project/root/pull/13858:133,testability,plan,plan,133,"Thanks a lot for the review @jblomer. I tried to implement all your suggestions. Please let me know if I missed anything. Also, your plan for the follow-up PRs sounds great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13858
https://github.com/root-project/root/pull/13859:86,safety,test,test,86,"> Let’s wait for this to land upstream. Is this a requirement? This is finally fixing test crashes with the most recent GCC and C++20, I'd rather have this in...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13859
https://github.com/root-project/root/pull/13859:86,testability,test,test,86,"> Let’s wait for this to land upstream. Is this a requirement? This is finally fixing test crashes with the most recent GCC and C++20, I'd rather have this in...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13859
https://github.com/root-project/root/pull/13859:94,safety,test,test,94,"> > Let’s wait for this to land upstream. > . > Is this a requirement? This is finally fixing test crashes with the most recent GCC and C++20, I'd rather have this in... Do we have a open PR against the llvm mainstream at least?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13859
https://github.com/root-project/root/pull/13859:94,testability,test,test,94,"> > Let’s wait for this to land upstream. > . > Is this a requirement? This is finally fixing test crashes with the most recent GCC and C++20, I'd rather have this in... Do we have a open PR against the llvm mainstream at least?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13859
https://github.com/root-project/root/pull/13859:106,safety,test,test,106,"> > > Let’s wait for this to land upstream. > > . > > . > > Is this a requirement? This is finally fixing test crashes with the most recent GCC and C++20, I'd rather have this in... > . > Do we have a open PR against the llvm mainstream at least? Yes, https://github.com/llvm/llvm-project/pull/69076, as linked from the LLVM issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13859
https://github.com/root-project/root/pull/13859:106,testability,test,test,106,"> > > Let’s wait for this to land upstream. > > . > > . > > Is this a requirement? This is finally fixing test crashes with the most recent GCC and C++20, I'd rather have this in... > . > Do we have a open PR against the llvm mainstream at least? Yes, https://github.com/llvm/llvm-project/pull/69076, as linked from the LLVM issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13859
https://github.com/root-project/root/pull/13860:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13860
https://github.com/root-project/root/pull/13860:14,testability,understand,understand,14,Ok. I need to understand whats wrong with that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13860
https://github.com/root-project/root/pull/13860:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13860
https://github.com/root-project/root/pull/13860:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13860
https://github.com/root-project/root/issues/13861:14,interoperability,specif,specific,14,Some Python 2 specific code I could still find:. - [ ] https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt. - [ ] https://github.com/root-project/root/blob/master/config/root-config.in#L570. - [ ] https://github.com/root-project/root/blob/master/config/root-config.bat.in#L130,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13861
https://github.com/root-project/root/issues/13861:104,interoperability,bind,bindings,104,Some Python 2 specific code I could still find:. - [ ] https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt. - [ ] https://github.com/root-project/root/blob/master/config/root-config.in#L570. - [ ] https://github.com/root-project/root/blob/master/config/root-config.bat.in#L130,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13861
https://github.com/root-project/root/issues/13861:104,modifiability,bind,bindings,104,Some Python 2 specific code I could still find:. - [ ] https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt. - [ ] https://github.com/root-project/root/blob/master/config/root-config.in#L570. - [ ] https://github.com/root-project/root/blob/master/config/root-config.bat.in#L130,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13861
https://github.com/root-project/root/issues/13861:253,availability,state,statements,253,"FYI, I am working on this problem (please, see for example 73219de13ce63dbfc294353cd3d88c9abb3ec2de). As far as I can tell, there are a lot of files that need to be changed (at least Python, CMake and C). So far the changes have been mostly if and else statements which take into account, that the user might try to compile with either Python2 or Python3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13861
https://github.com/root-project/root/issues/13861:253,integrability,state,statements,253,"FYI, I am working on this problem (please, see for example 73219de13ce63dbfc294353cd3d88c9abb3ec2de). As far as I can tell, there are a lot of files that need to be changed (at least Python, CMake and C). So far the changes have been mostly if and else statements which take into account, that the user might try to compile with either Python2 or Python3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13861
https://github.com/root-project/root/issues/13861:298,usability,user,user,298,"FYI, I am working on this problem (please, see for example 73219de13ce63dbfc294353cd3d88c9abb3ec2de). As far as I can tell, there are a lot of files that need to be changed (at least Python, CMake and C). So far the changes have been mostly if and else statements which take into account, that the user might try to compile with either Python2 or Python3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13861
https://github.com/root-project/root/issues/13861:81,security,control,control,81,I believe we have removed all references of Python 2 in ROOT code we have direct control over. There are some leftover traces in `interpreter` and in `pyroot/cppyy` but I think there's no point in changing those,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13861
https://github.com/root-project/root/issues/13861:81,testability,control,control,81,I believe we have removed all references of Python 2 in ROOT code we have direct control over. There are some leftover traces in `interpreter` and in `pyroot/cppyy` but I think there's no point in changing those,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13861
https://github.com/root-project/root/issues/13861:119,testability,trace,traces,119,I believe we have removed all references of Python 2 in ROOT code we have direct control over. There are some leftover traces in `interpreter` and in `pyroot/cppyy` but I think there's no point in changing those,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13861
https://github.com/root-project/root/pull/13863:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13863
https://github.com/root-project/root/issues/13864:0,usability,Close,Closed,0,"Closed by:. * https://github.com/root-project/root/pull/13912. Note that in upstream cppyy, there are also changes related to Python 3.12. Maybe it will be necessary to cherry pick them too (or maybe not):. https://github.com/wlav/CPyCppyy/commits/master",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13864
https://github.com/root-project/root/issues/13865:5,availability,operat,operating,5,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:36,availability,Sli,Slightly,36,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:187,availability,error,error,187,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:265,availability,Error,Error,265,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:441,availability,error,errors,441,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:602,availability,error,error,602,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:732,availability,Error,Error,732,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1254,availability,error,errors,1254,". CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2029,availability,Error,Error,2029,"ake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcom",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2110,availability,error,error,2110,"g/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2257,availability,Error,Error,2257," occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. --",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2336,availability,error,error,2336," seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2416,availability,Error,Error,2416,"KE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2492,availability,error,error,2492,"cessful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3584,availability,error,error,3584,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3727,availability,error,error,3727,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3891,availability,error,error,3891,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:58,deployability,version,version,58,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:227,deployability,Build,Building,227,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:642,deployability,Build,Building,642,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:683,deployability,version,version,683,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:697,deployability,VERSION,VERSION,697,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:777,deployability,modul,modules,777,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:868,deployability,Stack,Stack,868,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:937,deployability,modul,modules,937,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1036,deployability,modul,modules,1036,"htly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1503,deployability,build,build,1503,"NDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1509,deployability,configurat,configuration,1509,"DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1943,deployability,modul,modules,1943,"VM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wso",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1990,deployability,modul,modules,1990,"nts). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitializ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2016,deployability,modul,modules,2016,"ject/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2086,deployability,resourc,resources,2086,"mes). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2101,deployability,build,build,2101,"eter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conver",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2158,deployability,resourc,resources,2158,"er/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pth",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2173,deployability,build,build,2173,"Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2312,deployability,resourc,resources,2312,"LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2327,deployability,build,build,2327,"TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2384,deployability,resourc,resources,2384," -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2399,deployability,build,build,2399,"STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2468,deployability,resourc,resources,2468,"NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2483,deployability,build,build,2483,"ts in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2537,deployability,resourc,resources,2537,"OT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2552,deployability,build,build,2552,"ly compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2591,deployability,build,build,2591,"0%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2635,deployability,automat,automatic,2635,"./../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2646,deployability,configurat,configuration,2646,"2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2680,deployability,Configurat,Configuration,2680,"red library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2716,deployability,RELEAS,RELEASE-,2716,"3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2760,deployability,Build,Build,2760,"100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2787,deployability,Instal,Install,2787,". [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3222,deployability,Modul,Module,3222,"CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3570,deployability,configurat,configuration,3570,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3791,deployability,updat,updated,3791,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3929,deployability,modul,modules,3929,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4017,deployability,build,build,4017,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4073,deployability,resourc,resources,4073,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4088,deployability,build,build,4088,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4138,deployability,resourc,resources,4138,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4153,deployability,build,build,4153,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4216,deployability,resourc,resources,4216,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4231,deployability,build,build,4231,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4412,deployability,manag,managed,4412,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1968,energy efficiency,core,core,1968,"vm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2086,energy efficiency,resourc,resources,2086,"mes). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2158,energy efficiency,resourc,resources,2158,"er/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pth",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2312,energy efficiency,resourc,resources,2312,"LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2384,energy efficiency,resourc,resources,2384," -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2468,energy efficiency,resourc,resources,2468,"NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2537,energy efficiency,resourc,resources,2537,"OT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2740,energy efficiency,core,core,2740,"get hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3495,energy efficiency,cpu,cpu,3495,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4073,energy efficiency,resourc,resources,4073,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4138,energy efficiency,resourc,resources,4138,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4216,energy efficiency,resourc,resources,4216,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4320,energy efficiency,core,core,4320,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4412,energy efficiency,manag,managed,4412,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:58,integrability,version,version,58,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:312,integrability,messag,message,312,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:417,integrability,Configur,Configuring,417,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:683,integrability,version,version,683,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:697,integrability,VERSION,VERSION,697,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:808,integrability,messag,message,808,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1230,integrability,Configur,Configuring,1230,"Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1509,integrability,configur,configuration,1509,"DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2646,integrability,configur,configuration,2646,"2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2680,integrability,Configur,Configuration,2680,"red library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3570,integrability,configur,configuration,3570,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3733,integrability,messag,message,3733,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:312,interoperability,messag,message,312,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:808,interoperability,messag,message,808,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1684,interoperability,share,shared,1684,"ion (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1812,interoperability,share,shared,1812,"):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Com",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3098,interoperability,convers,conversion,3098,"ild. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3231,interoperability,Share,Shared,3231,"s/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/bui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3467,interoperability,share,shared,3467,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3527,interoperability,xml,xml,3527,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3733,interoperability,messag,message,3733,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:58,modifiability,version,version,58,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:417,modifiability,Configur,Configuring,417,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:683,modifiability,version,version,683,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:697,modifiability,VERSION,VERSION,697,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:777,modifiability,modul,modules,777,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:937,modifiability,modul,modules,937,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1036,modifiability,modul,modules,1036,"htly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1230,modifiability,Configur,Configuring,1230,"Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1509,modifiability,configur,configuration,1509,"DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1943,modifiability,modul,modules,1943,"VM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wso",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1990,modifiability,modul,modules,1990,"nts). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitializ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2016,modifiability,modul,modules,2016,"ject/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2646,modifiability,configur,configuration,2646,"2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2680,modifiability,Configur,Configuration,2680,"red library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3222,modifiability,Modul,Module,3222,"CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3570,modifiability,configur,configuration,3570,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3929,modifiability,modul,modules,3929,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:187,performance,error,error,187,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:265,performance,Error,Error,265,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:441,performance,error,errors,441,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:602,performance,error,error,602,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:732,performance,Error,Error,732,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1254,performance,error,errors,1254,". CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2029,performance,Error,Error,2029,"ake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcom",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2086,performance,resourc,resources,2086,"mes). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2110,performance,error,error,2110,"g/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2158,performance,resourc,resources,2158,"er/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pth",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2257,performance,Error,Error,2257," occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. --",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2312,performance,resourc,resources,2312,"LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2336,performance,error,error,2336," seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2384,performance,resourc,resources,2384," -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2416,performance,Error,Error,2416,"KE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2468,performance,resourc,resources,2468,"NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2492,performance,error,error,2492,"cessful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2537,performance,resourc,resources,2537,"OT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3495,performance,cpu,cpu,3495,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3584,performance,error,error,3584,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3727,performance,error,error,3727,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3891,performance,error,error,3891,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4073,performance,resourc,resources,4073,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4138,performance,resourc,resources,4138,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4216,performance,resourc,resources,4216,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:36,reliability,Sli,Slightly,36,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:187,safety,error,error,187,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:265,safety,Error,Error,265,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:441,safety,error,errors,441,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:602,safety,error,error,602,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:732,safety,Error,Error,732,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:777,safety,modul,modules,777,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:937,safety,modul,modules,937,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1036,safety,modul,modules,1036,"htly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1254,safety,error,errors,1254,". CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1943,safety,modul,modules,1943,"VM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wso",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1990,safety,modul,modules,1990,"nts). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitializ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2016,safety,modul,modules,2016,"ject/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2029,safety,Error,Error,2029,"ake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcom",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2086,safety,resourc,resources,2086,"mes). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2110,safety,error,error,2110,"g/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2158,safety,resourc,resources,2158,"er/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pth",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2257,safety,Error,Error,2257," occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. --",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2312,safety,resourc,resources,2312,"LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2336,safety,error,error,2336," seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2384,safety,resourc,resources,2384," -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2416,safety,Error,Error,2416,"KE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2468,safety,resourc,resources,2468,"NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2492,safety,error,error,2492,"cessful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2537,safety,resourc,resources,2537,"OT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3222,safety,Modul,Module,3222,"CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3362,safety,except,exceptions,3362,"/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3584,safety,error,error,3584,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3727,safety,error,error,3727,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3791,safety,updat,updated,3791,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3891,safety,error,error,3891,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3929,safety,modul,modules,3929,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4073,safety,resourc,resources,4073,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4138,safety,resourc,resources,4138,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4216,safety,resourc,resources,4216,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4412,safety,manag,managed,4412,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:417,security,Configur,Configuring,417,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1230,security,Configur,Configuring,1230,"Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1509,security,configur,configuration,1509,"DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2646,security,configur,configuration,2646,"2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2680,security,Configur,Configuration,2680,"red library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3481,security,ssl,ssl,3481,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3570,security,configur,configuration,3570,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3791,security,updat,updated,3791,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2086,testability,resourc,resources,2086,"mes). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2158,testability,resourc,resources,2158,"er/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pth",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2312,testability,resourc,resources,2312,"LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2384,testability,resourc,resources,2384," -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2468,testability,resourc,resources,2468,"NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2537,testability,resourc,resources,2537,"OT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2635,testability,automat,automatic,2635,"./../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4073,testability,resourc,resources,4073,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4138,testability,resourc,resources,4138,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4216,testability,resourc,resources,4216,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:187,usability,error,error,187,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:265,usability,Error,Error,265,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:441,usability,error,errors,441,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:602,usability,error,error,602,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:732,usability,Error,Error,732,"Same operating system as @mkrzewic. Slightly newer master version of ROOT @615eaf63. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.id",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:1254,usability,error,errors,1254,". CMake Error at interpreter/cling/CMakeLists.txt:196 (message):. NVPTX backend is not activated. Please enable it via -DLLVM_TARGETS_TO_BUILD=""host;NVPTX"". -- Configuring incomplete, errors occurred! ```. When running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""host;NVPTX""`, the following error is reported:. ```shell. [...]. -- Building Cling as part of ROOT. -- Cling version (from VERSION file): ROOT_1.0~dev. CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):. Target host is not in the set of libraries. Call Stack (most recent call first):. interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components). interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2029,usability,Error,Error,2029,"ake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcom",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2054,usability,stop,stopped,2054,"641 (llvm_map_components_to_libnames). interpreter/cling/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2110,usability,error,error,2110,"g/CMakeLists.txt:426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2126,usability,stop,stopped,2126,"426 (llvm_add_library). interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). -- Configuring incomplete, errors occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Wover",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2257,usability,Error,Error,2257," occurred! ```. Removing the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. --",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2280,usability,stop,stopped,2280," the ""host"" string from the list LLVM_TARGETS_TO_BUILD, seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: as",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2336,usability,error,error,2336," seems to fix the issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2352,usability,stop,stopped,2352," issue, as running `cmake ../root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad data",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2416,usability,Error,Error,2416,"KE_BUILD_TYPE=RelWithDebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2436,usability,stop,stopped,2436,"DebInfo -DLLVM_TARGETS_TO_BUILD=""NVPTX""` results in successful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2492,usability,error,error,2492,"cessful build configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:2505,usability,stop,stopped,2505,"configuration. Following this, ROOT successfully compiles almost all the way up to 100%:. ```shell. [ 98%] Linking CXX executable ../../bin/hist2workspace. [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so. [ 98%] Built target hist2workspace. [100%] Built target RooFitHS3. [100%] Linking CXX shared library ../../lib/libRooFitXRooFit.so. [100%] Built target RooFitXRooFit. [100%] Built target onepcm. [100%] Generating lib/modules.idx. Abort trap (core dumped). --- lib/modules.idx ---. *** [lib/modules.idx] Error code 134. make[2]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[2]: stopped in /usr/home/erik/devel/resources/root/build. --- CMakeFiles/modules_idx.dir/all ---. *** [CMakeFiles/modules_idx.dir/all] Error code 2. make[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3269,usability,support,support,3269,"ke[1]: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make[1]: stopped in /usr/home/erik/devel/resources/root/build. *** [all] Error code 2. make: stopped in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3584,usability,error,error,3584,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3727,usability,error,error,3727,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:3891,usability,error,error,3891,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:4028,usability,command,command,4028,"in /usr/home/erik/devel/resources/root/build. 1 error. make: stopped in /usr/home/erik/devel/resources/root/build. ```. on my machine via `cmake --build . -- -j8` with the following (default/automatic) configuration:. ```shell. -- ROOT Configuration . System FreeBSD-13.2-RELEASE-p4. Processor 8 core 0 MHz (amd64). Build type RelWithDebInfo. Install path /usr/local. Compiler Clang 14.0.5. Compiler flags:. C -pipe -Wall -W -pthread -O2 -g -DNDEBUG. C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 clad dataframe exceptions fitsio gdml http imt minuit2 opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. ```. As for the original CMake configuration error, my guess is that the CMake target ""host"" used to be part of the CMake project, but is no longer part of the CMake project, and that the error message in `interpreter/cling/CMakeLists.txt:196` was not updated to reflect this when the CMake target ""host"" was removed from the CMake project. As for the error on the final generation of `lib/modules.idx`, the issue seems to be with `root.exe` which is invoked with the following build step command: . ```shell. cd /usr/home/erik/devel/resources/root/build/lib && LD_LIBRARY_PATH=/usr/home/erik/devel/resources/root/build/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /usr/home/erik/devel/resources/root/build/bin/root.exe -l -q -b. ```. Running `root.exe` by itself generates an `Abort trap (core dumped)`. Have you stumbled upon this issue previously, @mkrzewic, and if so, have you managed to deal with it somehow?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:20,deployability,modul,modules,20,"@eamjensen yes, the modules.idx thing was already solved in the first FreeBSD related patches but I don't remember what was the problem exactly, I'll see if I can dig it up...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:86,deployability,patch,patches,86,"@eamjensen yes, the modules.idx thing was already solved in the first FreeBSD related patches but I don't remember what was the problem exactly, I'll see if I can dig it up...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:20,modifiability,modul,modules,20,"@eamjensen yes, the modules.idx thing was already solved in the first FreeBSD related patches but I don't remember what was the problem exactly, I'll see if I can dig it up...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:20,safety,modul,modules,20,"@eamjensen yes, the modules.idx thing was already solved in the first FreeBSD related patches but I don't remember what was the problem exactly, I'll see if I can dig it up...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:86,safety,patch,patches,86,"@eamjensen yes, the modules.idx thing was already solved in the first FreeBSD related patches but I don't remember what was the problem exactly, I'll see if I can dig it up...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:106,safety,reme,remember,106,"@eamjensen yes, the modules.idx thing was already solved in the first FreeBSD related patches but I don't remember what was the problem exactly, I'll see if I can dig it up...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:86,security,patch,patches,86,"@eamjensen yes, the modules.idx thing was already solved in the first FreeBSD related patches but I don't remember what was the problem exactly, I'll see if I can dig it up...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:87,deployability,modul,modules,87,"@eamjensen -DLLVM_TARGETS_TO_BUILD=""NVPTX"" helps, thanks. I'll close this for now. the modules.idx problem might need a separate ticket, feel free to open one for the record, when time allows I'll come back to this if it is not solved by then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:87,modifiability,modul,modules,87,"@eamjensen -DLLVM_TARGETS_TO_BUILD=""NVPTX"" helps, thanks. I'll close this for now. the modules.idx problem might need a separate ticket, feel free to open one for the record, when time allows I'll come back to this if it is not solved by then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:180,performance,time,time,180,"@eamjensen -DLLVM_TARGETS_TO_BUILD=""NVPTX"" helps, thanks. I'll close this for now. the modules.idx problem might need a separate ticket, feel free to open one for the record, when time allows I'll come back to this if it is not solved by then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:87,safety,modul,modules,87,"@eamjensen -DLLVM_TARGETS_TO_BUILD=""NVPTX"" helps, thanks. I'll close this for now. the modules.idx problem might need a separate ticket, feel free to open one for the record, when time allows I'll come back to this if it is not solved by then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:43,usability,help,helps,43,"@eamjensen -DLLVM_TARGETS_TO_BUILD=""NVPTX"" helps, thanks. I'll close this for now. the modules.idx problem might need a separate ticket, feel free to open one for the record, when time allows I'll come back to this if it is not solved by then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/issues/13865:63,usability,close,close,63,"@eamjensen -DLLVM_TARGETS_TO_BUILD=""NVPTX"" helps, thanks. I'll close this for now. the modules.idx problem might need a separate ticket, feel free to open one for the record, when time allows I'll come back to this if it is not solved by then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13865
https://github.com/root-project/root/pull/13874:0,availability,Failur,Failures,0,"Failures on `fedora38` are because of outdated build artifacts, on `ubuntu20` there are `gtest-core-metacling-test-TClingLoadUnloadFile` and `tutorial-tmva-TMVA_CNN_Classification` - merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13874
https://github.com/root-project/root/pull/13874:0,deployability,Fail,Failures,0,"Failures on `fedora38` are because of outdated build artifacts, on `ubuntu20` there are `gtest-core-metacling-test-TClingLoadUnloadFile` and `tutorial-tmva-TMVA_CNN_Classification` - merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13874
https://github.com/root-project/root/pull/13874:47,deployability,build,build,47,"Failures on `fedora38` are because of outdated build artifacts, on `ubuntu20` there are `gtest-core-metacling-test-TClingLoadUnloadFile` and `tutorial-tmva-TMVA_CNN_Classification` - merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13874
https://github.com/root-project/root/pull/13874:53,deployability,artifact,artifacts,53,"Failures on `fedora38` are because of outdated build artifacts, on `ubuntu20` there are `gtest-core-metacling-test-TClingLoadUnloadFile` and `tutorial-tmva-TMVA_CNN_Classification` - merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13874
https://github.com/root-project/root/pull/13874:95,energy efficiency,core,core-metacling-test-TClingLoadUnloadFile,95,"Failures on `fedora38` are because of outdated build artifacts, on `ubuntu20` there are `gtest-core-metacling-test-TClingLoadUnloadFile` and `tutorial-tmva-TMVA_CNN_Classification` - merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13874
https://github.com/root-project/root/pull/13874:0,performance,Failur,Failures,0,"Failures on `fedora38` are because of outdated build artifacts, on `ubuntu20` there are `gtest-core-metacling-test-TClingLoadUnloadFile` and `tutorial-tmva-TMVA_CNN_Classification` - merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13874
https://github.com/root-project/root/pull/13874:0,reliability,Fail,Failures,0,"Failures on `fedora38` are because of outdated build artifacts, on `ubuntu20` there are `gtest-core-metacling-test-TClingLoadUnloadFile` and `tutorial-tmva-TMVA_CNN_Classification` - merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13874
https://github.com/root-project/root/pull/13874:110,safety,test,test-TClingLoadUnloadFile,110,"Failures on `fedora38` are because of outdated build artifacts, on `ubuntu20` there are `gtest-core-metacling-test-TClingLoadUnloadFile` and `tutorial-tmva-TMVA_CNN_Classification` - merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13874
https://github.com/root-project/root/pull/13874:110,testability,test,test-TClingLoadUnloadFile,110,"Failures on `fedora38` are because of outdated build artifacts, on `ubuntu20` there are `gtest-core-metacling-test-TClingLoadUnloadFile` and `tutorial-tmva-TMVA_CNN_Classification` - merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13874
https://github.com/root-project/root/issues/13875:110,usability,clear,clear,110,"Closing because the usecase is gone, and the features is probably impossible to implement in cppyy. Without a clear usecase, we should not go into this rabbit hole.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13875
https://github.com/root-project/root/pull/13876:67,safety,test,tests,67,"Thanks @vepadulano for your wise comments. I propose I elaborate a tests and add it to this PR and if/once merged, I open an issue to remind us to re-evaluate the pythonization once rebasing to the new cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:67,testability,test,tests,67,"Thanks @vepadulano for your wise comments. I propose I elaborate a tests and add it to this PR and if/once merged, I open an issue to remind us to re-evaluate the pythonization once rebasing to the new cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:112,deployability,unload,unloaded,112,"Also the previous comment about the handling of the case when a class is loaded, an instance printed, the class unloaded and the class reloaded but different has been addressed. For the cache of printing functions, now we do not use any more the class name, which is elegant but might not be unique in very rare corner cases, but the DeclID in the AST built by Cling. For what concerns the test for this feature, I ran out of ideas since, as demonstrated before, PyROOT does not handle unloads and reloads properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:486,deployability,unload,unloads,486,"Also the previous comment about the handling of the case when a class is loaded, an instance printed, the class unloaded and the class reloaded but different has been addressed. For the cache of printing functions, now we do not use any more the class name, which is elegant but might not be unique in very rare corner cases, but the DeclID in the AST built by Cling. For what concerns the test for this feature, I ran out of ideas since, as demonstrated before, PyROOT does not handle unloads and reloads properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:73,energy efficiency,load,loaded,73,"Also the previous comment about the handling of the case when a class is loaded, an instance printed, the class unloaded and the class reloaded but different has been addressed. For the cache of printing functions, now we do not use any more the class name, which is elegant but might not be unique in very rare corner cases, but the DeclID in the AST built by Cling. For what concerns the test for this feature, I ran out of ideas since, as demonstrated before, PyROOT does not handle unloads and reloads properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:377,modifiability,concern,concerns,377,"Also the previous comment about the handling of the case when a class is loaded, an instance printed, the class unloaded and the class reloaded but different has been addressed. For the cache of printing functions, now we do not use any more the class name, which is elegant but might not be unique in very rare corner cases, but the DeclID in the AST built by Cling. For what concerns the test for this feature, I ran out of ideas since, as demonstrated before, PyROOT does not handle unloads and reloads properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:73,performance,load,loaded,73,"Also the previous comment about the handling of the case when a class is loaded, an instance printed, the class unloaded and the class reloaded but different has been addressed. For the cache of printing functions, now we do not use any more the class name, which is elegant but might not be unique in very rare corner cases, but the DeclID in the AST built by Cling. For what concerns the test for this feature, I ran out of ideas since, as demonstrated before, PyROOT does not handle unloads and reloads properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:186,performance,cach,cache,186,"Also the previous comment about the handling of the case when a class is loaded, an instance printed, the class unloaded and the class reloaded but different has been addressed. For the cache of printing functions, now we do not use any more the class name, which is elegant but might not be unique in very rare corner cases, but the DeclID in the AST built by Cling. For what concerns the test for this feature, I ran out of ideas since, as demonstrated before, PyROOT does not handle unloads and reloads properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:470,reliability,doe,does,470,"Also the previous comment about the handling of the case when a class is loaded, an instance printed, the class unloaded and the class reloaded but different has been addressed. For the cache of printing functions, now we do not use any more the class name, which is elegant but might not be unique in very rare corner cases, but the DeclID in the AST built by Cling. For what concerns the test for this feature, I ran out of ideas since, as demonstrated before, PyROOT does not handle unloads and reloads properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:390,safety,test,test,390,"Also the previous comment about the handling of the case when a class is loaded, an instance printed, the class unloaded and the class reloaded but different has been addressed. For the cache of printing functions, now we do not use any more the class name, which is elegant but might not be unique in very rare corner cases, but the DeclID in the AST built by Cling. For what concerns the test for this feature, I ran out of ideas since, as demonstrated before, PyROOT does not handle unloads and reloads properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:377,testability,concern,concerns,377,"Also the previous comment about the handling of the case when a class is loaded, an instance printed, the class unloaded and the class reloaded but different has been addressed. For the cache of printing functions, now we do not use any more the class name, which is elegant but might not be unique in very rare corner cases, but the DeclID in the AST built by Cling. For what concerns the test for this feature, I ran out of ideas since, as demonstrated before, PyROOT does not handle unloads and reloads properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:390,testability,test,test,390,"Also the previous comment about the handling of the case when a class is loaded, an instance printed, the class unloaded and the class reloaded but different has been addressed. For the cache of printing functions, now we do not use any more the class name, which is elegant but might not be unique in very rare corner cases, but the DeclID in the AST built by Cling. For what concerns the test for this feature, I ran out of ideas since, as demonstrated before, PyROOT does not handle unloads and reloads properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:356,performance,I/O,I/O,356,"Ok, I also can anticipate a follow-up question perhaps and is related to opaque types. In the case a template is instantiated with a template argument which is Double32_t or double, ROOT provides 2 very distinct TClass instances to represent the type in the typesystem, and for a good reason. It's the way in which the two types are kept separated for the I/O, even if Double32_t is a typedef of double. In the case of pretty printing, we would consider identical two template instances with the regular and opaque type (in the AST the canonical decl is the same), but this is not a real problem since here we print using the interpreter and, in this context, Double32_t and double can be identical.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:454,security,ident,identical,454,"Ok, I also can anticipate a follow-up question perhaps and is related to opaque types. In the case a template is instantiated with a template argument which is Double32_t or double, ROOT provides 2 very distinct TClass instances to represent the type in the typesystem, and for a good reason. It's the way in which the two types are kept separated for the I/O, even if Double32_t is a typedef of double. In the case of pretty printing, we would consider identical two template instances with the regular and opaque type (in the AST the canonical decl is the same), but this is not a real problem since here we print using the interpreter and, in this context, Double32_t and double can be identical.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:689,security,ident,identical,689,"Ok, I also can anticipate a follow-up question perhaps and is related to opaque types. In the case a template is instantiated with a template argument which is Double32_t or double, ROOT provides 2 very distinct TClass instances to represent the type in the typesystem, and for a good reason. It's the way in which the two types are kept separated for the I/O, even if Double32_t is a typedef of double. In the case of pretty printing, we would consider identical two template instances with the regular and opaque type (in the AST the canonical decl is the same), but this is not a real problem since here we print using the interpreter and, in this context, Double32_t and double can be identical.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/pull/13876:651,testability,context,context,651,"Ok, I also can anticipate a follow-up question perhaps and is related to opaque types. In the case a template is instantiated with a template argument which is Double32_t or double, ROOT provides 2 very distinct TClass instances to represent the type in the typesystem, and for a good reason. It's the way in which the two types are kept separated for the I/O, even if Double32_t is a typedef of double. In the case of pretty printing, we would consider identical two template instances with the regular and opaque type (in the AST the canonical decl is the same), but this is not a real problem since here we print using the interpreter and, in this context, Double32_t and double can be identical.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13876
https://github.com/root-project/root/issues/13878:48,security,ident,identified,48,Closing. Please re-open if a better solution is identified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13878
https://github.com/root-project/root/pull/13882:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13882
https://github.com/root-project/root/pull/13882:30,testability,understand,understand,30,"Hi @bellenot, can you help me understand the issue on Windows? I see the same happened in https://github.com/root-project/root/pull/13793, is this something to worry about?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13882
https://github.com/root-project/root/pull/13882:22,usability,help,help,22,"Hi @bellenot, can you help me understand the issue on Windows? I see the same happened in https://github.com/root-project/root/pull/13793, is this something to worry about?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13882
https://github.com/root-project/root/pull/13882:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13882
https://github.com/root-project/root/pull/13885:168,usability,command,command,168,"I tried this code and it fixes part of the problem, as correctly described above. However, it seems that other problems are appearing. For example, if I try to use the command line prompt from the browser, a broken scrollbar appears. <img width=""795"" alt=""image"" src=""https://github.com/root-project/root/assets/7850302/558bf226-be8b-4610-adfc-db3e11399e0e"">. I would like to note that with PyROOT, everything works perfectly even without this fix, even if I cannot provide an explanation why.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:236,availability,fault,faulty,236,"I do not have the same experience with python. On macphsft24 (M1, OSX14, Clang15) I disabled the web browser by putting `Browser.Name: TRootBrowser` in `$ROOTSYS/etc/system.rootrc` . Then I ran python and started TBrowser. It shows the faulty one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:236,energy efficiency,fault,faulty,236,"I do not have the same experience with python. On macphsft24 (M1, OSX14, Clang15) I disabled the web browser by putting `Browser.Name: TRootBrowser` in `$ROOTSYS/etc/system.rootrc` . Then I ran python and started TBrowser. It shows the faulty one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:236,performance,fault,faulty,236,"I do not have the same experience with python. On macphsft24 (M1, OSX14, Clang15) I disabled the web browser by putting `Browser.Name: TRootBrowser` in `$ROOTSYS/etc/system.rootrc` . Then I ran python and started TBrowser. It shows the faulty one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:236,reliability,fault,faulty,236,"I do not have the same experience with python. On macphsft24 (M1, OSX14, Clang15) I disabled the web browser by putting `Browser.Name: TRootBrowser` in `$ROOTSYS/etc/system.rootrc` . Then I ran python and started TBrowser. It shows the faulty one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:236,safety,fault,faulty,236,"I do not have the same experience with python. On macphsft24 (M1, OSX14, Clang15) I disabled the web browser by putting `Browser.Name: TRootBrowser` in `$ROOTSYS/etc/system.rootrc` . Then I ran python and started TBrowser. It shows the faulty one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:23,usability,experien,experience,23,"I do not have the same experience with python. On macphsft24 (M1, OSX14, Clang15) I disabled the web browser by putting `Browser.Name: TRootBrowser` in `$ROOTSYS/etc/system.rootrc` . Then I ran python and started TBrowser. It shows the faulty one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:42,deployability,instal,installed,42,"I don't know if it's a problem with how I installed root, using homebrew, or if it's just that I'm not expert enough in this area, but I can't find the files specified to modify. Under `/usr/local/Cellar/root/6.28.06/` I find . ```INSTALL_RECEIPT.json LICENSE README.md bin etc include lib share```, but no `src`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:158,interoperability,specif,specified,158,"I don't know if it's a problem with how I installed root, using homebrew, or if it's just that I'm not expert enough in this area, but I can't find the files specified to modify. Under `/usr/local/Cellar/root/6.28.06/` I find . ```INSTALL_RECEIPT.json LICENSE README.md bin etc include lib share```, but no `src`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:290,interoperability,share,share,290,"I don't know if it's a problem with how I installed root, using homebrew, or if it's just that I'm not expert enough in this area, but I can't find the files specified to modify. Under `/usr/local/Cellar/root/6.28.06/` I find . ```INSTALL_RECEIPT.json LICENSE README.md bin etc include lib share```, but no `src`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:171,security,modif,modify,171,"I don't know if it's a problem with how I installed root, using homebrew, or if it's just that I'm not expert enough in this area, but I can't find the files specified to modify. Under `/usr/local/Cellar/root/6.28.06/` I find . ```INSTALL_RECEIPT.json LICENSE README.md bin etc include lib share```, but no `src`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:36,deployability,version,version,36,"Ah ok, you are using a preinstalled version. Here we are speaking of the installation from the source. That's why ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:73,deployability,instal,installation,73,"Ah ok, you are using a preinstalled version. Here we are speaking of the installation from the source. That's why ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:36,integrability,version,version,36,"Ah ok, you are using a preinstalled version. Here we are speaking of the installation from the source. That's why ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:36,modifiability,version,version,36,"Ah ok, you are using a preinstalled version. Here we are speaking of the installation from the source. That's why ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:109,deployability,releas,releases,109,"ok, that makes sense. For now I'm happy to use the web viewer as a workaround, but will this be fixed in new releases? I'd prefer to keep using a precompiled version rather than risk problems in compiling it myself",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:158,deployability,version,version,158,"ok, that makes sense. For now I'm happy to use the web viewer as a workaround, but will this be fixed in new releases? I'd prefer to keep using a precompiled version rather than risk problems in compiling it myself",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:158,integrability,version,version,158,"ok, that makes sense. For now I'm happy to use the web viewer as a workaround, but will this be fixed in new releases? I'd prefer to keep using a precompiled version rather than risk problems in compiling it myself",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:158,modifiability,version,version,158,"ok, that makes sense. For now I'm happy to use the web viewer as a workaround, but will this be fixed in new releases? I'd prefer to keep using a precompiled version rather than risk problems in compiling it myself",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:178,safety,risk,risk,178,"ok, that makes sense. For now I'm happy to use the web viewer as a workaround, but will this be fixed in new releases? I'd prefer to keep using a precompiled version rather than risk problems in compiling it myself",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:178,security,risk,risk,178,"ok, that makes sense. For now I'm happy to use the web viewer as a workaround, but will this be fixed in new releases? I'd prefer to keep using a precompiled version rather than risk problems in compiling it myself",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:123,usability,prefer,prefer,123,"ok, that makes sense. For now I'm happy to use the web viewer as a workaround, but will this be fixed in new releases? I'd prefer to keep using a precompiled version rather than risk problems in compiling it myself",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:40,deployability,releas,release,40,Yes of course this will be fixed in the release.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:7,deployability,instal,installed,7,"I have installed these patches on macphsft18 which is running MacOS12 and Clang 14. So, old OS and Compiler. Good News: it is working.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:23,deployability,patch,patches,23,"I have installed these patches on macphsft18 which is running MacOS12 and Clang 14. So, old OS and Compiler. Good News: it is working.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:23,safety,patch,patches,23,"I have installed these patches on macphsft18 which is running MacOS12 and Clang 14. So, old OS and Compiler. Good News: it is working.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/pull/13885:23,security,patch,patches,23,"I have installed these patches on macphsft18 which is running MacOS12 and Clang 14. So, old OS and Compiler. Good News: it is working.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13885
https://github.com/root-project/root/issues/13886:122,deployability,modul,modules,122,This is actually implemented now:. https://github.com/vepadulano/root/blob/518893cd5e3aef5d9992d5ad588c0ec3c2672896/cmake/modules/CheckCompiler.cmake#L172,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13886
https://github.com/root-project/root/issues/13886:122,modifiability,modul,modules,122,This is actually implemented now:. https://github.com/vepadulano/root/blob/518893cd5e3aef5d9992d5ad588c0ec3c2672896/cmake/modules/CheckCompiler.cmake#L172,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13886
https://github.com/root-project/root/issues/13886:122,safety,modul,modules,122,This is actually implemented now:. https://github.com/vepadulano/root/blob/518893cd5e3aef5d9992d5ad588c0ec3c2672896/cmake/modules/CheckCompiler.cmake#L172,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13886
https://github.com/root-project/root/pull/13892:387,deployability,releas,releases,387,"> Should we just adopt that clang-tidy file? Yes, why not! They enforced it in all their CMSSW code base and it apparently worked fine for them. There are, however, also checks in that file I don't like. It's this `performance-unnecessary-copy-initialization` and `performance-for-range-copy`:. * https://clang.llvm.org/extra/clang-tidy/checks/performance/for-range-copy.html. * https://releases.llvm.org/10.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/performance-unnecessary-copy-initialization.html. They assume that it's fair to replace a const copy with a const reference if only const methods are called on it. But with all the `mutable` and `const_cast` going on for example in RooFit, this is not a good assumption, unfortunately. These checks don't apply to this PR, by the way. I'll go ahead later and make a PR with that file, minus these two checks, and then we can continue the discussion there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13892
https://github.com/root-project/root/pull/13892:884,deployability,continu,continue,884,"> Should we just adopt that clang-tidy file? Yes, why not! They enforced it in all their CMSSW code base and it apparently worked fine for them. There are, however, also checks in that file I don't like. It's this `performance-unnecessary-copy-initialization` and `performance-for-range-copy`:. * https://clang.llvm.org/extra/clang-tidy/checks/performance/for-range-copy.html. * https://releases.llvm.org/10.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/performance-unnecessary-copy-initialization.html. They assume that it's fair to replace a const copy with a const reference if only const methods are called on it. But with all the `mutable` and `const_cast` going on for example in RooFit, this is not a good assumption, unfortunately. These checks don't apply to this PR, by the way. I'll go ahead later and make a PR with that file, minus these two checks, and then we can continue the discussion there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13892
https://github.com/root-project/root/pull/13892:215,performance,perform,performance-unnecessary-copy-initialization,215,"> Should we just adopt that clang-tidy file? Yes, why not! They enforced it in all their CMSSW code base and it apparently worked fine for them. There are, however, also checks in that file I don't like. It's this `performance-unnecessary-copy-initialization` and `performance-for-range-copy`:. * https://clang.llvm.org/extra/clang-tidy/checks/performance/for-range-copy.html. * https://releases.llvm.org/10.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/performance-unnecessary-copy-initialization.html. They assume that it's fair to replace a const copy with a const reference if only const methods are called on it. But with all the `mutable` and `const_cast` going on for example in RooFit, this is not a good assumption, unfortunately. These checks don't apply to this PR, by the way. I'll go ahead later and make a PR with that file, minus these two checks, and then we can continue the discussion there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13892
https://github.com/root-project/root/pull/13892:265,performance,perform,performance-for-range-copy,265,"> Should we just adopt that clang-tidy file? Yes, why not! They enforced it in all their CMSSW code base and it apparently worked fine for them. There are, however, also checks in that file I don't like. It's this `performance-unnecessary-copy-initialization` and `performance-for-range-copy`:. * https://clang.llvm.org/extra/clang-tidy/checks/performance/for-range-copy.html. * https://releases.llvm.org/10.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/performance-unnecessary-copy-initialization.html. They assume that it's fair to replace a const copy with a const reference if only const methods are called on it. But with all the `mutable` and `const_cast` going on for example in RooFit, this is not a good assumption, unfortunately. These checks don't apply to this PR, by the way. I'll go ahead later and make a PR with that file, minus these two checks, and then we can continue the discussion there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13892
https://github.com/root-project/root/pull/13892:344,performance,perform,performance,344,"> Should we just adopt that clang-tidy file? Yes, why not! They enforced it in all their CMSSW code base and it apparently worked fine for them. There are, however, also checks in that file I don't like. It's this `performance-unnecessary-copy-initialization` and `performance-for-range-copy`:. * https://clang.llvm.org/extra/clang-tidy/checks/performance/for-range-copy.html. * https://releases.llvm.org/10.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/performance-unnecessary-copy-initialization.html. They assume that it's fair to replace a const copy with a const reference if only const methods are called on it. But with all the `mutable` and `const_cast` going on for example in RooFit, this is not a good assumption, unfortunately. These checks don't apply to this PR, by the way. I'll go ahead later and make a PR with that file, minus these two checks, and then we can continue the discussion there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13892
https://github.com/root-project/root/pull/13892:459,performance,perform,performance-unnecessary-copy-initialization,459,"> Should we just adopt that clang-tidy file? Yes, why not! They enforced it in all their CMSSW code base and it apparently worked fine for them. There are, however, also checks in that file I don't like. It's this `performance-unnecessary-copy-initialization` and `performance-for-range-copy`:. * https://clang.llvm.org/extra/clang-tidy/checks/performance/for-range-copy.html. * https://releases.llvm.org/10.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/performance-unnecessary-copy-initialization.html. They assume that it's fair to replace a const copy with a const reference if only const methods are called on it. But with all the `mutable` and `const_cast` going on for example in RooFit, this is not a good assumption, unfortunately. These checks don't apply to this PR, by the way. I'll go ahead later and make a PR with that file, minus these two checks, and then we can continue the discussion there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13892
https://github.com/root-project/root/pull/13892:215,usability,perform,performance-unnecessary-copy-initialization,215,"> Should we just adopt that clang-tidy file? Yes, why not! They enforced it in all their CMSSW code base and it apparently worked fine for them. There are, however, also checks in that file I don't like. It's this `performance-unnecessary-copy-initialization` and `performance-for-range-copy`:. * https://clang.llvm.org/extra/clang-tidy/checks/performance/for-range-copy.html. * https://releases.llvm.org/10.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/performance-unnecessary-copy-initialization.html. They assume that it's fair to replace a const copy with a const reference if only const methods are called on it. But with all the `mutable` and `const_cast` going on for example in RooFit, this is not a good assumption, unfortunately. These checks don't apply to this PR, by the way. I'll go ahead later and make a PR with that file, minus these two checks, and then we can continue the discussion there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13892
https://github.com/root-project/root/pull/13892:265,usability,perform,performance-for-range-copy,265,"> Should we just adopt that clang-tidy file? Yes, why not! They enforced it in all their CMSSW code base and it apparently worked fine for them. There are, however, also checks in that file I don't like. It's this `performance-unnecessary-copy-initialization` and `performance-for-range-copy`:. * https://clang.llvm.org/extra/clang-tidy/checks/performance/for-range-copy.html. * https://releases.llvm.org/10.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/performance-unnecessary-copy-initialization.html. They assume that it's fair to replace a const copy with a const reference if only const methods are called on it. But with all the `mutable` and `const_cast` going on for example in RooFit, this is not a good assumption, unfortunately. These checks don't apply to this PR, by the way. I'll go ahead later and make a PR with that file, minus these two checks, and then we can continue the discussion there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13892
https://github.com/root-project/root/pull/13892:344,usability,perform,performance,344,"> Should we just adopt that clang-tidy file? Yes, why not! They enforced it in all their CMSSW code base and it apparently worked fine for them. There are, however, also checks in that file I don't like. It's this `performance-unnecessary-copy-initialization` and `performance-for-range-copy`:. * https://clang.llvm.org/extra/clang-tidy/checks/performance/for-range-copy.html. * https://releases.llvm.org/10.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/performance-unnecessary-copy-initialization.html. They assume that it's fair to replace a const copy with a const reference if only const methods are called on it. But with all the `mutable` and `const_cast` going on for example in RooFit, this is not a good assumption, unfortunately. These checks don't apply to this PR, by the way. I'll go ahead later and make a PR with that file, minus these two checks, and then we can continue the discussion there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13892
https://github.com/root-project/root/pull/13892:412,usability,tool,tools,412,"> Should we just adopt that clang-tidy file? Yes, why not! They enforced it in all their CMSSW code base and it apparently worked fine for them. There are, however, also checks in that file I don't like. It's this `performance-unnecessary-copy-initialization` and `performance-for-range-copy`:. * https://clang.llvm.org/extra/clang-tidy/checks/performance/for-range-copy.html. * https://releases.llvm.org/10.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/performance-unnecessary-copy-initialization.html. They assume that it's fair to replace a const copy with a const reference if only const methods are called on it. But with all the `mutable` and `const_cast` going on for example in RooFit, this is not a good assumption, unfortunately. These checks don't apply to this PR, by the way. I'll go ahead later and make a PR with that file, minus these two checks, and then we can continue the discussion there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13892
https://github.com/root-project/root/pull/13892:424,usability,tool,tools,424,"> Should we just adopt that clang-tidy file? Yes, why not! They enforced it in all their CMSSW code base and it apparently worked fine for them. There are, however, also checks in that file I don't like. It's this `performance-unnecessary-copy-initialization` and `performance-for-range-copy`:. * https://clang.llvm.org/extra/clang-tidy/checks/performance/for-range-copy.html. * https://releases.llvm.org/10.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/performance-unnecessary-copy-initialization.html. They assume that it's fair to replace a const copy with a const reference if only const methods are called on it. But with all the `mutable` and `const_cast` going on for example in RooFit, this is not a good assumption, unfortunately. These checks don't apply to this PR, by the way. I'll go ahead later and make a PR with that file, minus these two checks, and then we can continue the discussion there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13892
https://github.com/root-project/root/pull/13892:459,usability,perform,performance-unnecessary-copy-initialization,459,"> Should we just adopt that clang-tidy file? Yes, why not! They enforced it in all their CMSSW code base and it apparently worked fine for them. There are, however, also checks in that file I don't like. It's this `performance-unnecessary-copy-initialization` and `performance-for-range-copy`:. * https://clang.llvm.org/extra/clang-tidy/checks/performance/for-range-copy.html. * https://releases.llvm.org/10.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/performance-unnecessary-copy-initialization.html. They assume that it's fair to replace a const copy with a const reference if only const methods are called on it. But with all the `mutable` and `const_cast` going on for example in RooFit, this is not a good assumption, unfortunately. These checks don't apply to this PR, by the way. I'll go ahead later and make a PR with that file, minus these two checks, and then we can continue the discussion there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13892
https://github.com/root-project/root/pull/13894:14,performance,perform,performance,14,"I checked the performance with this code snippet:. ```c++. for (int i = 0; i < 1000000; ++i) {. std::vector<int> vect(20);. auto json = TBufferJSON::ToJSON(&vect);. }. ```. fluctuates between 2.95 and 3.10 seconds in the ROOT interpreter, both with and without this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13894
https://github.com/root-project/root/pull/13894:14,usability,perform,performance,14,"I checked the performance with this code snippet:. ```c++. for (int i = 0; i < 1000000; ++i) {. std::vector<int> vect(20);. auto json = TBufferJSON::ToJSON(&vect);. }. ```. fluctuates between 2.95 and 3.10 seconds in the ROOT interpreter, both with and without this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13894
https://github.com/root-project/root/pull/13894:15,safety,test,test,15,"Sorry, I meant test vector size 10^7. ```. std::vector<int> vect(10000000);. auto json = TBufferJSON::ToJSON(&vect);. ```. Here real inline-ing should save a lot of function calls",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13894
https://github.com/root-project/root/pull/13894:15,testability,test,test,15,"Sorry, I meant test vector size 10^7. ```. std::vector<int> vect(10000000);. auto json = TBufferJSON::ToJSON(&vect);. ```. Here real inline-ing should save a lot of function calls",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13894
https://github.com/root-project/root/pull/13894:57,performance,time,time,57,"Ah, thanks for the clarification! Well, in that case the time fluctuates between 730 and 770 ms on my machine, both with and without this PR. So that looks good",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13894
https://github.com/root-project/root/issues/13895:277,energy efficiency,Draw,Draw,277,"The following trick works, because it's setting the parameter starting points close enough:. ```. const int n = 3;. double x[n] {1,2,3};. double y[n] {6,5,4};. double xerr[n] {1,1,1.0};. double yerr[n] {0.1,0.1,0.1};. auto c = new TCanvas();. auto gr = new TGraph(n,x,y);. gr->Draw(""A*"");. gr->Fit(""pol1"", ""V"");. auto c2 = new TCanvas();. auto gre = new TGraphErrors(n,x, y, xerr, yerr);. gre->Draw(""A*E"");. gre->Fit(""pol1"", ""V"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:394,energy efficiency,Draw,Draw,394,"The following trick works, because it's setting the parameter starting points close enough:. ```. const int n = 3;. double x[n] {1,2,3};. double y[n] {6,5,4};. double xerr[n] {1,1,1.0};. double yerr[n] {0.1,0.1,0.1};. auto c = new TCanvas();. auto gr = new TGraph(n,x,y);. gr->Draw(""A*"");. gr->Fit(""pol1"", ""V"");. auto c2 = new TCanvas();. auto gre = new TGraphErrors(n,x, y, xerr, yerr);. gre->Draw(""A*E"");. gre->Fit(""pol1"", ""V"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:52,modifiability,paramet,parameter,52,"The following trick works, because it's setting the parameter starting points close enough:. ```. const int n = 3;. double x[n] {1,2,3};. double y[n] {6,5,4};. double xerr[n] {1,1,1.0};. double yerr[n] {0.1,0.1,0.1};. auto c = new TCanvas();. auto gr = new TGraph(n,x,y);. gr->Draw(""A*"");. gr->Fit(""pol1"", ""V"");. auto c2 = new TCanvas();. auto gre = new TGraphErrors(n,x, y, xerr, yerr);. gre->Draw(""A*E"");. gre->Fit(""pol1"", ""V"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:78,usability,close,close,78,"The following trick works, because it's setting the parameter starting points close enough:. ```. const int n = 3;. double x[n] {1,2,3};. double y[n] {6,5,4};. double xerr[n] {1,1,1.0};. double yerr[n] {0.1,0.1,0.1};. auto c = new TCanvas();. auto gr = new TGraph(n,x,y);. gr->Draw(""A*"");. gr->Fit(""pol1"", ""V"");. auto c2 = new TCanvas();. auto gre = new TGraphErrors(n,x, y, xerr, yerr);. gre->Draw(""A*E"");. gre->Fit(""pol1"", ""V"");. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:262,energy efficiency,Draw,Draw,262,"This trick setting the initial parameters by hand also works:. ```. void fit2() {. const int n = 3;. double x[n] {1,2,3};. double y[n] {6,5,4};. double xerr[n] {1,1,1.0};. double yerr[n] {0.1,0.1,0.1};. auto c = new TCanvas();. auto gr = new TGraph(n,x,y);. gr->Draw(""A*"");. //gr->Fit(""pol1"");. auto c2 = new TCanvas();. auto gre = new TGraphErrors(n,x, y, xerr, yerr);. gre->Draw(""A*E"");. gre->Fit(""pol1"", ""V"");. TF1 *pol1 = gre->GetFunction(""pol1"");. pol1->SetParameters(5,-0.1);. gre->Fit(pol1);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:376,energy efficiency,Draw,Draw,376,"This trick setting the initial parameters by hand also works:. ```. void fit2() {. const int n = 3;. double x[n] {1,2,3};. double y[n] {6,5,4};. double xerr[n] {1,1,1.0};. double yerr[n] {0.1,0.1,0.1};. auto c = new TCanvas();. auto gr = new TGraph(n,x,y);. gr->Draw(""A*"");. //gr->Fit(""pol1"");. auto c2 = new TCanvas();. auto gre = new TGraphErrors(n,x, y, xerr, yerr);. gre->Draw(""A*E"");. gre->Fit(""pol1"", ""V"");. TF1 *pol1 = gre->GetFunction(""pol1"");. pol1->SetParameters(5,-0.1);. gre->Fit(pol1);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:31,modifiability,paramet,parameters,31,"This trick setting the initial parameters by hand also works:. ```. void fit2() {. const int n = 3;. double x[n] {1,2,3};. double y[n] {6,5,4};. double xerr[n] {1,1,1.0};. double yerr[n] {0.1,0.1,0.1};. auto c = new TCanvas();. auto gr = new TGraph(n,x,y);. gr->Draw(""A*"");. //gr->Fit(""pol1"");. auto c2 = new TCanvas();. auto gre = new TGraphErrors(n,x, y, xerr, yerr);. gre->Draw(""A*E"");. gre->Fit(""pol1"", ""V"");. TF1 *pol1 = gre->GetFunction(""pol1"");. pol1->SetParameters(5,-0.1);. gre->Fit(pol1);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/issues/13895:110,modifiability,paramet,parameters,110,"That being said, it is true that it is annoying that the fit algorithm works well without setting the initial parameters, if one uses instead:. `double y[n] {4,5,6};`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13895
https://github.com/root-project/root/pull/13900:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2204/nortcxxmod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:67,reliability,doe,does,67,This is passing the test on Jenkins and thus ready for review (how does one trigger reruns of the actions?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:20,safety,test,test,20,This is passing the test on Jenkins and thus ready for review (how does one trigger reruns of the actions?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:55,safety,review,review,55,This is passing the test on Jenkins and thus ready for review (how does one trigger reruns of the actions?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:20,testability,test,test,20,This is passing the test on Jenkins and thus ready for review (how does one trigger reruns of the actions?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:55,testability,review,review,55,This is passing the test on Jenkins and thus ready for review (how does one trigger reruns of the actions?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:46,deployability,fail,failing,46,"As far as I understand, the new test is still failing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:46,reliability,fail,failing,46,"As far as I understand, the new test is still failing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:32,safety,test,test,32,"As far as I understand, the new test is still failing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:12,testability,understand,understand,12,"As far as I understand, the new test is still failing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:32,testability,test,test,32,"As far as I understand, the new test is still failing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2004/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2004/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:9,availability,failur,failure,9,The last failure may be related to the LLVM 16 upgrade (maybe),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:9,deployability,fail,failure,9,The last failure may be related to the LLVM 16 upgrade (maybe),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:47,deployability,upgrad,upgrade,47,The last failure may be related to the LLVM 16 upgrade (maybe),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:47,modifiability,upgrad,upgrade,47,The last failure may be related to the LLVM 16 upgrade (maybe),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:9,performance,failur,failure,9,The last failure may be related to the LLVM 16 upgrade (maybe),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:9,reliability,fail,failure,9,The last failure may be related to the LLVM 16 upgrade (maybe),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2004/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2004/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2004/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2004/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13900:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2004/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13900
https://github.com/root-project/root/pull/13902:46,availability,failur,failures,46,New CI's Windows builds are happy so old CI's failures are probably spurious. Re-running new CI's failed jobs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13902
https://github.com/root-project/root/pull/13902:17,deployability,build,builds,17,New CI's Windows builds are happy so old CI's failures are probably spurious. Re-running new CI's failed jobs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13902
https://github.com/root-project/root/pull/13902:46,deployability,fail,failures,46,New CI's Windows builds are happy so old CI's failures are probably spurious. Re-running new CI's failed jobs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13902
https://github.com/root-project/root/pull/13902:98,deployability,fail,failed,98,New CI's Windows builds are happy so old CI's failures are probably spurious. Re-running new CI's failed jobs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13902
https://github.com/root-project/root/pull/13902:46,performance,failur,failures,46,New CI's Windows builds are happy so old CI's failures are probably spurious. Re-running new CI's failed jobs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13902
https://github.com/root-project/root/pull/13902:46,reliability,fail,failures,46,New CI's Windows builds are happy so old CI's failures are probably spurious. Re-running new CI's failed jobs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13902
https://github.com/root-project/root/pull/13902:98,reliability,fail,failed,98,New CI's Windows builds are happy so old CI's failures are probably spurious. Re-running new CI's failed jobs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13902
https://github.com/root-project/root/pull/13902:52,deployability,releas,release,52,Merging (sorry @dpiparo ) to make progress with the release.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13902
https://github.com/root-project/root/pull/13902:34,usability,progress,progress,34,Merging (sorry @dpiparo ) to make progress with the release.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13902
https://github.com/root-project/root/pull/13904:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2204/nortcxxmod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13904
https://github.com/root-project/root/issues/13910:494,availability,error,error,494,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:392,deployability,fail,fails,392,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:501,deployability,Fail,Failed,501,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:256,energy efficiency,model,model,256,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:311,energy efficiency,model,model,311,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:399,energy efficiency,model,model,399,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:176,integrability,pub,public,176,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:494,performance,error,error,494,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:392,reliability,fail,fails,392,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:501,reliability,Fail,Failed,501,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:345,safety,test,test,345,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:353,safety,except,except,353,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:494,safety,error,error,494,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:256,security,model,model,256,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:311,security,model,model,311,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:399,security,model,model,399,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:486,security,session,session,486,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:345,testability,test,test,345,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:494,usability,error,error,494,"The same symptom also appears if I try to make a field for a class with no default constructor:. ```python. import ROOT. ROOT.gInterpreter.Declare(""""""\. class NoDefaultCtor {. public:. NoDefaultCtor(int x) : data1_(x) {};. private:. int data1_;. };. """"""). model = ROOT.Experimental.RNTupleModel.Create(). try:. model.MakeField[""NoDefaultCtor""](""test""). except ValueError as ex:. print(ex). # fails. model.MakeField[""std::vector<float>""](""test2""). ```. There, I even get. ```. cling JIT session error: Failed to materialize symbols: { (main, { _ZSt7forwardIRPN4ROOT12Experimental6Detail10RFieldBaseEEOT_RNSt16remove_referenceIS6_E4typeE }) }. ```. which is very weird, why would we be making the symbol. ```. ROOT::Experimental::Detail::RFieldBase*& std::forward<ROOT::Experimental::Detail::RFieldBase*&>(std::remove_reference<ROOT::Experimental::Detail::RFieldBase*&>::type&). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:81,deployability,fail,failed,81,"After a quick look, this appears to a be a `DeclUnloader` problem because of the failed transaction. On the C++ prompt, both cases (abstract class and class without default constructor) work, only some warnings (again related to `DeclUnloader`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:132,integrability,abstract,abstract,132,"After a quick look, this appears to a be a `DeclUnloader` problem because of the failed transaction. On the C++ prompt, both cases (abstract class and class without default constructor) work, only some warnings (again related to `DeclUnloader`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:132,modifiability,abstract,abstract,132,"After a quick look, this appears to a be a `DeclUnloader` problem because of the failed transaction. On the C++ prompt, both cases (abstract class and class without default constructor) work, only some warnings (again related to `DeclUnloader`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13910:81,reliability,fail,failed,81,"After a quick look, this appears to a be a `DeclUnloader` problem because of the failed transaction. On the C++ prompt, both cases (abstract class and class without default constructor) work, only some warnings (again related to `DeclUnloader`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13910
https://github.com/root-project/root/issues/13917:199,performance,memor,memory,199,"> which, according to the documentation, represents a 16-bit floating point number written as a 32-bit number with truncated mantissa. . That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). To follow the pattern the new type should be `HalfFloat_t`: 16 bits in memory and 16 bits on file. And if (unlikely) we want to store less on file `HalfFloat8_t`: 16 bits in memory and 8 bits on file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:291,performance,memor,memory,291,"> which, according to the documentation, represents a 16-bit floating point number written as a 32-bit number with truncated mantissa. . That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). To follow the pattern the new type should be `HalfFloat_t`: 16 bits in memory and 16 bits on file. And if (unlikely) we want to store less on file `HalfFloat8_t`: 16 bits in memory and 8 bits on file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:391,performance,memor,memory,391,"> which, according to the documentation, represents a 16-bit floating point number written as a 32-bit number with truncated mantissa. . That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). To follow the pattern the new type should be `HalfFloat_t`: 16 bits in memory and 16 bits on file. And if (unlikely) we want to store less on file `HalfFloat8_t`: 16 bits in memory and 8 bits on file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:494,performance,memor,memory,494,"> which, according to the documentation, represents a 16-bit floating point number written as a 32-bit number with truncated mantissa. . That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). To follow the pattern the new type should be `HalfFloat_t`: 16 bits in memory and 16 bits on file. And if (unlikely) we want to store less on file `HalfFloat8_t`: 16 bits in memory and 8 bits on file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:26,usability,document,documentation,26,"> which, according to the documentation, represents a 16-bit floating point number written as a 32-bit number with truncated mantissa. . That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). To follow the pattern the new type should be `HalfFloat_t`: 16 bits in memory and 16 bits on file. And if (unlikely) we want to store less on file `HalfFloat8_t`: 16 bits in memory and 8 bits on file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:199,usability,memor,memory,199,"> which, according to the documentation, represents a 16-bit floating point number written as a 32-bit number with truncated mantissa. . That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). To follow the pattern the new type should be `HalfFloat_t`: 16 bits in memory and 16 bits on file. And if (unlikely) we want to store less on file `HalfFloat8_t`: 16 bits in memory and 8 bits on file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:291,usability,memor,memory,291,"> which, according to the documentation, represents a 16-bit floating point number written as a 32-bit number with truncated mantissa. . That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). To follow the pattern the new type should be `HalfFloat_t`: 16 bits in memory and 16 bits on file. And if (unlikely) we want to store less on file `HalfFloat8_t`: 16 bits in memory and 8 bits on file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:391,usability,memor,memory,391,"> which, according to the documentation, represents a 16-bit floating point number written as a 32-bit number with truncated mantissa. . That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). To follow the pattern the new type should be `HalfFloat_t`: 16 bits in memory and 16 bits on file. And if (unlikely) we want to store less on file `HalfFloat8_t`: 16 bits in memory and 8 bits on file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:494,usability,memor,memory,494,"> which, according to the documentation, represents a 16-bit floating point number written as a 32-bit number with truncated mantissa. . That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). To follow the pattern the new type should be `HalfFloat_t`: 16 bits in memory and 16 bits on file. And if (unlikely) we want to store less on file `HalfFloat8_t`: 16 bits in memory and 8 bits on file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:516,interoperability,architectur,architectures,516,"> That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). Whoops yes, you're right, I've fixed the description. > To follow the pattern the new type should be HalfFloat_t: 16 bits in memory and 16 bits on file. The question is how to represent this in memory. From C++23 it will be obvious, but right now some compromise would be needed. There is the `_Float16` type that works one _some_ architectures with _some_ compilers, but this is to brittle. The most portable solution would be to use an `unsigned short`/`std::uint16_t`, but this comes with the caveat that it must first be converted into a proper `float` or similar representation to do anything meaningful with it, which seems to go against the other typedefs in `RtypesCore.h`. Another option would be to do the same with `Float16_t`, where it is 16 bits on disk but still 32 bits in memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:586,modifiability,portab,portable,586,"> That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). Whoops yes, you're right, I've fixed the description. > To follow the pattern the new type should be HalfFloat_t: 16 bits in memory and 16 bits on file. The question is how to represent this in memory. From C++23 it will be obvious, but right now some compromise would be needed. There is the `_Float16` type that works one _some_ architectures with _some_ compilers, but this is to brittle. The most portable solution would be to use an `unsigned short`/`std::uint16_t`, but this comes with the caveat that it must first be converted into a proper `float` or similar representation to do anything meaningful with it, which seems to go against the other typedefs in `RtypesCore.h`. Another option would be to do the same with `Float16_t`, where it is 16 bits on disk but still 32 bits in memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:64,performance,memor,memory,64,"> That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). Whoops yes, you're right, I've fixed the description. > To follow the pattern the new type should be HalfFloat_t: 16 bits in memory and 16 bits on file. The question is how to represent this in memory. From C++23 it will be obvious, but right now some compromise would be needed. There is the `_Float16` type that works one _some_ architectures with _some_ compilers, but this is to brittle. The most portable solution would be to use an `unsigned short`/`std::uint16_t`, but this comes with the caveat that it must first be converted into a proper `float` or similar representation to do anything meaningful with it, which seems to go against the other typedefs in `RtypesCore.h`. Another option would be to do the same with `Float16_t`, where it is 16 bits on disk but still 32 bits in memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:156,performance,memor,memory,156,"> That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). Whoops yes, you're right, I've fixed the description. > To follow the pattern the new type should be HalfFloat_t: 16 bits in memory and 16 bits on file. The question is how to represent this in memory. From C++23 it will be obvious, but right now some compromise would be needed. There is the `_Float16` type that works one _some_ architectures with _some_ compilers, but this is to brittle. The most portable solution would be to use an `unsigned short`/`std::uint16_t`, but this comes with the caveat that it must first be converted into a proper `float` or similar representation to do anything meaningful with it, which seems to go against the other typedefs in `RtypesCore.h`. Another option would be to do the same with `Float16_t`, where it is 16 bits on disk but still 32 bits in memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:310,performance,memor,memory,310,"> That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). Whoops yes, you're right, I've fixed the description. > To follow the pattern the new type should be HalfFloat_t: 16 bits in memory and 16 bits on file. The question is how to represent this in memory. From C++23 it will be obvious, but right now some compromise would be needed. There is the `_Float16` type that works one _some_ architectures with _some_ compilers, but this is to brittle. The most portable solution would be to use an `unsigned short`/`std::uint16_t`, but this comes with the caveat that it must first be converted into a proper `float` or similar representation to do anything meaningful with it, which seems to go against the other typedefs in `RtypesCore.h`. Another option would be to do the same with `Float16_t`, where it is 16 bits on disk but still 32 bits in memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:379,performance,memor,memory,379,"> That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). Whoops yes, you're right, I've fixed the description. > To follow the pattern the new type should be HalfFloat_t: 16 bits in memory and 16 bits on file. The question is how to represent this in memory. From C++23 it will be obvious, but right now some compromise would be needed. There is the `_Float16` type that works one _some_ architectures with _some_ compilers, but this is to brittle. The most portable solution would be to use an `unsigned short`/`std::uint16_t`, but this comes with the caveat that it must first be converted into a proper `float` or similar representation to do anything meaningful with it, which seems to go against the other typedefs in `RtypesCore.h`. Another option would be to do the same with `Float16_t`, where it is 16 bits on disk but still 32 bits in memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:947,performance,disk,disk,947,"> That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). Whoops yes, you're right, I've fixed the description. > To follow the pattern the new type should be HalfFloat_t: 16 bits in memory and 16 bits on file. The question is how to represent this in memory. From C++23 it will be obvious, but right now some compromise would be needed. There is the `_Float16` type that works one _some_ architectures with _some_ compilers, but this is to brittle. The most portable solution would be to use an `unsigned short`/`std::uint16_t`, but this comes with the caveat that it must first be converted into a proper `float` or similar representation to do anything meaningful with it, which seems to go against the other typedefs in `RtypesCore.h`. Another option would be to do the same with `Float16_t`, where it is 16 bits on disk but still 32 bits in memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:973,performance,memor,memory,973,"> That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). Whoops yes, you're right, I've fixed the description. > To follow the pattern the new type should be HalfFloat_t: 16 bits in memory and 16 bits on file. The question is how to represent this in memory. From C++23 it will be obvious, but right now some compromise would be needed. There is the `_Float16` type that works one _some_ architectures with _some_ compilers, but this is to brittle. The most portable solution would be to use an `unsigned short`/`std::uint16_t`, but this comes with the caveat that it must first be converted into a proper `float` or similar representation to do anything meaningful with it, which seems to go against the other typedefs in `RtypesCore.h`. Another option would be to do the same with `Float16_t`, where it is 16 bits on disk but still 32 bits in memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:64,usability,memor,memory,64,"> That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). Whoops yes, you're right, I've fixed the description. > To follow the pattern the new type should be HalfFloat_t: 16 bits in memory and 16 bits on file. The question is how to represent this in memory. From C++23 it will be obvious, but right now some compromise would be needed. There is the `_Float16` type that works one _some_ architectures with _some_ compilers, but this is to brittle. The most portable solution would be to use an `unsigned short`/`std::uint16_t`, but this comes with the caveat that it must first be converted into a proper `float` or similar representation to do anything meaningful with it, which seems to go against the other typedefs in `RtypesCore.h`. Another option would be to do the same with `Float16_t`, where it is 16 bits on disk but still 32 bits in memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:156,usability,memor,memory,156,"> That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). Whoops yes, you're right, I've fixed the description. > To follow the pattern the new type should be HalfFloat_t: 16 bits in memory and 16 bits on file. The question is how to represent this in memory. From C++23 it will be obvious, but right now some compromise would be needed. There is the `_Float16` type that works one _some_ architectures with _some_ compilers, but this is to brittle. The most portable solution would be to use an `unsigned short`/`std::uint16_t`, but this comes with the caveat that it must first be converted into a proper `float` or similar representation to do anything meaningful with it, which seems to go against the other typedefs in `RtypesCore.h`. Another option would be to do the same with `Float16_t`, where it is 16 bits on disk but still 32 bits in memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:310,usability,memor,memory,310,"> That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). Whoops yes, you're right, I've fixed the description. > To follow the pattern the new type should be HalfFloat_t: 16 bits in memory and 16 bits on file. The question is how to represent this in memory. From C++23 it will be obvious, but right now some compromise would be needed. There is the `_Float16` type that works one _some_ architectures with _some_ compilers, but this is to brittle. The most portable solution would be to use an `unsigned short`/`std::uint16_t`, but this comes with the caveat that it must first be converted into a proper `float` or similar representation to do anything meaningful with it, which seems to go against the other typedefs in `RtypesCore.h`. Another option would be to do the same with `Float16_t`, where it is 16 bits on disk but still 32 bits in memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:379,usability,memor,memory,379,"> That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). Whoops yes, you're right, I've fixed the description. > To follow the pattern the new type should be HalfFloat_t: 16 bits in memory and 16 bits on file. The question is how to represent this in memory. From C++23 it will be obvious, but right now some compromise would be needed. There is the `_Float16` type that works one _some_ architectures with _some_ compilers, but this is to brittle. The most portable solution would be to use an `unsigned short`/`std::uint16_t`, but this comes with the caveat that it must first be converted into a proper `float` or similar representation to do anything meaningful with it, which seems to go against the other typedefs in `RtypesCore.h`. Another option would be to do the same with `Float16_t`, where it is 16 bits on disk but still 32 bits in memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:973,usability,memor,memory,973,"> That seems reversed and/or ambiguous. Float16_t is 32 bits in memory and 16 bits on file (Same pattern as `Double32_t` which is 64 bits (per `double`) in memory and 32 bits on file). Whoops yes, you're right, I've fixed the description. > To follow the pattern the new type should be HalfFloat_t: 16 bits in memory and 16 bits on file. The question is how to represent this in memory. From C++23 it will be obvious, but right now some compromise would be needed. There is the `_Float16` type that works one _some_ architectures with _some_ compilers, but this is to brittle. The most portable solution would be to use an `unsigned short`/`std::uint16_t`, but this comes with the caveat that it must first be converted into a proper `float` or similar representation to do anything meaningful with it, which seems to go against the other typedefs in `RtypesCore.h`. Another option would be to do the same with `Float16_t`, where it is 16 bits on disk but still 32 bits in memory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:71,deployability,version,version,71,I can only see 2 viable options. EIther we have a platform independent version that is 16 bits in memory (and 16 bits on file) or we explicitly only support it on the platform that do (where it will be 16 bits in memory and 16 bits on disk) _and_ tweak the I/O so that on the other platforms they can be read in the larger types (directly),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:71,integrability,version,version,71,I can only see 2 viable options. EIther we have a platform independent version that is 16 bits in memory (and 16 bits on file) or we explicitly only support it on the platform that do (where it will be 16 bits in memory and 16 bits on disk) _and_ tweak the I/O so that on the other platforms they can be read in the larger types (directly),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:50,interoperability,platform,platform,50,I can only see 2 viable options. EIther we have a platform independent version that is 16 bits in memory (and 16 bits on file) or we explicitly only support it on the platform that do (where it will be 16 bits in memory and 16 bits on disk) _and_ tweak the I/O so that on the other platforms they can be read in the larger types (directly),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:167,interoperability,platform,platform,167,I can only see 2 viable options. EIther we have a platform independent version that is 16 bits in memory (and 16 bits on file) or we explicitly only support it on the platform that do (where it will be 16 bits in memory and 16 bits on disk) _and_ tweak the I/O so that on the other platforms they can be read in the larger types (directly),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:282,interoperability,platform,platforms,282,I can only see 2 viable options. EIther we have a platform independent version that is 16 bits in memory (and 16 bits on file) or we explicitly only support it on the platform that do (where it will be 16 bits in memory and 16 bits on disk) _and_ tweak the I/O so that on the other platforms they can be read in the larger types (directly),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:71,modifiability,version,version,71,I can only see 2 viable options. EIther we have a platform independent version that is 16 bits in memory (and 16 bits on file) or we explicitly only support it on the platform that do (where it will be 16 bits in memory and 16 bits on disk) _and_ tweak the I/O so that on the other platforms they can be read in the larger types (directly),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:98,performance,memor,memory,98,I can only see 2 viable options. EIther we have a platform independent version that is 16 bits in memory (and 16 bits on file) or we explicitly only support it on the platform that do (where it will be 16 bits in memory and 16 bits on disk) _and_ tweak the I/O so that on the other platforms they can be read in the larger types (directly),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:213,performance,memor,memory,213,I can only see 2 viable options. EIther we have a platform independent version that is 16 bits in memory (and 16 bits on file) or we explicitly only support it on the platform that do (where it will be 16 bits in memory and 16 bits on disk) _and_ tweak the I/O so that on the other platforms they can be read in the larger types (directly),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:235,performance,disk,disk,235,I can only see 2 viable options. EIther we have a platform independent version that is 16 bits in memory (and 16 bits on file) or we explicitly only support it on the platform that do (where it will be 16 bits in memory and 16 bits on disk) _and_ tweak the I/O so that on the other platforms they can be read in the larger types (directly),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:257,performance,I/O,I/O,257,I can only see 2 viable options. EIther we have a platform independent version that is 16 bits in memory (and 16 bits on file) or we explicitly only support it on the platform that do (where it will be 16 bits in memory and 16 bits on disk) _and_ tweak the I/O so that on the other platforms they can be read in the larger types (directly),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:98,usability,memor,memory,98,I can only see 2 viable options. EIther we have a platform independent version that is 16 bits in memory (and 16 bits on file) or we explicitly only support it on the platform that do (where it will be 16 bits in memory and 16 bits on disk) _and_ tweak the I/O so that on the other platforms they can be read in the larger types (directly),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:149,usability,support,support,149,I can only see 2 viable options. EIther we have a platform independent version that is 16 bits in memory (and 16 bits on file) or we explicitly only support it on the platform that do (where it will be 16 bits in memory and 16 bits on disk) _and_ tweak the I/O so that on the other platforms they can be read in the larger types (directly),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:213,usability,memor,memory,213,I can only see 2 viable options. EIther we have a platform independent version that is 16 bits in memory (and 16 bits on file) or we explicitly only support it on the platform that do (where it will be 16 bits in memory and 16 bits on disk) _and_ tweak the I/O so that on the other platforms they can be read in the larger types (directly),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:934,integrability,sub,sub,934,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:140,interoperability,platform,platforms,140,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:69,performance,disk,disk,69,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:179,performance,disk,disk,179,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:201,performance,memor,memory,201,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:240,performance,time,time,240,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:322,performance,disk,disk,322,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:360,performance,memor,memory,360,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:588,performance,disk,disk,588,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:632,performance,memor,memory,632,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:992,performance,memor,memory-half-on-disk,992,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:11,testability,understand,understanding,11,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:201,usability,memor,memory,201,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:360,usability,memor,memory,360,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:519,usability,indicat,indicates,519,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:533,usability,user,users,533,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:632,usability,memor,memory,632,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:870,usability,User,Users,870,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:992,usability,memor,memory-half-on-disk,992,"Here is my understanding:. - We add an RNTuple column type (i.e., on-disk representation) for IEEE half precision float. - We allow, on all platforms, reading a half precision on-disk float into an in-memory `float` or `double`. - When the time of `f16` comes (C++23), we of course also enable reading a half precision on-disk float into the half precision in-memory type. Now:. - We add add a new typedef to `float`, whose name we need to agree on, e.g. `FloatHalf_t`. This new typedef is analogous to `Float16_t`. It indicates the users intent to store a `float` with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a `float` field, having its type alias set to `FloatHalf_t`, and an attached column of type `kReal16`. The new typedef is not strictly necessary to use half precision floats. Users can enforce a certain column representation of fields and sub fields. But it makes it a lot easier to use ""float-in-memory-half-on-disk"" types as part of other types (classes, collections).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:201,performance,disk,disk,201,"< We add add a new typedef to float, whose name we need to agree on, e.g. FloatHalf_t. This new typedef is analogous to Float16_t. It indicates the users intent to store a float with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a float field, having its type alias set to FloatHalf_t, and an attached column of type kReal16. I am confused. Here/above it seems to describe 'strictly' `Float16_t` i.e. ""intent to store a float with half precision on-disk but to use it with single-precision"". The difference with the new typedef (not always present) would be that the intent is to use half-of-single-precision in memory too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:245,performance,memor,memory,245,"< We add add a new typedef to float, whose name we need to agree on, e.g. FloatHalf_t. This new typedef is analogous to Float16_t. It indicates the users intent to store a float with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a float field, having its type alias set to FloatHalf_t, and an attached column of type kReal16. I am confused. Here/above it seems to describe 'strictly' `Float16_t` i.e. ""intent to store a float with half precision on-disk but to use it with single-precision"". The difference with the new typedef (not always present) would be that the intent is to use half-of-single-precision in memory too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:528,performance,disk,disk,528,"< We add add a new typedef to float, whose name we need to agree on, e.g. FloatHalf_t. This new typedef is analogous to Float16_t. It indicates the users intent to store a float with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a float field, having its type alias set to FloatHalf_t, and an attached column of type kReal16. I am confused. Here/above it seems to describe 'strictly' `Float16_t` i.e. ""intent to store a float with half precision on-disk but to use it with single-precision"". The difference with the new typedef (not always present) would be that the intent is to use half-of-single-precision in memory too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:691,performance,memor,memory,691,"< We add add a new typedef to float, whose name we need to agree on, e.g. FloatHalf_t. This new typedef is analogous to Float16_t. It indicates the users intent to store a float with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a float field, having its type alias set to FloatHalf_t, and an attached column of type kReal16. I am confused. Here/above it seems to describe 'strictly' `Float16_t` i.e. ""intent to store a float with half precision on-disk but to use it with single-precision"". The difference with the new typedef (not always present) would be that the intent is to use half-of-single-precision in memory too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:134,usability,indicat,indicates,134,"< We add add a new typedef to float, whose name we need to agree on, e.g. FloatHalf_t. This new typedef is analogous to Float16_t. It indicates the users intent to store a float with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a float field, having its type alias set to FloatHalf_t, and an attached column of type kReal16. I am confused. Here/above it seems to describe 'strictly' `Float16_t` i.e. ""intent to store a float with half precision on-disk but to use it with single-precision"". The difference with the new typedef (not always present) would be that the intent is to use half-of-single-precision in memory too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:148,usability,user,users,148,"< We add add a new typedef to float, whose name we need to agree on, e.g. FloatHalf_t. This new typedef is analogous to Float16_t. It indicates the users intent to store a float with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a float field, having its type alias set to FloatHalf_t, and an attached column of type kReal16. I am confused. Here/above it seems to describe 'strictly' `Float16_t` i.e. ""intent to store a float with half precision on-disk but to use it with single-precision"". The difference with the new typedef (not always present) would be that the intent is to use half-of-single-precision in memory too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:245,usability,memor,memory,245,"< We add add a new typedef to float, whose name we need to agree on, e.g. FloatHalf_t. This new typedef is analogous to Float16_t. It indicates the users intent to store a float with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a float field, having its type alias set to FloatHalf_t, and an attached column of type kReal16. I am confused. Here/above it seems to describe 'strictly' `Float16_t` i.e. ""intent to store a float with half precision on-disk but to use it with single-precision"". The difference with the new typedef (not always present) would be that the intent is to use half-of-single-precision in memory too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:691,usability,memor,memory,691,"< We add add a new typedef to float, whose name we need to agree on, e.g. FloatHalf_t. This new typedef is analogous to Float16_t. It indicates the users intent to store a float with half precision on-disk but to use it with single-precision in memory. Using the new typedef with RNTuple means that we store a float field, having its type alias set to FloatHalf_t, and an attached column of type kReal16. I am confused. Here/above it seems to describe 'strictly' `Float16_t` i.e. ""intent to store a float with half precision on-disk but to use it with single-precision"". The difference with the new typedef (not always present) would be that the intent is to use half-of-single-precision in memory too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:78,availability,consist,consistent,78,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:473,availability,error,errors,473,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:426,deployability,depend,dependent,426,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:14,energy efficiency,current,current,14,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:426,integrability,depend,dependent,426,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:417,interoperability,platform,platform-dependent,417,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:252,modifiability,concern,concerns,252,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:426,modifiability,depend,dependent,426,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:395,performance,memor,memory,395,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:473,performance,error,errors,473,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:426,safety,depend,dependent,426,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:473,safety,error,errors,473,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:252,testability,concern,concerns,252,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:426,testability,depend,dependent,426,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:78,usability,consist,consistent,78,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:395,usability,memor,memory,395,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:473,usability,error,errors,473,"For RNTuple's current purposes, what Jakob proposes would suffice. It is also consistent with the way `Float16_t` is represented. The purpose of this issue was mostly to gauge whether this is indeed a reasonable addition since this change `RtypesCore` concerns the entire project and not just RNTuple, or if there are any strong reasons not to do it this way. In any case, I think making the in-memory representation platform-dependent will lead to confusion and potential errors.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:125,performance,disk,disk,125,"> I am confused. Here/above it seems to describe 'strictly' `Float16_t` i.e. ""intent to store a float with half precision on-disk but to use it with single-precision"". The difference with the new typedef (not always present) would be that the intent is to use half-of-single-precision in memory too. The `Float16_t` type is not half precision on disk. It is single precision with a shortened mantissa.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:288,performance,memor,memory,288,"> I am confused. Here/above it seems to describe 'strictly' `Float16_t` i.e. ""intent to store a float with half precision on-disk but to use it with single-precision"". The difference with the new typedef (not always present) would be that the intent is to use half-of-single-precision in memory too. The `Float16_t` type is not half precision on disk. It is single precision with a shortened mantissa.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:346,performance,disk,disk,346,"> I am confused. Here/above it seems to describe 'strictly' `Float16_t` i.e. ""intent to store a float with half precision on-disk but to use it with single-precision"". The difference with the new typedef (not always present) would be that the intent is to use half-of-single-precision in memory too. The `Float16_t` type is not half precision on disk. It is single precision with a shortened mantissa.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:288,usability,memor,memory,288,"> I am confused. Here/above it seems to describe 'strictly' `Float16_t` i.e. ""intent to store a float with half precision on-disk but to use it with single-precision"". The difference with the new typedef (not always present) would be that the intent is to use half-of-single-precision in memory too. The `Float16_t` type is not half precision on disk. It is single precision with a shortened mantissa.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:53,usability,clear,clear,53,Fair enough. We need to make that the distinction is clear.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/issues/13917:208,usability,support,supported,208,Based on the discussions regarding this PR I think that for now we should leave `RtypesCore` (and friends) alone. For the RNTuple use case we can use a less invasive solution until `std::float16` is properly supported.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13917
https://github.com/root-project/root/pull/13919:54,safety,test,test,54,"Hi @linev , thanks for this improvement! Is there any test with the mentioned reproducer?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13919
https://github.com/root-project/root/pull/13919:54,testability,test,test,54,"Hi @linev , thanks for this improvement! Is there any test with the mentioned reproducer?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13919
https://github.com/root-project/root/pull/13919:142,availability,reliab,reliable,142,"Macro can run in batch, but one cannot really test result of the running macro. Problem is missing drawing of TGraph2D points. We do not have reliable methods to check if these drawing done or not. Very inaccurate method is size of produced png or gif image. Probably it will be larger with correct drawing, but not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13919
https://github.com/root-project/root/pull/13919:99,energy efficiency,draw,drawing,99,"Macro can run in batch, but one cannot really test result of the running macro. Problem is missing drawing of TGraph2D points. We do not have reliable methods to check if these drawing done or not. Very inaccurate method is size of produced png or gif image. Probably it will be larger with correct drawing, but not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13919
https://github.com/root-project/root/pull/13919:177,energy efficiency,draw,drawing,177,"Macro can run in batch, but one cannot really test result of the running macro. Problem is missing drawing of TGraph2D points. We do not have reliable methods to check if these drawing done or not. Very inaccurate method is size of produced png or gif image. Probably it will be larger with correct drawing, but not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13919
https://github.com/root-project/root/pull/13919:299,energy efficiency,draw,drawing,299,"Macro can run in batch, but one cannot really test result of the running macro. Problem is missing drawing of TGraph2D points. We do not have reliable methods to check if these drawing done or not. Very inaccurate method is size of produced png or gif image. Probably it will be larger with correct drawing, but not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13919
https://github.com/root-project/root/pull/13919:17,integrability,batch,batch,17,"Macro can run in batch, but one cannot really test result of the running macro. Problem is missing drawing of TGraph2D points. We do not have reliable methods to check if these drawing done or not. Very inaccurate method is size of produced png or gif image. Probably it will be larger with correct drawing, but not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13919
https://github.com/root-project/root/pull/13919:17,performance,batch,batch,17,"Macro can run in batch, but one cannot really test result of the running macro. Problem is missing drawing of TGraph2D points. We do not have reliable methods to check if these drawing done or not. Very inaccurate method is size of produced png or gif image. Probably it will be larger with correct drawing, but not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13919
https://github.com/root-project/root/pull/13919:142,reliability,reliab,reliable,142,"Macro can run in batch, but one cannot really test result of the running macro. Problem is missing drawing of TGraph2D points. We do not have reliable methods to check if these drawing done or not. Very inaccurate method is size of produced png or gif image. Probably it will be larger with correct drawing, but not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13919
https://github.com/root-project/root/pull/13919:46,safety,test,test,46,"Macro can run in batch, but one cannot really test result of the running macro. Problem is missing drawing of TGraph2D points. We do not have reliable methods to check if these drawing done or not. Very inaccurate method is size of produced png or gif image. Probably it will be larger with correct drawing, but not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13919
https://github.com/root-project/root/pull/13919:46,testability,test,test,46,"Macro can run in batch, but one cannot really test result of the running macro. Problem is missing drawing of TGraph2D points. We do not have reliable methods to check if these drawing done or not. Very inaccurate method is size of produced png or gif image. Probably it will be larger with correct drawing, but not sure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13919
https://github.com/root-project/root/issues/13922:7,deployability,instal,installed,7,I just installed ROOT master (6.31/01) on an Ubuntu machine:. ```. Linux root-ubuntu-2004-3 5.4.0-156-generic #173-Ubuntu SMP Tue Jul 11 07:25:22 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. I am logged on it from a Mac via `ssh`. `rootls` gives:. ```. $ rootls ./tutorials/hsimple.root. hprof hpx hpxpy ntuple. ```. and the X server is not spawned.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:197,deployability,log,logged,197,I just installed ROOT master (6.31/01) on an Ubuntu machine:. ```. Linux root-ubuntu-2004-3 5.4.0-156-generic #173-Ubuntu SMP Tue Jul 11 07:25:22 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. I am logged on it from a Mac via `ssh`. `rootls` gives:. ```. $ rootls ./tutorials/hsimple.root. hprof hpx hpxpy ntuple. ```. and the X server is not spawned.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:197,safety,log,logged,197,I just installed ROOT master (6.31/01) on an Ubuntu machine:. ```. Linux root-ubuntu-2004-3 5.4.0-156-generic #173-Ubuntu SMP Tue Jul 11 07:25:22 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. I am logged on it from a Mac via `ssh`. `rootls` gives:. ```. $ rootls ./tutorials/hsimple.root. hprof hpx hpxpy ntuple. ```. and the X server is not spawned.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:197,security,log,logged,197,I just installed ROOT master (6.31/01) on an Ubuntu machine:. ```. Linux root-ubuntu-2004-3 5.4.0-156-generic #173-Ubuntu SMP Tue Jul 11 07:25:22 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. I am logged on it from a Mac via `ssh`. `rootls` gives:. ```. $ rootls ./tutorials/hsimple.root. hprof hpx hpxpy ntuple. ```. and the X server is not spawned.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:226,security,ssh,ssh,226,I just installed ROOT master (6.31/01) on an Ubuntu machine:. ```. Linux root-ubuntu-2004-3 5.4.0-156-generic #173-Ubuntu SMP Tue Jul 11 07:25:22 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. I am logged on it from a Mac via `ssh`. `rootls` gives:. ```. $ rootls ./tutorials/hsimple.root. hprof hpx hpxpy ntuple. ```. and the X server is not spawned.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:197,testability,log,logged,197,I just installed ROOT master (6.31/01) on an Ubuntu machine:. ```. Linux root-ubuntu-2004-3 5.4.0-156-generic #173-Ubuntu SMP Tue Jul 11 07:25:22 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux. ```. I am logged on it from a Mac via `ssh`. `rootls` gives:. ```. $ rootls ./tutorials/hsimple.root. hprof hpx hpxpy ntuple. ```. and the X server is not spawned.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:27,usability,hint,hint,27,@andresailer do you have a hint for us?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:45,reliability,doe,does,45,"@dpiparo I cannot reproduce the issue. (What does ""X"" spawn mean? A window pops up?). (To be more precise: my colleague with a mac cannot) Can you reproduce the issue? ```. ssh lxplus. source /cvmfs/sft.cern.ch/lcg/views/LCG_104b/x86_64-el9-gcc13-opt/setup.sh. rootls some/path/to/a/file.root. ```. @ntadej: Does it still happen with 104d (delta)? Could it be some magic behind `lsetup`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:308,reliability,Doe,Does,308,"@dpiparo I cannot reproduce the issue. (What does ""X"" spawn mean? A window pops up?). (To be more precise: my colleague with a mac cannot) Can you reproduce the issue? ```. ssh lxplus. source /cvmfs/sft.cern.ch/lcg/views/LCG_104b/x86_64-el9-gcc13-opt/setup.sh. rootls some/path/to/a/file.root. ```. @ntadej: Does it still happen with 104d (delta)? Could it be some magic behind `lsetup`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:173,security,ssh,ssh,173,"@dpiparo I cannot reproduce the issue. (What does ""X"" spawn mean? A window pops up?). (To be more precise: my colleague with a mac cannot) Can you reproduce the issue? ```. ssh lxplus. source /cvmfs/sft.cern.ch/lcg/views/LCG_104b/x86_64-el9-gcc13-opt/setup.sh. rootls some/path/to/a/file.root. ```. @ntadej: Does it still happen with 104d (delta)? Could it be some magic behind `lsetup`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:76,usability,close,close,76,Thanks @andresailer . Since also @couet commented last October I propose to close the issue and invite @ntadej to re-open in case this is still a problem and we can help with it at the ROOT level.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/issues/13922:165,usability,help,help,165,Thanks @andresailer . Since also @couet commented last October I propose to close the issue and invite @ntadej to re-open in case this is still a problem and we can help with it at the ROOT level.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13922
https://github.com/root-project/root/pull/13926:39,availability,failur,failures,39,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:361,availability,Down,Downgrading,361,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:39,deployability,fail,failures,39,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:125,deployability,depend,dependency,125,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:225,deployability,releas,release,225,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:395,deployability,version,version,395,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:550,deployability,updat,updated,550,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:558,deployability,depend,dependency,558,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:125,integrability,depend,dependency,125,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:349,integrability,event,event,349,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:395,integrability,version,version,395,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:558,integrability,depend,dependency,558,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:150,interoperability,specif,specifically,150,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:114,modifiability,pac,package,114,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:125,modifiability,depend,dependency,125,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:395,modifiability,version,version,395,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:558,modifiability,depend,dependency,558,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:39,performance,failur,failures,39,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:39,reliability,fail,failures,39,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:125,safety,depend,dependency,125,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:207,safety,except,exceptions,207,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:462,safety,test,testing,462,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:512,safety,hot,hotfix,512,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:550,safety,updat,updated,550,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:558,safety,depend,dependency,558,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:550,security,updat,updated,550,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:125,testability,depend,dependency,125,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:462,testability,test,testing,462,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:558,testability,depend,dependency,558,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/pull/13926:481,usability,confirm,confirms,481,I also found the culprit of the new CI failures. It's the Python [tblib](https://github.com/ionelmc/python-tblib) package (a dependency of Dask) that specifically treats the serialization/deserialization of exceptions. A new release appeared on Oct 22th and that somehow forces the serialization of the `std::runtime_error` thrown in the RDataFrame event loop. Downgrading to the previous tblib version makes the problem disappear on the alma9 CI image that I'm testing with. This confirms the necessity of this hotfix since we have to deal with the updated dependency.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13926
https://github.com/root-project/root/issues/13927:109,safety,avoid,avoid,109,And looking in the TF3.cxx - same problem is there. Have no idea when and how such mode is used - I tried to avoid it in web canvas.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:187,testability,simpl,simple,187,Looks like the problem is present since the beginning. . Already initial commit https://github.com/root-project/root/commit/852600061bcacd9b255d44f6312c96b6b1e00a2d has it. I can provide simple fix which makes it properly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/issues/13927:187,usability,simpl,simple,187,Looks like the problem is present since the beginning. . Already initial commit https://github.com/root-project/root/commit/852600061bcacd9b255d44f6312c96b6b1e00a2d has it. I can provide simple fix which makes it properly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13927
https://github.com/root-project/root/pull/13935:103,usability,person,person,103,I doubt that we need this change - only the TDataType change might be needed. I'll discuss with you in person to convince me! :-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13935
https://github.com/root-project/root/pull/13935:173,performance,I/O,I/O,173,"> I doubt that we need this change - only the TDataType change might be needed. I'll discuss with you in person to convince me! :-). Without the opaque typedef, the regular I/O as no way to distinguish between one kind of float and the other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13935
https://github.com/root-project/root/pull/13935:105,usability,person,person,105,"> I doubt that we need this change - only the TDataType change might be needed. I'll discuss with you in person to convince me! :-). Without the opaque typedef, the regular I/O as no way to distinguish between one kind of float and the other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13935
https://github.com/root-project/root/pull/13935:208,usability,support,supported,208,Based on the discussions regarding this PR I think that for now we should leave `RtypesCore` (and friends) alone. For the RNTuple use case we can use a less invasive solution until `std::float16` is properly supported.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13935
https://github.com/root-project/root/pull/13938:218,deployability,build,build,218,"Hi Marta, these fixes needed to be done anyway but I am not sure this will make df106*.C reappear ... I debugged that locally until now but I could not understand why this tutorial disappeared. Let's see the next full build...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13938
https://github.com/root-project/root/pull/13938:152,testability,understand,understand,152,"Hi Marta, these fixes needed to be done anyway but I am not sure this will make df106*.C reappear ... I debugged that locally until now but I could not understand why this tutorial disappeared. Let's see the next full build...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13938
https://github.com/root-project/root/pull/13938:220,deployability,build,build,220,"> Hi Marta, these fixes needed to be done anyway but I am not sure this will make df106*.C reappear ... I debugged that locally until now but I could not understand why this tutorial disappeared. Let's see the next full build... Actually the df106*.C is a new tutorial, before we only had the python version, so it was never on the website before",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13938
https://github.com/root-project/root/pull/13938:300,deployability,version,version,300,"> Hi Marta, these fixes needed to be done anyway but I am not sure this will make df106*.C reappear ... I debugged that locally until now but I could not understand why this tutorial disappeared. Let's see the next full build... Actually the df106*.C is a new tutorial, before we only had the python version, so it was never on the website before",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13938
https://github.com/root-project/root/pull/13938:300,integrability,version,version,300,"> Hi Marta, these fixes needed to be done anyway but I am not sure this will make df106*.C reappear ... I debugged that locally until now but I could not understand why this tutorial disappeared. Let's see the next full build... Actually the df106*.C is a new tutorial, before we only had the python version, so it was never on the website before",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13938
https://github.com/root-project/root/pull/13938:300,modifiability,version,version,300,"> Hi Marta, these fixes needed to be done anyway but I am not sure this will make df106*.C reappear ... I debugged that locally until now but I could not understand why this tutorial disappeared. Let's see the next full build... Actually the df106*.C is a new tutorial, before we only had the python version, so it was never on the website before",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13938
https://github.com/root-project/root/pull/13938:154,testability,understand,understand,154,"> Hi Marta, these fixes needed to be done anyway but I am not sure this will make df106*.C reappear ... I debugged that locally until now but I could not understand why this tutorial disappeared. Let's see the next full build... Actually the df106*.C is a new tutorial, before we only had the python version, so it was never on the website before",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13938
https://github.com/root-project/root/pull/13939:266,integrability,interfac,interfaces,266,"Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:266,interoperability,interfac,interfaces,266,"Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:266,modifiability,interfac,interfaces,266,"Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:94,reliability,doE,doEval,94,"Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:966,deployability,stack,stack,966,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces? Hi @vepadulano, thanks for your comments! The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:. * git grepability: it's not good for code navigation is the name of one function is a substring of another function name. * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:268,integrability,interfac,interfaces,268,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces? Hi @vepadulano, thanks for your comments! The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:. * git grepability: it's not good for code navigation is the name of one function is a substring of another function name. * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:407,integrability,interfac,interface,407,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces? Hi @vepadulano, thanks for your comments! The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:. * git grepability: it's not good for code navigation is the name of one function is a substring of another function name. * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:691,integrability,sub,substring,691,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces? Hi @vepadulano, thanks for your comments! The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:. * git grepability: it's not good for code navigation is the name of one function is a substring of another function name. * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:268,interoperability,interfac,interfaces,268,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces? Hi @vepadulano, thanks for your comments! The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:. * git grepability: it's not good for code navigation is the name of one function is a substring of another function name. * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:407,interoperability,interfac,interface,407,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces? Hi @vepadulano, thanks for your comments! The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:. * git grepability: it's not good for code navigation is the name of one function is a substring of another function name. * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:268,modifiability,interfac,interfaces,268,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces? Hi @vepadulano, thanks for your comments! The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:. * git grepability: it's not good for code navigation is the name of one function is a substring of another function name. * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:400,modifiability,scal,scalar,400,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces? Hi @vepadulano, thanks for your comments! The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:. * git grepability: it's not good for code navigation is the name of one function is a substring of another function name. * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:407,modifiability,interfac,interface,407,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces? Hi @vepadulano, thanks for your comments! The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:. * git grepability: it's not good for code navigation is the name of one function is a substring of another function name. * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:96,reliability,doE,doEval,96,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces? Hi @vepadulano, thanks for your comments! The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:. * git grepability: it's not good for code navigation is the name of one function is a substring of another function name. * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:435,reliability,doE,doEval,435,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces? Hi @vepadulano, thanks for your comments! The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:. * git grepability: it's not good for code navigation is the name of one function is a substring of another function name. * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:579,reliability,doE,doEval,579,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces? Hi @vepadulano, thanks for your comments! The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:. * git grepability: it's not good for code navigation is the name of one function is a substring of another function name. * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:758,reliability,doE,doEval,758,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces? Hi @vepadulano, thanks for your comments! The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:. * git grepability: it's not good for code navigation is the name of one function is a substring of another function name. * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:1031,reliability,DoE,DoEval,1031,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces? Hi @vepadulano, thanks for your comments! The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:. * git grepability: it's not good for code navigation is the name of one function is a substring of another function name. * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:647,usability,navigat,navigation,647,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces? Hi @vepadulano, thanks for your comments! The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:. * git grepability: it's not good for code navigation is the name of one function is a substring of another function name. * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13939:803,usability,user,user,803,"> Just a fly-by comment. While reading the PR description I initially thought that `RooAbsReal::doEval` could maybe just be called `RooAbsReal::eval`, but then I also read there is another function called `RooAbsReal::evaluate`. What is the difference between the two interfaces? Hi @vepadulano, thanks for your comments! The `RooAbsReal::evaluate()` is for evaluating a single data point in the old scalar interface, and `RooAbsReal::doEval()` would be to evaluate arrays in the new vectorizing evaluation backend. Indeed, I considered calling it `eval`, but decided to go for `doEval` for two reasons:. * git grepability: it's not good for code navigation is the name of one function is a substring of another function name. * existing ROOT patterns: the `doEval` function should not be called by the user, but is used internally in the `RooFit::Evaluator`. We already have this pattern in ROOT Math, where we prefix internal functions that are deeper in the call stack but actually do the work with ""do"" or ""Do"" (`DoMinimize`, `DoEval`, `DoGetValue`, etc.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13939
https://github.com/root-project/root/pull/13941:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13941
https://github.com/root-project/root/pull/13946:34,availability,failur,failures,34,@bellenot I do not understand the failures in the tests. But I am sure has nothing to do with the actual proposed changes. Can this be merged to be ready for tonight's LCG builds?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:34,deployability,fail,failures,34,@bellenot I do not understand the failures in the tests. But I am sure has nothing to do with the actual proposed changes. Can this be merged to be ready for tonight's LCG builds?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:172,deployability,build,builds,172,@bellenot I do not understand the failures in the tests. But I am sure has nothing to do with the actual proposed changes. Can this be merged to be ready for tonight's LCG builds?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:34,performance,failur,failures,34,@bellenot I do not understand the failures in the tests. But I am sure has nothing to do with the actual proposed changes. Can this be merged to be ready for tonight's LCG builds?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:34,reliability,fail,failures,34,@bellenot I do not understand the failures in the tests. But I am sure has nothing to do with the actual proposed changes. Can this be merged to be ready for tonight's LCG builds?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:50,safety,test,tests,50,@bellenot I do not understand the failures in the tests. But I am sure has nothing to do with the actual proposed changes. Can this be merged to be ready for tonight's LCG builds?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:19,testability,understand,understand,19,@bellenot I do not understand the failures in the tests. But I am sure has nothing to do with the actual proposed changes. Can this be merged to be ready for tonight's LCG builds?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:50,testability,test,tests,50,@bellenot I do not understand the failures in the tests. But I am sure has nothing to do with the actual proposed changes. Can this be merged to be ready for tonight's LCG builds?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:36,availability,failur,failures,36,> @bellenot I do not understand the failures in the tests. But I am sure has nothing to do with the actual proposed changes. Can this be merged to be ready for tonight's LCG builds? Sure! Done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:36,deployability,fail,failures,36,> @bellenot I do not understand the failures in the tests. But I am sure has nothing to do with the actual proposed changes. Can this be merged to be ready for tonight's LCG builds? Sure! Done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:174,deployability,build,builds,174,> @bellenot I do not understand the failures in the tests. But I am sure has nothing to do with the actual proposed changes. Can this be merged to be ready for tonight's LCG builds? Sure! Done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:36,performance,failur,failures,36,> @bellenot I do not understand the failures in the tests. But I am sure has nothing to do with the actual proposed changes. Can this be merged to be ready for tonight's LCG builds? Sure! Done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:36,reliability,fail,failures,36,> @bellenot I do not understand the failures in the tests. But I am sure has nothing to do with the actual proposed changes. Can this be merged to be ready for tonight's LCG builds? Sure! Done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:52,safety,test,tests,52,> @bellenot I do not understand the failures in the tests. But I am sure has nothing to do with the actual proposed changes. Can this be merged to be ready for tonight's LCG builds? Sure! Done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:21,testability,understand,understand,21,> @bellenot I do not understand the failures in the tests. But I am sure has nothing to do with the actual proposed changes. Can this be merged to be ready for tonight's LCG builds? Sure! Done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:52,testability,test,tests,52,> @bellenot I do not understand the failures in the tests. But I am sure has nothing to do with the actual proposed changes. Can this be merged to be ready for tonight's LCG builds? Sure! Done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:22,deployability,build,builds,22,@peremato are the LCG builds OK?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:97,deployability,patch,patches,97,"@bellenot Yes, for the master of ROOT are good (dev3) . Can this be cherry picked to the 6.28.00-patches (dev4)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:97,safety,patch,patches,97,"@bellenot Yes, for the master of ROOT are good (dev3) . Can this be cherry picked to the 6.28.00-patches (dev4)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13946:97,security,patch,patches,97,"@bellenot Yes, for the master of ROOT are good (dev3) . Can this be cherry picked to the 6.28.00-patches (dev4)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13946
https://github.com/root-project/root/pull/13949:175,safety,test,testing,175,"I mention already - this code was buggy from the beginning. . But only if you call `f1->Save(0,0,0,0,0,0)`. Seems to be nobody was using it this way. I am not sure if we have testing of `TF1::Save()` and `TF1::GetSave()` methods.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:175,testability,test,testing,175,"I mention already - this code was buggy from the beginning. . But only if you call `f1->Save(0,0,0,0,0,0)`. Seems to be nobody was using it this way. I am not sure if we have testing of `TF1::Save()` and `TF1::GetSave()` methods.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:27,safety,test,testing,27,"> I am not sure if we have testing of TF1::Save() and TF1::GetSave() methods. We need to add the test for both `f1->Save(0,0,0,0,0,0)` and the other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:97,safety,test,test,97,"> I am not sure if we have testing of TF1::Save() and TF1::GetSave() methods. We need to add the test for both `f1->Save(0,0,0,0,0,0)` and the other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:27,testability,test,testing,27,"> I am not sure if we have testing of TF1::Save() and TF1::GetSave() methods. We need to add the test for both `f1->Save(0,0,0,0,0,0)` and the other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:97,testability,test,test,97,"> I am not sure if we have testing of TF1::Save() and TF1::GetSave() methods. We need to add the test for both `f1->Save(0,0,0,0,0,0)` and the other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:16,safety,test,testing,16,@pcanal . I add testing for TF1/TF2/TF3 Save() / GetSave() methods. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:16,testability,test,testing,16,@pcanal . I add testing for TF1/TF2/TF3 Save() / GetSave() methods. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:628,availability,reliab,reliable,628,> I think it makes more sense to me to evaluate and save the function values on the bin centres and not on the edges. It depends that one wants to do with these saved values. . To use with `TF1::GetSave()` - then current approach is better. One covers complete range. If values at bin centers will be save - than calculating of function at xmin/xmax will not be possible while extrapolation is not implemented in `GetSave()`. For function painting bin centers is better. . But this one can handle in TWebCanvas. . There `f1->Save()` method called directly and one can shrink range by half of the bin. Therefore I prefer to have reliable function which saves points exactly at the range which was specified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:121,deployability,depend,depends,121,> I think it makes more sense to me to evaluate and save the function values on the bin centres and not on the edges. It depends that one wants to do with these saved values. . To use with `TF1::GetSave()` - then current approach is better. One covers complete range. If values at bin centers will be save - than calculating of function at xmin/xmax will not be possible while extrapolation is not implemented in `GetSave()`. For function painting bin centers is better. . But this one can handle in TWebCanvas. . There `f1->Save()` method called directly and one can shrink range by half of the bin. Therefore I prefer to have reliable function which saves points exactly at the range which was specified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:213,energy efficiency,current,current,213,> I think it makes more sense to me to evaluate and save the function values on the bin centres and not on the edges. It depends that one wants to do with these saved values. . To use with `TF1::GetSave()` - then current approach is better. One covers complete range. If values at bin centers will be save - than calculating of function at xmin/xmax will not be possible while extrapolation is not implemented in `GetSave()`. For function painting bin centers is better. . But this one can handle in TWebCanvas. . There `f1->Save()` method called directly and one can shrink range by half of the bin. Therefore I prefer to have reliable function which saves points exactly at the range which was specified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:121,integrability,depend,depends,121,> I think it makes more sense to me to evaluate and save the function values on the bin centres and not on the edges. It depends that one wants to do with these saved values. . To use with `TF1::GetSave()` - then current approach is better. One covers complete range. If values at bin centers will be save - than calculating of function at xmin/xmax will not be possible while extrapolation is not implemented in `GetSave()`. For function painting bin centers is better. . But this one can handle in TWebCanvas. . There `f1->Save()` method called directly and one can shrink range by half of the bin. Therefore I prefer to have reliable function which saves points exactly at the range which was specified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:696,interoperability,specif,specified,696,> I think it makes more sense to me to evaluate and save the function values on the bin centres and not on the edges. It depends that one wants to do with these saved values. . To use with `TF1::GetSave()` - then current approach is better. One covers complete range. If values at bin centers will be save - than calculating of function at xmin/xmax will not be possible while extrapolation is not implemented in `GetSave()`. For function painting bin centers is better. . But this one can handle in TWebCanvas. . There `f1->Save()` method called directly and one can shrink range by half of the bin. Therefore I prefer to have reliable function which saves points exactly at the range which was specified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:121,modifiability,depend,depends,121,> I think it makes more sense to me to evaluate and save the function values on the bin centres and not on the edges. It depends that one wants to do with these saved values. . To use with `TF1::GetSave()` - then current approach is better. One covers complete range. If values at bin centers will be save - than calculating of function at xmin/xmax will not be possible while extrapolation is not implemented in `GetSave()`. For function painting bin centers is better. . But this one can handle in TWebCanvas. . There `f1->Save()` method called directly and one can shrink range by half of the bin. Therefore I prefer to have reliable function which saves points exactly at the range which was specified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:628,reliability,reliab,reliable,628,> I think it makes more sense to me to evaluate and save the function values on the bin centres and not on the edges. It depends that one wants to do with these saved values. . To use with `TF1::GetSave()` - then current approach is better. One covers complete range. If values at bin centers will be save - than calculating of function at xmin/xmax will not be possible while extrapolation is not implemented in `GetSave()`. For function painting bin centers is better. . But this one can handle in TWebCanvas. . There `f1->Save()` method called directly and one can shrink range by half of the bin. Therefore I prefer to have reliable function which saves points exactly at the range which was specified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:121,safety,depend,depends,121,> I think it makes more sense to me to evaluate and save the function values on the bin centres and not on the edges. It depends that one wants to do with these saved values. . To use with `TF1::GetSave()` - then current approach is better. One covers complete range. If values at bin centers will be save - than calculating of function at xmin/xmax will not be possible while extrapolation is not implemented in `GetSave()`. For function painting bin centers is better. . But this one can handle in TWebCanvas. . There `f1->Save()` method called directly and one can shrink range by half of the bin. Therefore I prefer to have reliable function which saves points exactly at the range which was specified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:252,safety,compl,complete,252,> I think it makes more sense to me to evaluate and save the function values on the bin centres and not on the edges. It depends that one wants to do with these saved values. . To use with `TF1::GetSave()` - then current approach is better. One covers complete range. If values at bin centers will be save - than calculating of function at xmin/xmax will not be possible while extrapolation is not implemented in `GetSave()`. For function painting bin centers is better. . But this one can handle in TWebCanvas. . There `f1->Save()` method called directly and one can shrink range by half of the bin. Therefore I prefer to have reliable function which saves points exactly at the range which was specified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:252,security,compl,complete,252,> I think it makes more sense to me to evaluate and save the function values on the bin centres and not on the edges. It depends that one wants to do with these saved values. . To use with `TF1::GetSave()` - then current approach is better. One covers complete range. If values at bin centers will be save - than calculating of function at xmin/xmax will not be possible while extrapolation is not implemented in `GetSave()`. For function painting bin centers is better. . But this one can handle in TWebCanvas. . There `f1->Save()` method called directly and one can shrink range by half of the bin. Therefore I prefer to have reliable function which saves points exactly at the range which was specified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:121,testability,depend,depends,121,> I think it makes more sense to me to evaluate and save the function values on the bin centres and not on the edges. It depends that one wants to do with these saved values. . To use with `TF1::GetSave()` - then current approach is better. One covers complete range. If values at bin centers will be save - than calculating of function at xmin/xmax will not be possible while extrapolation is not implemented in `GetSave()`. For function painting bin centers is better. . But this one can handle in TWebCanvas. . There `f1->Save()` method called directly and one can shrink range by half of the bin. Therefore I prefer to have reliable function which saves points exactly at the range which was specified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:613,usability,prefer,prefer,613,> I think it makes more sense to me to evaluate and save the function values on the bin centres and not on the edges. It depends that one wants to do with these saved values. . To use with `TF1::GetSave()` - then current approach is better. One covers complete range. If values at bin centers will be save - than calculating of function at xmin/xmax will not be possible while extrapolation is not implemented in `GetSave()`. For function painting bin centers is better. . But this one can handle in TWebCanvas. . There `f1->Save()` method called directly and one can shrink range by half of the bin. Therefore I prefer to have reliable function which saves points exactly at the range which was specified.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:555,availability,Error,Error,555,"I see your point, but we have to be careful in case the function has a singularity at the edge. . Here is a problematic example which does not work correctly now:. ```. auto f1 = new TF1(""F1"",[](double *x, double *){ return 1./x[0]; },0,1,0); . f1->Draw(); // works fine (values are computed at bin centres). TF1 * f2 = (TF1*)f1->Clone(""f2""); // when cloning TF1::Save is used . f2->Draw();. Warning in <TCanvas::ResizePad>: Inf/NaN propagated to the pad. Check drawn objects. Warning in <TCanvas::ResizePad>: rf601_intminuit height changed from 0 to 10. Error in <TGaxis::PaintAxis>: wmin (0.000000) == wmax (0.000000). ```. This is because TF1::Save uses the bin boundary and not the centre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:249,energy efficiency,Draw,Draw,249,"I see your point, but we have to be careful in case the function has a singularity at the edge. . Here is a problematic example which does not work correctly now:. ```. auto f1 = new TF1(""F1"",[](double *x, double *){ return 1./x[0]; },0,1,0); . f1->Draw(); // works fine (values are computed at bin centres). TF1 * f2 = (TF1*)f1->Clone(""f2""); // when cloning TF1::Save is used . f2->Draw();. Warning in <TCanvas::ResizePad>: Inf/NaN propagated to the pad. Check drawn objects. Warning in <TCanvas::ResizePad>: rf601_intminuit height changed from 0 to 10. Error in <TGaxis::PaintAxis>: wmin (0.000000) == wmax (0.000000). ```. This is because TF1::Save uses the bin boundary and not the centre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:383,energy efficiency,Draw,Draw,383,"I see your point, but we have to be careful in case the function has a singularity at the edge. . Here is a problematic example which does not work correctly now:. ```. auto f1 = new TF1(""F1"",[](double *x, double *){ return 1./x[0]; },0,1,0); . f1->Draw(); // works fine (values are computed at bin centres). TF1 * f2 = (TF1*)f1->Clone(""f2""); // when cloning TF1::Save is used . f2->Draw();. Warning in <TCanvas::ResizePad>: Inf/NaN propagated to the pad. Check drawn objects. Warning in <TCanvas::ResizePad>: rf601_intminuit height changed from 0 to 10. Error in <TGaxis::PaintAxis>: wmin (0.000000) == wmax (0.000000). ```. This is because TF1::Save uses the bin boundary and not the centre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:462,energy efficiency,draw,drawn,462,"I see your point, but we have to be careful in case the function has a singularity at the edge. . Here is a problematic example which does not work correctly now:. ```. auto f1 = new TF1(""F1"",[](double *x, double *){ return 1./x[0]; },0,1,0); . f1->Draw(); // works fine (values are computed at bin centres). TF1 * f2 = (TF1*)f1->Clone(""f2""); // when cloning TF1::Save is used . f2->Draw();. Warning in <TCanvas::ResizePad>: Inf/NaN propagated to the pad. Check drawn objects. Warning in <TCanvas::ResizePad>: rf601_intminuit height changed from 0 to 10. Error in <TGaxis::PaintAxis>: wmin (0.000000) == wmax (0.000000). ```. This is because TF1::Save uses the bin boundary and not the centre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:555,performance,Error,Error,555,"I see your point, but we have to be careful in case the function has a singularity at the edge. . Here is a problematic example which does not work correctly now:. ```. auto f1 = new TF1(""F1"",[](double *x, double *){ return 1./x[0]; },0,1,0); . f1->Draw(); // works fine (values are computed at bin centres). TF1 * f2 = (TF1*)f1->Clone(""f2""); // when cloning TF1::Save is used . f2->Draw();. Warning in <TCanvas::ResizePad>: Inf/NaN propagated to the pad. Check drawn objects. Warning in <TCanvas::ResizePad>: rf601_intminuit height changed from 0 to 10. Error in <TGaxis::PaintAxis>: wmin (0.000000) == wmax (0.000000). ```. This is because TF1::Save uses the bin boundary and not the centre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:134,reliability,doe,does,134,"I see your point, but we have to be careful in case the function has a singularity at the edge. . Here is a problematic example which does not work correctly now:. ```. auto f1 = new TF1(""F1"",[](double *x, double *){ return 1./x[0]; },0,1,0); . f1->Draw(); // works fine (values are computed at bin centres). TF1 * f2 = (TF1*)f1->Clone(""f2""); // when cloning TF1::Save is used . f2->Draw();. Warning in <TCanvas::ResizePad>: Inf/NaN propagated to the pad. Check drawn objects. Warning in <TCanvas::ResizePad>: rf601_intminuit height changed from 0 to 10. Error in <TGaxis::PaintAxis>: wmin (0.000000) == wmax (0.000000). ```. This is because TF1::Save uses the bin boundary and not the centre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:555,safety,Error,Error,555,"I see your point, but we have to be careful in case the function has a singularity at the edge. . Here is a problematic example which does not work correctly now:. ```. auto f1 = new TF1(""F1"",[](double *x, double *){ return 1./x[0]; },0,1,0); . f1->Draw(); // works fine (values are computed at bin centres). TF1 * f2 = (TF1*)f1->Clone(""f2""); // when cloning TF1::Save is used . f2->Draw();. Warning in <TCanvas::ResizePad>: Inf/NaN propagated to the pad. Check drawn objects. Warning in <TCanvas::ResizePad>: rf601_intminuit height changed from 0 to 10. Error in <TGaxis::PaintAxis>: wmin (0.000000) == wmax (0.000000). ```. This is because TF1::Save uses the bin boundary and not the centre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13949:555,usability,Error,Error,555,"I see your point, but we have to be careful in case the function has a singularity at the edge. . Here is a problematic example which does not work correctly now:. ```. auto f1 = new TF1(""F1"",[](double *x, double *){ return 1./x[0]; },0,1,0); . f1->Draw(); // works fine (values are computed at bin centres). TF1 * f2 = (TF1*)f1->Clone(""f2""); // when cloning TF1::Save is used . f2->Draw();. Warning in <TCanvas::ResizePad>: Inf/NaN propagated to the pad. Check drawn objects. Warning in <TCanvas::ResizePad>: rf601_intminuit height changed from 0 to 10. Error in <TGaxis::PaintAxis>: wmin (0.000000) == wmax (0.000000). ```. This is because TF1::Save uses the bin boundary and not the centre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13949
https://github.com/root-project/root/pull/13953:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13953:125,deployability,build,build,125,"Reverted changes to `graf2d/asimage` because it's actually C code and not C++, so the `clang-tidy` C++ suggestions broke the build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13953:33,availability,failur,failures,33,@phsft-bot to see if the Windows failures go away,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13953:33,deployability,fail,failures,33,@phsft-bot to see if the Windows failures go away,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13953:33,performance,failur,failures,33,@phsft-bot to see if the Windows failures go away,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13953:33,reliability,fail,failures,33,@phsft-bot to see if the Windows failures go away,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/pull/13953:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13953
https://github.com/root-project/root/issues/13958:804,deployability,contain,container,804,"Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? But yes *please* contribute! You could start with imlpementing. ```c++. static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. Int_t netopt = 0);. ```. internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:827,deployability,build,build,827,"Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? But yes *please* contribute! You could start with imlpementing. ```c++. static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. Int_t netopt = 0);. ```. internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:652,integrability,sub,subject,652,"Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? But yes *please* contribute! You could start with imlpementing. ```c++. static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. Int_t netopt = 0);. ```. internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:691,integrability,interfac,interface,691,"Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? But yes *please* contribute! You could start with imlpementing. ```c++. static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. Int_t netopt = 0);. ```. internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:77,interoperability,specif,specific,77,"Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? But yes *please* contribute! You could start with imlpementing. ```c++. static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. Int_t netopt = 0);. ```. internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:691,interoperability,interfac,interface,691,"Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? But yes *please* contribute! You could start with imlpementing. ```c++. static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. Int_t netopt = 0);. ```. internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:691,modifiability,interfac,interface,691,"Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? But yes *please* contribute! You could start with imlpementing. ```c++. static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. Int_t netopt = 0);. ```. internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:185,safety,test,test,185,"Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? But yes *please* contribute! You could start with imlpementing. ```c++. static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. Int_t netopt = 0);. ```. internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:185,testability,test,test,185,"Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? But yes *please* contribute! You could start with imlpementing. ```c++. static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. Int_t netopt = 0);. ```. internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:237,usability,prefer,prefer,237,"Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? But yes *please* contribute! You could start with imlpementing. ```c++. static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. Int_t netopt = 0);. ```. internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:0,energy efficiency,Cool,Cool,0,"Cool, thanks a ton! Will get started 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:832,deployability,contain,container,832,"> Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? > . > But yes _please_ contribute! You could start with imlpementing. > . > ```c++. > static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. > const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. > Int_t netopt = 0);. > ```. > . > internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed. Can I get a bit more context on what exactly this is implemented for? And where this interface is to be built out, as well as the functionality it serves. Thanks once again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:855,deployability,build,build,855,"> Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? > . > But yes _please_ contribute! You could start with imlpementing. > . > ```c++. > static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. > const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. > Int_t netopt = 0);. > ```. > . > internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed. Can I get a bit more context on what exactly this is implemented for? And where this interface is to be built out, as well as the functionality it serves. Thanks once again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:680,integrability,sub,subject,680,"> Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? > . > But yes _please_ contribute! You could start with imlpementing. > . > ```c++. > static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. > const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. > Int_t netopt = 0);. > ```. > . > internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed. Can I get a bit more context on what exactly this is implemented for? And where this interface is to be built out, as well as the functionality it serves. Thanks once again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:719,integrability,interfac,interface,719,"> Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? > . > But yes _please_ contribute! You could start with imlpementing. > . > ```c++. > static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. > const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. > Int_t netopt = 0);. > ```. > . > internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed. Can I get a bit more context on what exactly this is implemented for? And where this interface is to be built out, as well as the functionality it serves. Thanks once again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:953,integrability,interfac,interface,953,"> Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? > . > But yes _please_ contribute! You could start with imlpementing. > . > ```c++. > static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. > const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. > Int_t netopt = 0);. > ```. > . > internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed. Can I get a bit more context on what exactly this is implemented for? And where this interface is to be built out, as well as the functionality it serves. Thanks once again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:79,interoperability,specif,specific,79,"> Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? > . > But yes _please_ contribute! You could start with imlpementing. > . > ```c++. > static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. > const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. > Int_t netopt = 0);. > ```. > . > internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed. Can I get a bit more context on what exactly this is implemented for? And where this interface is to be built out, as well as the functionality it serves. Thanks once again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:719,interoperability,interfac,interface,719,"> Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? > . > But yes _please_ contribute! You could start with imlpementing. > . > ```c++. > static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. > const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. > Int_t netopt = 0);. > ```. > . > internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed. Can I get a bit more context on what exactly this is implemented for? And where this interface is to be built out, as well as the functionality it serves. Thanks once again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:953,interoperability,interfac,interface,953,"> Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? > . > But yes _please_ contribute! You could start with imlpementing. > . > ```c++. > static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. > const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. > Int_t netopt = 0);. > ```. > . > internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed. Can I get a bit more context on what exactly this is implemented for? And where this interface is to be built out, as well as the functionality it serves. Thanks once again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:719,modifiability,interfac,interface,719,"> Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? > . > But yes _please_ contribute! You could start with imlpementing. > . > ```c++. > static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. > const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. > Int_t netopt = 0);. > ```. > . > internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed. Can I get a bit more context on what exactly this is implemented for? And where this interface is to be built out, as well as the functionality it serves. Thanks once again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:953,modifiability,interfac,interface,953,"> Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? > . > But yes _please_ contribute! You could start with imlpementing. > . > ```c++. > static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. > const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. > Int_t netopt = 0);. > ```. > . > internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed. Can I get a bit more context on what exactly this is implemented for? And where this interface is to be built out, as well as the functionality it serves. Thanks once again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:187,safety,test,test,187,"> Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? > . > But yes _please_ contribute! You could start with imlpementing. > . > ```c++. > static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. > const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. > Int_t netopt = 0);. > ```. > . > internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed. Can I get a bit more context on what exactly this is implemented for? And where this interface is to be built out, as well as the functionality it serves. Thanks once again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:187,testability,test,test,187,"> Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? > . > But yes _please_ contribute! You could start with imlpementing. > . > ```c++. > static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. > const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. > Int_t netopt = 0);. > ```. > . > internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed. Can I get a bit more context on what exactly this is implemented for? And where this interface is to be built out, as well as the functionality it serves. Thanks once again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:889,testability,context,context,889,"> Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? > . > But yes _please_ contribute! You could start with imlpementing. > . > ```c++. > static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. > const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. > Int_t netopt = 0);. > ```. > . > internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed. Can I get a bit more context on what exactly this is implemented for? And where this interface is to be built out, as well as the functionality it serves. Thanks once again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:239,usability,prefer,prefer,239,"> Thanks @JRS296 ! I'm not sure we need / want this, tbh: it's a really system specific implementation and it will have to be in a library that I'd like to replace anyway. And creating a test for it will be non-trivial :-) So I'd actually prefer to still with whatever the shell provides. Makes sense? > . > But yes _please_ contribute! You could start with imlpementing. > . > ```c++. > static std::unique_ptr<TFile> OpenU(const char *name, Option_t *option = """",. > const char *ftitle = """", Int_t compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault,. > Int_t netopt = 0);. > ```. > . > internally calling `TFile::Open` but returning a `unique_ptr`. The name is subject to discussion but we want this interface in any case. This would allow you to exercise the contribution procedure! I'd recommend a Linux docker container for improved build speed. Can I get a bit more context on what exactly this is implemented for? And where this interface is to be built out, as well as the functionality it serves. Thanks once again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:241,integrability,interfac,interface,241,Why don't you join us at https://mattermost.web.cern.ch/root/channels/root-io to discuss - that seems more interactive than this GH issue :-) Let me know if this doesn't work for you and I'll create a new issue where we can discuss this new interface. Thanks for your flexibility!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:241,interoperability,interfac,interface,241,Why don't you join us at https://mattermost.web.cern.ch/root/channels/root-io to discuss - that seems more interactive than this GH issue :-) Let me know if this doesn't work for you and I'll create a new issue where we can discuss this new interface. Thanks for your flexibility!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:241,modifiability,interfac,interface,241,Why don't you join us at https://mattermost.web.cern.ch/root/channels/root-io to discuss - that seems more interactive than this GH issue :-) Let me know if this doesn't work for you and I'll create a new issue where we can discuss this new interface. Thanks for your flexibility!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:162,reliability,doe,doesn,162,Why don't you join us at https://mattermost.web.cern.ch/root/channels/root-io to discuss - that seems more interactive than this GH issue :-) Let me know if this doesn't work for you and I'll create a new issue where we can discuss this new interface. Thanks for your flexibility!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/issues/13958:107,usability,interact,interactive,107,Why don't you join us at https://mattermost.web.cern.ch/root/channels/root-io to discuss - that seems more interactive than this GH issue :-) Let me know if this doesn't work for you and I'll create a new issue where we can discuss this new interface. Thanks for your flexibility!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13958
https://github.com/root-project/root/pull/13974:116,deployability,releas,release,116,"Hi @umbertozappi, thanks for testing! Is this a backport from `master`? We usually try to avoid commits that are on release branches only (except documentation and release notes). Also I think there were some more fix to Python 3.11 support in the mean time; if we want ROOT 6.24 to fully support Python 3.11, we will also need to backport them...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:164,deployability,releas,release,164,"Hi @umbertozappi, thanks for testing! Is this a backport from `master`? We usually try to avoid commits that are on release branches only (except documentation and release notes). Also I think there were some more fix to Python 3.11 support in the mean time; if we want ROOT 6.24 to fully support Python 3.11, we will also need to backport them...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:253,performance,time,time,253,"Hi @umbertozappi, thanks for testing! Is this a backport from `master`? We usually try to avoid commits that are on release branches only (except documentation and release notes). Also I think there were some more fix to Python 3.11 support in the mean time; if we want ROOT 6.24 to fully support Python 3.11, we will also need to backport them...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:29,safety,test,testing,29,"Hi @umbertozappi, thanks for testing! Is this a backport from `master`? We usually try to avoid commits that are on release branches only (except documentation and release notes). Also I think there were some more fix to Python 3.11 support in the mean time; if we want ROOT 6.24 to fully support Python 3.11, we will also need to backport them...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:90,safety,avoid,avoid,90,"Hi @umbertozappi, thanks for testing! Is this a backport from `master`? We usually try to avoid commits that are on release branches only (except documentation and release notes). Also I think there were some more fix to Python 3.11 support in the mean time; if we want ROOT 6.24 to fully support Python 3.11, we will also need to backport them...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:139,safety,except,except,139,"Hi @umbertozappi, thanks for testing! Is this a backport from `master`? We usually try to avoid commits that are on release branches only (except documentation and release notes). Also I think there were some more fix to Python 3.11 support in the mean time; if we want ROOT 6.24 to fully support Python 3.11, we will also need to backport them...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:29,testability,test,testing,29,"Hi @umbertozappi, thanks for testing! Is this a backport from `master`? We usually try to avoid commits that are on release branches only (except documentation and release notes). Also I think there were some more fix to Python 3.11 support in the mean time; if we want ROOT 6.24 to fully support Python 3.11, we will also need to backport them...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:146,usability,document,documentation,146,"Hi @umbertozappi, thanks for testing! Is this a backport from `master`? We usually try to avoid commits that are on release branches only (except documentation and release notes). Also I think there were some more fix to Python 3.11 support in the mean time; if we want ROOT 6.24 to fully support Python 3.11, we will also need to backport them...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:233,usability,support,support,233,"Hi @umbertozappi, thanks for testing! Is this a backport from `master`? We usually try to avoid commits that are on release branches only (except documentation and release notes). Also I think there were some more fix to Python 3.11 support in the mean time; if we want ROOT 6.24 to fully support Python 3.11, we will also need to backport them...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:289,usability,support,support,289,"Hi @umbertozappi, thanks for testing! Is this a backport from `master`? We usually try to avoid commits that are on release branches only (except documentation and release notes). Also I think there were some more fix to Python 3.11 support in the mean time; if we want ROOT 6.24 to fully support Python 3.11, we will also need to backport them...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:363,deployability,version,version,363,"We should really try to stay similar with `master`. For the change in this PR, that's https://github.com/root-project/root/commit/484deb056dacf768aba4954073b41105c431bffc but https://github.com/root-project/root/pull/10734 has some more changes which should all be backported... May I ask what is the motivation to use 6.24 with Python 3.11 and not a more recent version of ROOT (we're about to release 6.30)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:395,deployability,releas,release,395,"We should really try to stay similar with `master`. For the change in this PR, that's https://github.com/root-project/root/commit/484deb056dacf768aba4954073b41105c431bffc but https://github.com/root-project/root/pull/10734 has some more changes which should all be backported... May I ask what is the motivation to use 6.24 with Python 3.11 and not a more recent version of ROOT (we're about to release 6.30)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:363,integrability,version,version,363,"We should really try to stay similar with `master`. For the change in this PR, that's https://github.com/root-project/root/commit/484deb056dacf768aba4954073b41105c431bffc but https://github.com/root-project/root/pull/10734 has some more changes which should all be backported... May I ask what is the motivation to use 6.24 with Python 3.11 and not a more recent version of ROOT (we're about to release 6.30)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:363,modifiability,version,version,363,"We should really try to stay similar with `master`. For the change in this PR, that's https://github.com/root-project/root/commit/484deb056dacf768aba4954073b41105c431bffc but https://github.com/root-project/root/pull/10734 has some more changes which should all be backported... May I ask what is the motivation to use 6.24 with Python 3.11 and not a more recent version of ROOT (we're about to release 6.30)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:203,deployability,build,build,203,Closed in favor of an actual backport:. * https://github.com/root-project/root/pull/13990. It's always good to have better compatibility of the old branches. It's quite useful also for devs that want to build old releases for debugging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:213,deployability,releas,releases,213,Closed in favor of an actual backport:. * https://github.com/root-project/root/pull/13990. It's always good to have better compatibility of the old branches. It's quite useful also for devs that want to build old releases for debugging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:123,interoperability,compatib,compatibility,123,Closed in favor of an actual backport:. * https://github.com/root-project/root/pull/13990. It's always good to have better compatibility of the old branches. It's quite useful also for devs that want to build old releases for debugging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13974:0,usability,Close,Closed,0,Closed in favor of an actual backport:. * https://github.com/root-project/root/pull/13990. It's always good to have better compatibility of the old branches. It's quite useful also for devs that want to build old releases for debugging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13974
https://github.com/root-project/root/pull/13982:286,deployability,modul,modules,286,"> > Oh that's all we need? Thanks! > . > What do you mean? It's not all we need I think. The problem that `exceptions` is on by default, which triggers the warning everytime even if you don't set the flag yourself is still there:. https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L130. I would suggest the following change:. ```cmake. ROOT_BUILD_OPTION(exceptions IGNORE ""Enable compiler exception handling (flag is deprecated, exceptions are always enabled)""). ```. instead of `ON`. As far as I can tell, the exceptions flag is actually ignored, so that would be accurate and evaluate to `false` in the deprecation check:. https://cmake.org/cmake/help/latest/command/if.html#basic-expressions. This is probably better than `OFF` as the default, because that looks then like we don't do exceptions which is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13982
https://github.com/root-project/root/pull/13982:286,modifiability,modul,modules,286,"> > Oh that's all we need? Thanks! > . > What do you mean? It's not all we need I think. The problem that `exceptions` is on by default, which triggers the warning everytime even if you don't set the flag yourself is still there:. https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L130. I would suggest the following change:. ```cmake. ROOT_BUILD_OPTION(exceptions IGNORE ""Enable compiler exception handling (flag is deprecated, exceptions are always enabled)""). ```. instead of `ON`. As far as I can tell, the exceptions flag is actually ignored, so that would be accurate and evaluate to `false` in the deprecation check:. https://cmake.org/cmake/help/latest/command/if.html#basic-expressions. This is probably better than `OFF` as the default, because that looks then like we don't do exceptions which is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13982
https://github.com/root-project/root/pull/13982:107,safety,except,exceptions,107,"> > Oh that's all we need? Thanks! > . > What do you mean? It's not all we need I think. The problem that `exceptions` is on by default, which triggers the warning everytime even if you don't set the flag yourself is still there:. https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L130. I would suggest the following change:. ```cmake. ROOT_BUILD_OPTION(exceptions IGNORE ""Enable compiler exception handling (flag is deprecated, exceptions are always enabled)""). ```. instead of `ON`. As far as I can tell, the exceptions flag is actually ignored, so that would be accurate and evaluate to `false` in the deprecation check:. https://cmake.org/cmake/help/latest/command/if.html#basic-expressions. This is probably better than `OFF` as the default, because that looks then like we don't do exceptions which is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13982
https://github.com/root-project/root/pull/13982:286,safety,modul,modules,286,"> > Oh that's all we need? Thanks! > . > What do you mean? It's not all we need I think. The problem that `exceptions` is on by default, which triggers the warning everytime even if you don't set the flag yourself is still there:. https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L130. I would suggest the following change:. ```cmake. ROOT_BUILD_OPTION(exceptions IGNORE ""Enable compiler exception handling (flag is deprecated, exceptions are always enabled)""). ```. instead of `ON`. As far as I can tell, the exceptions flag is actually ignored, so that would be accurate and evaluate to `false` in the deprecation check:. https://cmake.org/cmake/help/latest/command/if.html#basic-expressions. This is probably better than `OFF` as the default, because that looks then like we don't do exceptions which is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13982
https://github.com/root-project/root/pull/13982:390,safety,except,exceptions,390,"> > Oh that's all we need? Thanks! > . > What do you mean? It's not all we need I think. The problem that `exceptions` is on by default, which triggers the warning everytime even if you don't set the flag yourself is still there:. https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L130. I would suggest the following change:. ```cmake. ROOT_BUILD_OPTION(exceptions IGNORE ""Enable compiler exception handling (flag is deprecated, exceptions are always enabled)""). ```. instead of `ON`. As far as I can tell, the exceptions flag is actually ignored, so that would be accurate and evaluate to `false` in the deprecation check:. https://cmake.org/cmake/help/latest/command/if.html#basic-expressions. This is probably better than `OFF` as the default, because that looks then like we don't do exceptions which is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13982
https://github.com/root-project/root/pull/13982:425,safety,except,exception,425,"> > Oh that's all we need? Thanks! > . > What do you mean? It's not all we need I think. The problem that `exceptions` is on by default, which triggers the warning everytime even if you don't set the flag yourself is still there:. https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L130. I would suggest the following change:. ```cmake. ROOT_BUILD_OPTION(exceptions IGNORE ""Enable compiler exception handling (flag is deprecated, exceptions are always enabled)""). ```. instead of `ON`. As far as I can tell, the exceptions flag is actually ignored, so that would be accurate and evaluate to `false` in the deprecation check:. https://cmake.org/cmake/help/latest/command/if.html#basic-expressions. This is probably better than `OFF` as the default, because that looks then like we don't do exceptions which is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13982
https://github.com/root-project/root/pull/13982:465,safety,except,exceptions,465,"> > Oh that's all we need? Thanks! > . > What do you mean? It's not all we need I think. The problem that `exceptions` is on by default, which triggers the warning everytime even if you don't set the flag yourself is still there:. https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L130. I would suggest the following change:. ```cmake. ROOT_BUILD_OPTION(exceptions IGNORE ""Enable compiler exception handling (flag is deprecated, exceptions are always enabled)""). ```. instead of `ON`. As far as I can tell, the exceptions flag is actually ignored, so that would be accurate and evaluate to `false` in the deprecation check:. https://cmake.org/cmake/help/latest/command/if.html#basic-expressions. This is probably better than `OFF` as the default, because that looks then like we don't do exceptions which is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13982
https://github.com/root-project/root/pull/13982:547,safety,except,exceptions,547,"> > Oh that's all we need? Thanks! > . > What do you mean? It's not all we need I think. The problem that `exceptions` is on by default, which triggers the warning everytime even if you don't set the flag yourself is still there:. https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L130. I would suggest the following change:. ```cmake. ROOT_BUILD_OPTION(exceptions IGNORE ""Enable compiler exception handling (flag is deprecated, exceptions are always enabled)""). ```. instead of `ON`. As far as I can tell, the exceptions flag is actually ignored, so that would be accurate and evaluate to `false` in the deprecation check:. https://cmake.org/cmake/help/latest/command/if.html#basic-expressions. This is probably better than `OFF` as the default, because that looks then like we don't do exceptions which is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13982
https://github.com/root-project/root/pull/13982:824,safety,except,exceptions,824,"> > Oh that's all we need? Thanks! > . > What do you mean? It's not all we need I think. The problem that `exceptions` is on by default, which triggers the warning everytime even if you don't set the flag yourself is still there:. https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L130. I would suggest the following change:. ```cmake. ROOT_BUILD_OPTION(exceptions IGNORE ""Enable compiler exception handling (flag is deprecated, exceptions are always enabled)""). ```. instead of `ON`. As far as I can tell, the exceptions flag is actually ignored, so that would be accurate and evaluate to `false` in the deprecation check:. https://cmake.org/cmake/help/latest/command/if.html#basic-expressions. This is probably better than `OFF` as the default, because that looks then like we don't do exceptions which is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13982
https://github.com/root-project/root/pull/13982:685,usability,help,help,685,"> > Oh that's all we need? Thanks! > . > What do you mean? It's not all we need I think. The problem that `exceptions` is on by default, which triggers the warning everytime even if you don't set the flag yourself is still there:. https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L130. I would suggest the following change:. ```cmake. ROOT_BUILD_OPTION(exceptions IGNORE ""Enable compiler exception handling (flag is deprecated, exceptions are always enabled)""). ```. instead of `ON`. As far as I can tell, the exceptions flag is actually ignored, so that would be accurate and evaluate to `false` in the deprecation check:. https://cmake.org/cmake/help/latest/command/if.html#basic-expressions. This is probably better than `OFF` as the default, because that looks then like we don't do exceptions which is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13982
https://github.com/root-project/root/pull/13982:697,usability,command,command,697,"> > Oh that's all we need? Thanks! > . > What do you mean? It's not all we need I think. The problem that `exceptions` is on by default, which triggers the warning everytime even if you don't set the flag yourself is still there:. https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L130. I would suggest the following change:. ```cmake. ROOT_BUILD_OPTION(exceptions IGNORE ""Enable compiler exception handling (flag is deprecated, exceptions are always enabled)""). ```. instead of `ON`. As far as I can tell, the exceptions flag is actually ignored, so that would be accurate and evaluate to `false` in the deprecation check:. https://cmake.org/cmake/help/latest/command/if.html#basic-expressions. This is probably better than `OFF` as the default, because that looks then like we don't do exceptions which is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13982
https://github.com/root-project/root/pull/13986:146,availability,error,errors,146,"> LGTM! Is not this offset just a constant term? It should not matter, apart for numerical precision issues. Yes, exactly! And reducing numerical errors is the motivation for all this offsetting. I don't think it matters in this particular case, but it is weird for the users when they fit an Asimov dataset with bin-by-bin offsetting, where they expect the NLL to be zero by construction, and then it's not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13986
https://github.com/root-project/root/pull/13986:127,energy efficiency,reduc,reducing,127,"> LGTM! Is not this offset just a constant term? It should not matter, apart for numerical precision issues. Yes, exactly! And reducing numerical errors is the motivation for all this offsetting. I don't think it matters in this particular case, but it is weird for the users when they fit an Asimov dataset with bin-by-bin offsetting, where they expect the NLL to be zero by construction, and then it's not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13986
https://github.com/root-project/root/pull/13986:146,performance,error,errors,146,"> LGTM! Is not this offset just a constant term? It should not matter, apart for numerical precision issues. Yes, exactly! And reducing numerical errors is the motivation for all this offsetting. I don't think it matters in this particular case, but it is weird for the users when they fit an Asimov dataset with bin-by-bin offsetting, where they expect the NLL to be zero by construction, and then it's not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13986
https://github.com/root-project/root/pull/13986:146,safety,error,errors,146,"> LGTM! Is not this offset just a constant term? It should not matter, apart for numerical precision issues. Yes, exactly! And reducing numerical errors is the motivation for all this offsetting. I don't think it matters in this particular case, but it is weird for the users when they fit an Asimov dataset with bin-by-bin offsetting, where they expect the NLL to be zero by construction, and then it's not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13986
https://github.com/root-project/root/pull/13986:146,usability,error,errors,146,"> LGTM! Is not this offset just a constant term? It should not matter, apart for numerical precision issues. Yes, exactly! And reducing numerical errors is the motivation for all this offsetting. I don't think it matters in this particular case, but it is weird for the users when they fit an Asimov dataset with bin-by-bin offsetting, where they expect the NLL to be zero by construction, and then it's not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13986
https://github.com/root-project/root/pull/13986:270,usability,user,users,270,"> LGTM! Is not this offset just a constant term? It should not matter, apart for numerical precision issues. Yes, exactly! And reducing numerical errors is the motivation for all this offsetting. I don't think it matters in this particular case, but it is weird for the users when they fit an Asimov dataset with bin-by-bin offsetting, where they expect the NLL to be zero by construction, and then it's not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13986
https://github.com/root-project/root/pull/13990:254,deployability,version,versions,254,"There are even more fixes for Python 3.11 compatibility, this was exactly my point; I found at least. * https://github.com/root-project/root/pull/11457. * https://github.com/root-project/root/pull/12857. Again, the question is why we need to support new versions of Python with a (legacy) release of ROOT...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:289,deployability,releas,release,289,"There are even more fixes for Python 3.11 compatibility, this was exactly my point; I found at least. * https://github.com/root-project/root/pull/11457. * https://github.com/root-project/root/pull/12857. Again, the question is why we need to support new versions of Python with a (legacy) release of ROOT...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:254,integrability,version,versions,254,"There are even more fixes for Python 3.11 compatibility, this was exactly my point; I found at least. * https://github.com/root-project/root/pull/11457. * https://github.com/root-project/root/pull/12857. Again, the question is why we need to support new versions of Python with a (legacy) release of ROOT...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:42,interoperability,compatib,compatibility,42,"There are even more fixes for Python 3.11 compatibility, this was exactly my point; I found at least. * https://github.com/root-project/root/pull/11457. * https://github.com/root-project/root/pull/12857. Again, the question is why we need to support new versions of Python with a (legacy) release of ROOT...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:254,modifiability,version,versions,254,"There are even more fixes for Python 3.11 compatibility, this was exactly my point; I found at least. * https://github.com/root-project/root/pull/11457. * https://github.com/root-project/root/pull/12857. Again, the question is why we need to support new versions of Python with a (legacy) release of ROOT...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:242,usability,support,support,242,"There are even more fixes for Python 3.11 compatibility, this was exactly my point; I found at least. * https://github.com/root-project/root/pull/11457. * https://github.com/root-project/root/pull/12857. Again, the question is why we need to support new versions of Python with a (legacy) release of ROOT...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:264,availability,state,state,264,"Yes, the other commits from the same PR were the obvious candidates. I'm neither claiming that the above list is the full set of fixes for Python 3.11 - hence my question towards the purpose. IMHO just making it compile but crash at runtime isn't exactly the best state for a future bug fix release...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:291,deployability,releas,release,291,"Yes, the other commits from the same PR were the obvious candidates. I'm neither claiming that the above list is the full set of fixes for Python 3.11 - hence my question towards the purpose. IMHO just making it compile but crash at runtime isn't exactly the best state for a future bug fix release...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:264,integrability,state,state,264,"Yes, the other commits from the same PR were the obvious candidates. I'm neither claiming that the above list is the full set of fixes for Python 3.11 - hence my question towards the purpose. IMHO just making it compile but crash at runtime isn't exactly the best state for a future bug fix release...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:20,deployability,build,build,20,"At least one of the build nodes was able to report us back that there are no crashes at runtime in PyROOT :pray: I'll also wait for the other platforms, but given the CI results so far I'd argue that this set of backports goes in the right direction",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:142,interoperability,platform,platforms,142,"At least one of the build nodes was able to report us back that there are no crashes at runtime in PyROOT :pray: I'll also wait for the other platforms, but given the CI results so far I'd argue that this set of backports goes in the right direction",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:107,reliability,pra,pray,107,"At least one of the build nodes was able to report us back that there are no crashes at runtime in PyROOT :pray: I'll also wait for the other platforms, but given the CI results so far I'd argue that this set of backports goes in the right direction",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:100,safety,test,testing,100,I mean crashes with Python 3.11 - we don't have this in the Jenkins nodes. Claiming support without testing isn't ideal.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:100,testability,test,testing,100,I mean crashes with Python 3.11 - we don't have this in the Jenkins nodes. Claiming support without testing isn't ideal.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:84,usability,support,support,84,I mean crashes with Python 3.11 - we don't have this in the Jenkins nodes. Claiming support without testing isn't ideal.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:38,usability,support,support,38,"Well, we are not claiming Python 3.11 support. It's just a courtesy to the user who wanted to make these changes to the 6.24 branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:75,usability,user,user,75,"Well, we are not claiming Python 3.11 support. It's just a courtesy to the user who wanted to make these changes to the 6.24 branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:29,performance,time,time,29,I want to thank you for your time and I promise that next time I will try to open PR on the master branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13990:58,performance,time,time,58,I want to thank you for your time and I promise that next time I will try to open PR on the master branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13990
https://github.com/root-project/root/pull/13993:219,availability,failur,failures,219,"Thanks @Axel-Naumann for the green light! FYI, I have added one more commit that replaces the usage of the `RStringView` header with `<string_view>`. Also, can you please approve the sister PR in roottest to fix the CI failures? Thanks! https://github.com/root-project/roottest/pull/1031",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:219,deployability,fail,failures,219,"Thanks @Axel-Naumann for the green light! FYI, I have added one more commit that replaces the usage of the `RStringView` header with `<string_view>`. Also, can you please approve the sister PR in roottest to fix the CI failures? Thanks! https://github.com/root-project/roottest/pull/1031",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:29,energy efficiency,green,green,29,"Thanks @Axel-Naumann for the green light! FYI, I have added one more commit that replaces the usage of the `RStringView` header with `<string_view>`. Also, can you please approve the sister PR in roottest to fix the CI failures? Thanks! https://github.com/root-project/roottest/pull/1031",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:219,performance,failur,failures,219,"Thanks @Axel-Naumann for the green light! FYI, I have added one more commit that replaces the usage of the `RStringView` header with `<string_view>`. Also, can you please approve the sister PR in roottest to fix the CI failures? Thanks! https://github.com/root-project/roottest/pull/1031",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:219,reliability,fail,failures,219,"Thanks @Axel-Naumann for the green light! FYI, I have added one more commit that replaces the usage of the `RStringView` header with `<string_view>`. Also, can you please approve the sister PR in roottest to fix the CI failures? Thanks! https://github.com/root-project/roottest/pull/1031",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:23,availability,failur,failures,23,"Oh, and the Windows 10 failures seem unrelated to this PR, right @bellenot? In any case, this PR should *not* be merged before we see any green Windows build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:23,deployability,fail,failures,23,"Oh, and the Windows 10 failures seem unrelated to this PR, right @bellenot? In any case, this PR should *not* be merged before we see any green Windows build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:152,deployability,build,build,152,"Oh, and the Windows 10 failures seem unrelated to this PR, right @bellenot? In any case, this PR should *not* be merged before we see any green Windows build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:138,energy efficiency,green,green,138,"Oh, and the Windows 10 failures seem unrelated to this PR, right @bellenot? In any case, this PR should *not* be merged before we see any green Windows build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:23,performance,failur,failures,23,"Oh, and the Windows 10 failures seem unrelated to this PR, right @bellenot? In any case, this PR should *not* be merged before we see any green Windows build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:23,reliability,fail,failures,23,"Oh, and the Windows 10 failures seem unrelated to this PR, right @bellenot? In any case, this PR should *not* be merged before we see any green Windows build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:21,availability,failur,failure,21,"@guitargeek the only failure I see (on Jenkins) was due to `Out of diskspace` error. But it's running on another node now, so we'll see. (and I'm cleaning up the Windows nodes right now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:78,availability,error,error,78,"@guitargeek the only failure I see (on Jenkins) was due to `Out of diskspace` error. But it's running on another node now, so we'll see. (and I'm cleaning up the Windows nodes right now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:21,deployability,fail,failure,21,"@guitargeek the only failure I see (on Jenkins) was due to `Out of diskspace` error. But it's running on another node now, so we'll see. (and I'm cleaning up the Windows nodes right now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:21,performance,failur,failure,21,"@guitargeek the only failure I see (on Jenkins) was due to `Out of diskspace` error. But it's running on another node now, so we'll see. (and I'm cleaning up the Windows nodes right now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:67,performance,disk,diskspace,67,"@guitargeek the only failure I see (on Jenkins) was due to `Out of diskspace` error. But it's running on another node now, so we'll see. (and I'm cleaning up the Windows nodes right now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:78,performance,error,error,78,"@guitargeek the only failure I see (on Jenkins) was due to `Out of diskspace` error. But it's running on another node now, so we'll see. (and I'm cleaning up the Windows nodes right now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:21,reliability,fail,failure,21,"@guitargeek the only failure I see (on Jenkins) was due to `Out of diskspace` error. But it's running on another node now, so we'll see. (and I'm cleaning up the Windows nodes right now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:78,safety,error,error,78,"@guitargeek the only failure I see (on Jenkins) was due to `Out of diskspace` error. But it's running on another node now, so we'll see. (and I'm cleaning up the Windows nodes right now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:78,usability,error,error,78,"@guitargeek the only failure I see (on Jenkins) was due to `Out of diskspace` error. But it's running on another node now, so we'll see. (and I'm cleaning up the Windows nodes right now)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13993:11,energy efficiency,green,green,11,Windows is green now,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13993
https://github.com/root-project/root/pull/13995:64,deployability,version,version,64,"Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! Can you please check if this alternative PR works for you? https://github.com/root-project/root/pull/14003",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:64,integrability,version,version,64,"Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! Can you please check if this alternative PR works for you? https://github.com/root-project/root/pull/14003",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:64,modifiability,version,version,64,"Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! Can you please check if this alternative PR works for you? https://github.com/root-project/root/pull/14003",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:108,security,hack,hack,108,"Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! Can you please check if this alternative PR works for you? https://github.com/root-project/root/pull/14003",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:297,availability,avail,available,297,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:1389,availability,avail,available,1389,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:66,deployability,version,version,66,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:227,deployability,version,version,227,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:280,deployability,API,API,280,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:502,deployability,version,version,502,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:939,deployability,Build,Build,939,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:949,deployability,instal,install,949,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:1102,deployability,build,build,1102,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:1148,deployability,build,building,1148,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:1164,deployability,releas,release,1164,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:1296,deployability,build,build,1296,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:1500,deployability,build,builds,1500,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:66,integrability,version,version,66,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:227,integrability,version,version,227,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:280,integrability,API,API,280,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:337,integrability,configur,configure,337,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:502,integrability,version,version,502,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:853,integrability,configur,configure,853,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:280,interoperability,API,API,280,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:1207,interoperability,distribut,distribution,1207,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:66,modifiability,version,version,66,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:227,modifiability,version,version,227,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:337,modifiability,configur,configure,337,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:502,modifiability,version,version,502,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:803,modifiability,variab,variable,803,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:853,modifiability,configur,configure,853,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:1195,modifiability,pac,packages,1195,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:1288,modifiability,pac,package,1288,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:297,reliability,availab,available,297,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:1389,reliability,availab,available,1389,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:297,safety,avail,available,297,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:1389,safety,avail,available,1389,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:110,security,hack,hack,110,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:297,security,availab,available,297,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:337,security,configur,configure,337,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:853,security,configur,configure,853,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:1389,security,availab,available,1389,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:865,usability,help,help,865,"> Thanks a lot @ellert for this fix! This means that a new ZeroMQ version came out, and I can get rid of this hack entirely! > . > Can you please check if this alternative PR works for you? #14003. You can not rely only on the version number check. The zmq_ppoll is in the drafts API, and is only available if libzmq was compiled with ./configure --enable-drafts. As far as I can see there is no way to check this other than checking that the symbol is in the library. This check was broken in the old version of FindZeroMQ since in only defined CMAKE_REQUIRED_DEFINITIONS and not CMAKE_REQUIRED_LIBRARIES and CMAKE_REQUIRED_INCLUDES before calling check_cxx_symbol_exists. The check was also never triggered, because it only happens if (ZeroMQ_FOUND), but ZeroMQ_FOUND hasn't been defined yet when the variable is checked. According to the output of ./configure --help in libzmq, the --enable-drafts is default yes:. ```. --enable-drafts Build and install draft classes and methods. [default=yes]. ```. However, as reported here: https://github.com/zeromq/libzmq/issues/4613, this is only true if you build from a git checkout, but not if you are building from a release tarball, which is what packages in distribution do. I filed a request ta have the --with-drafts option added to the package build in Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=2247171, which is why it is now available in Fedora rawhide. But you need the latest zeromq-4.3.5-14.fc40 where this is enabled. Earlier 4.3.5 builds will not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:72,deployability,releas,release,72,"I see, Well in this case this PR should be merged and backported to the release branch, so you can build the package on Fedora",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:99,deployability,build,build,99,"I see, Well in this case this PR should be merged and backported to the release branch, so you can build the package on Fedora",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/pull/13995:109,modifiability,pac,package,109,"I see, Well in this case this PR should be merged and backported to the release branch, so you can build the package on Fedora",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13995
https://github.com/root-project/root/issues/13996:97,deployability,manag,managed,97,"Ok, I think I understand. The tutorial does not handle neither arrays nor VLAs. Arrays support I managed to add myself, is there any example for converting VLAs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:97,energy efficiency,manag,managed,97,"Ok, I think I understand. The tutorial does not handle neither arrays nor VLAs. Arrays support I managed to add myself, is there any example for converting VLAs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:39,reliability,doe,does,39,"Ok, I think I understand. The tutorial does not handle neither arrays nor VLAs. Arrays support I managed to add myself, is there any example for converting VLAs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:97,safety,manag,managed,97,"Ok, I think I understand. The tutorial does not handle neither arrays nor VLAs. Arrays support I managed to add myself, is there any example for converting VLAs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:14,testability,understand,understand,14,"Ok, I think I understand. The tutorial does not handle neither arrays nor VLAs. Arrays support I managed to add myself, is there any example for converting VLAs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:87,usability,support,support,87,"Ok, I think I understand. The tutorial does not handle neither arrays nor VLAs. Arrays support I managed to add myself, is there any example for converting VLAs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:103,availability,avail,available,103,The tutorial on manual data conversion from TTree to RNTuple has been removed now that the importer is available. The importer comes with its own tutorial (`ntpl008_import`). The importer handles VLA correctly. Closing this. Please feel free to reopen if necessary.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:28,interoperability,convers,conversion,28,The tutorial on manual data conversion from TTree to RNTuple has been removed now that the importer is available. The importer comes with its own tutorial (`ntpl008_import`). The importer handles VLA correctly. Closing this. Please feel free to reopen if necessary.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:103,reliability,availab,available,103,The tutorial on manual data conversion from TTree to RNTuple has been removed now that the importer is available. The importer comes with its own tutorial (`ntpl008_import`). The importer handles VLA correctly. Closing this. Please feel free to reopen if necessary.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:103,safety,avail,available,103,The tutorial on manual data conversion from TTree to RNTuple has been removed now that the importer is available. The importer comes with its own tutorial (`ntpl008_import`). The importer handles VLA correctly. Closing this. Please feel free to reopen if necessary.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/issues/13996:103,security,availab,available,103,The tutorial on manual data conversion from TTree to RNTuple has been removed now that the importer is available. The importer comes with its own tutorial (`ntpl008_import`). The importer handles VLA correctly. Closing this. Please feel free to reopen if necessary.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13996
https://github.com/root-project/root/pull/13997:315,usability,indicat,indicate,315,"The point I am trying to make is that if you take the tutorial as a baseline to convert from TTree to RNTuple, as I did, the code breaks when encountering a branch with an array in it. It would also be good to have an example on how to convert a branch with VLAs (i.e. those which in a TTree use BranchName_size to indicate the size of the VLA).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13997
https://github.com/root-project/root/pull/13998:76,integrability,coupl,couple,76,"> I cannot judge the validity of this change, so leaving this open. Still a couple of comments for possible future PRs, I hope it's useful! Thank you Axel for the comments, I will take these into account in a future PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13998
https://github.com/root-project/root/pull/13998:76,modifiability,coupl,couple,76,"> I cannot judge the validity of this change, so leaving this open. Still a couple of comments for possible future PRs, I hope it's useful! Thank you Axel for the comments, I will take these into account in a future PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13998
https://github.com/root-project/root/pull/13998:21,safety,valid,validity,21,"> I cannot judge the validity of this change, so leaving this open. Still a couple of comments for possible future PRs, I hope it's useful! Thank you Axel for the comments, I will take these into account in a future PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13998
https://github.com/root-project/root/pull/13998:76,testability,coupl,couple,76,"> I cannot judge the validity of this change, so leaving this open. Still a couple of comments for possible future PRs, I hope it's useful! Thank you Axel for the comments, I will take these into account in a future PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13998
https://github.com/root-project/root/pull/14001:81,deployability,releas,release,81,"@lmoneta . > Is Dante included in the contributors list? You can see that in the release notes file, and add him if he's missing. This can be done also after the release as we (re-)generate the web version of release notes for the branch, not for specific versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14001
https://github.com/root-project/root/pull/14001:162,deployability,releas,release,162,"@lmoneta . > Is Dante included in the contributors list? You can see that in the release notes file, and add him if he's missing. This can be done also after the release as we (re-)generate the web version of release notes for the branch, not for specific versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14001
https://github.com/root-project/root/pull/14001:198,deployability,version,version,198,"@lmoneta . > Is Dante included in the contributors list? You can see that in the release notes file, and add him if he's missing. This can be done also after the release as we (re-)generate the web version of release notes for the branch, not for specific versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14001
https://github.com/root-project/root/pull/14001:209,deployability,releas,release,209,"@lmoneta . > Is Dante included in the contributors list? You can see that in the release notes file, and add him if he's missing. This can be done also after the release as we (re-)generate the web version of release notes for the branch, not for specific versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14001
https://github.com/root-project/root/pull/14001:256,deployability,version,versions,256,"@lmoneta . > Is Dante included in the contributors list? You can see that in the release notes file, and add him if he's missing. This can be done also after the release as we (re-)generate the web version of release notes for the branch, not for specific versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14001
https://github.com/root-project/root/pull/14001:198,integrability,version,version,198,"@lmoneta . > Is Dante included in the contributors list? You can see that in the release notes file, and add him if he's missing. This can be done also after the release as we (re-)generate the web version of release notes for the branch, not for specific versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14001
https://github.com/root-project/root/pull/14001:256,integrability,version,versions,256,"@lmoneta . > Is Dante included in the contributors list? You can see that in the release notes file, and add him if he's missing. This can be done also after the release as we (re-)generate the web version of release notes for the branch, not for specific versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14001
https://github.com/root-project/root/pull/14001:247,interoperability,specif,specific,247,"@lmoneta . > Is Dante included in the contributors list? You can see that in the release notes file, and add him if he's missing. This can be done also after the release as we (re-)generate the web version of release notes for the branch, not for specific versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14001
https://github.com/root-project/root/pull/14001:198,modifiability,version,version,198,"@lmoneta . > Is Dante included in the contributors list? You can see that in the release notes file, and add him if he's missing. This can be done also after the release as we (re-)generate the web version of release notes for the branch, not for specific versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14001
https://github.com/root-project/root/pull/14001:256,modifiability,version,versions,256,"@lmoneta . > Is Dante included in the contributors list? You can see that in the release notes file, and add him if he's missing. This can be done also after the release as we (re-)generate the web version of release notes for the branch, not for specific versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14001
https://github.com/root-project/root/pull/14003:32,safety,test,tested,32,What @bellenot says :) Was this tested with `-Droofit_multiprocess=ON`? I don't remember if that was included in the CI test suite in the end.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:80,safety,reme,remember,80,What @bellenot says :) Was this tested with `-Droofit_multiprocess=ON`? I don't remember if that was included in the CI test suite in the end.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:120,safety,test,test,120,What @bellenot says :) Was this tested with `-Droofit_multiprocess=ON`? I don't remember if that was included in the CI test suite in the end.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:32,testability,test,tested,32,What @bellenot says :) Was this tested with `-Droofit_multiprocess=ON`? I don't remember if that was included in the CI test suite in the end.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:120,testability,test,test,120,What @bellenot says :) Was this tested with `-Droofit_multiprocess=ON`? I don't remember if that was included in the CI test suite in the end.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:103,deployability,configurat,configuration,103,"That's a good point @egpbos. I just rebased the PR on master, let's see the CI results for the default configuration and then I'll trigger the tests with `roofit_multiprocess`. (sorry for the close and re-open, I pushed the wrong button).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:103,integrability,configur,configuration,103,"That's a good point @egpbos. I just rebased the PR on master, let's see the CI results for the default configuration and then I'll trigger the tests with `roofit_multiprocess`. (sorry for the close and re-open, I pushed the wrong button).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:103,modifiability,configur,configuration,103,"That's a good point @egpbos. I just rebased the PR on master, let's see the CI results for the default configuration and then I'll trigger the tests with `roofit_multiprocess`. (sorry for the close and re-open, I pushed the wrong button).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:143,safety,test,tests,143,"That's a good point @egpbos. I just rebased the PR on master, let's see the CI results for the default configuration and then I'll trigger the tests with `roofit_multiprocess`. (sorry for the close and re-open, I pushed the wrong button).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:103,security,configur,configuration,103,"That's a good point @egpbos. I just rebased the PR on master, let's see the CI results for the default configuration and then I'll trigger the tests with `roofit_multiprocess`. (sorry for the close and re-open, I pushed the wrong button).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:143,testability,test,tests,143,"That's a good point @egpbos. I just rebased the PR on master, let's see the CI results for the default configuration and then I'll trigger the tests with `roofit_multiprocess`. (sorry for the close and re-open, I pushed the wrong button).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:192,usability,close,close,192,"That's a good point @egpbos. I just rebased the PR on master, let's see the CI results for the default configuration and then I'll trigger the tests with `roofit_multiprocess`. (sorry for the close and re-open, I pushed the wrong button).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:11,deployability,build,build,11,@phsft-bot build just on ROOT-debian10-i386/default with flags -Droofit_multiprocess=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:112,deployability,updat,update,112,The tests now passed both with and without `roofit_multiprocess`. just pushed again with a little documentation update that doesn't need to be tested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:124,reliability,doe,doesn,124,The tests now passed both with and without `roofit_multiprocess`. just pushed again with a little documentation update that doesn't need to be tested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:4,safety,test,tests,4,The tests now passed both with and without `roofit_multiprocess`. just pushed again with a little documentation update that doesn't need to be tested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:112,safety,updat,update,112,The tests now passed both with and without `roofit_multiprocess`. just pushed again with a little documentation update that doesn't need to be tested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:143,safety,test,tested,143,The tests now passed both with and without `roofit_multiprocess`. just pushed again with a little documentation update that doesn't need to be tested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:112,security,updat,update,112,The tests now passed both with and without `roofit_multiprocess`. just pushed again with a little documentation update that doesn't need to be tested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:4,testability,test,tests,4,The tests now passed both with and without `roofit_multiprocess`. just pushed again with a little documentation update that doesn't need to be tested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:143,testability,test,tested,143,The tests now passed both with and without `roofit_multiprocess`. just pushed again with a little documentation update that doesn't need to be tested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14003:98,usability,document,documentation,98,The tests now passed both with and without `roofit_multiprocess`. just pushed again with a little documentation update that doesn't need to be tested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14003
https://github.com/root-project/root/pull/14011:16,safety,review,review,16,"Thanks for your review, @eguiraud! I addressed your requests about not changing the lexertk file and replacing the `override` with `final` in one case. I also undid the changes to `tree/tree*`, which I will do in another PR that Philippe can review. Then, this PR can be merged soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:242,safety,review,review,242,"Thanks for your review, @eguiraud! I addressed your requests about not changing the lexertk file and replacing the `override` with `final` in one case. I also undid the changes to `tree/tree*`, which I will do in another PR that Philippe can review. Then, this PR can be merged soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:16,testability,review,review,16,"Thanks for your review, @eguiraud! I addressed your requests about not changing the lexertk file and replacing the `override` with `final` in one case. I also undid the changes to `tree/tree*`, which I will do in another PR that Philippe can review. Then, this PR can be merged soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/pull/14011:242,testability,review,review,242,"Thanks for your review, @eguiraud! I addressed your requests about not changing the lexertk file and replacing the `override` with `final` in one case. I also undid the changes to `tree/tree*`, which I will do in another PR that Philippe can review. Then, this PR can be merged soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14011
https://github.com/root-project/root/issues/14016:123,usability,help,help,123,"@vepadulano Hi Vincenzo, sorry to bother you if this is already on your radar, but I was wondering if I could receive some help with this? Thank you in advance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:0,safety,test,tested,0,"tested with ROOT master (llvm16 and the new cppyy), still reproducible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/issues/14016:0,testability,test,tested,0,"tested with ROOT master (llvm16 and the new cppyy), still reproducible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14016
https://github.com/root-project/root/pull/14017:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:18,safety,test,testing,18,"I've just got the testing framework ready, and will conduct local tests before further review. (Just read the PR code of conduct, my apologies for creating a PR without the local tests)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:66,safety,test,tests,66,"I've just got the testing framework ready, and will conduct local tests before further review. (Just read the PR code of conduct, my apologies for creating a PR without the local tests)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:87,safety,review,review,87,"I've just got the testing framework ready, and will conduct local tests before further review. (Just read the PR code of conduct, my apologies for creating a PR without the local tests)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:179,safety,test,tests,179,"I've just got the testing framework ready, and will conduct local tests before further review. (Just read the PR code of conduct, my apologies for creating a PR without the local tests)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:18,testability,test,testing,18,"I've just got the testing framework ready, and will conduct local tests before further review. (Just read the PR code of conduct, my apologies for creating a PR without the local tests)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:66,testability,test,tests,66,"I've just got the testing framework ready, and will conduct local tests before further review. (Just read the PR code of conduct, my apologies for creating a PR without the local tests)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:87,testability,review,review,87,"I've just got the testing framework ready, and will conduct local tests before further review. (Just read the PR code of conduct, my apologies for creating a PR without the local tests)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:179,testability,test,tests,179,"I've just got the testing framework ready, and will conduct local tests before further review. (Just read the PR code of conduct, my apologies for creating a PR without the local tests)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:26,integrability,messag,message,26,"@Axel-Naumann I've left a message on the root web channel [https://mattermost.web.cern.ch/root/channels/root-io](https://mattermost.web.cern.ch/root/channels/root-io), could you have a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:26,interoperability,messag,message,26,"@Axel-Naumann I've left a message on the root web channel [https://mattermost.web.cern.ch/root/channels/root-io](https://mattermost.web.cern.ch/root/channels/root-io), could you have a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:21,safety,test,tested,21,"@pcanal Successfully tested changes locally, ready for review 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:55,safety,review,review,55,"@pcanal Successfully tested changes locally, ready for review 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:21,testability,test,tested,21,"@pcanal Successfully tested changes locally, ready for review 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:55,testability,review,review,55,"@pcanal Successfully tested changes locally, ready for review 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:59,deployability,build,builds,59,"@pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅. It should be ready now. My apologies for the repeated reviews.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:92,deployability,patch,patch,92,"@pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅. It should be ready now. My apologies for the repeated reviews.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:126,deployability,fail,failing,126,"@pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅. It should be ready now. My apologies for the repeated reviews.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:145,deployability,build,build,145,"@pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅. It should be ready now. My apologies for the repeated reviews.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:75,performance,time,time,75,"@pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅. It should be ready now. My apologies for the repeated reviews.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:126,reliability,fail,failing,126,"@pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅. It should be ready now. My apologies for the repeated reviews.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:49,safety,test,tests,49,"@pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅. It should be ready now. My apologies for the repeated reviews.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:92,safety,patch,patch,92,"@pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅. It should be ready now. My apologies for the repeated reviews.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:208,safety,review,reviews,208,"@pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅. It should be ready now. My apologies for the repeated reviews.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:92,security,patch,patch,92,"@pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅. It should be ready now. My apologies for the repeated reviews.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:49,testability,test,tests,49,"@pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅. It should be ready now. My apologies for the repeated reviews.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:208,testability,review,reviews,208,"@pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅. It should be ready now. My apologies for the repeated reviews.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:61,deployability,build,builds,61,"> @pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅 It should be ready now. My apologies for the repeated reviews. Can I have the review for this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:94,deployability,patch,patch,94,"> @pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅 It should be ready now. My apologies for the repeated reviews. Can I have the review for this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:128,deployability,fail,failing,128,"> @pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅 It should be ready now. My apologies for the repeated reviews. Can I have the review for this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:147,deployability,build,build,147,"> @pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅 It should be ready now. My apologies for the repeated reviews. Can I have the review for this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:77,performance,time,time,77,"> @pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅 It should be ready now. My apologies for the repeated reviews. Can I have the review for this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:128,reliability,fail,failing,128,"> @pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅 It should be ready now. My apologies for the repeated reviews. Can I have the review for this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:51,safety,test,tests,51,"> @pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅 It should be ready now. My apologies for the repeated reviews. Can I have the review for this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:94,safety,patch,patch,94,"> @pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅 It should be ready now. My apologies for the repeated reviews. Can I have the review for this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:209,safety,review,reviews,209,"> @pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅 It should be ready now. My apologies for the repeated reviews. Can I have the review for this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:233,safety,review,review,233,"> @pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅 It should be ready now. My apologies for the repeated reviews. Can I have the review for this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:94,security,patch,patch,94,"> @pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅 It should be ready now. My apologies for the repeated reviews. Can I have the review for this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:51,testability,test,tests,51,"> @pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅 It should be ready now. My apologies for the repeated reviews. Can I have the review for this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:209,testability,review,reviews,209,"> @pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅 It should be ready now. My apologies for the repeated reviews. Can I have the review for this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:233,testability,review,review,233,"> @pcanal I had been running the master branch for tests and builds all this time, and not my patch branch; that's why its been failing the Jekyll build 😅 It should be ready now. My apologies for the repeated reviews. Can I have the review for this change?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:34,usability,tool,tools,34,"@pcanal For some reason the clang tools is running on a different branch, and is not addressing the latest commit to this branch.. Everything else seems fine. Also as a side note, should I rebase all of this to a single commit?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:97,deployability,API,API,97,Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:97,integrability,API,API,97,Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:97,interoperability,API,API,97,Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:133,interoperability,compatib,compatible,133,Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:99,deployability,API,API,99,"> Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ). @Axel-Naumann Any updates on the naming convention to be used? Also, I'd like to know if there is a possibility for me adding some unit test cases for the newly implemented interface, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:234,deployability,updat,updates,234,"> Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ). @Axel-Naumann Any updates on the naming convention to be used? Also, I'd like to know if there is a possibility for me adding some unit test cases for the newly implemented interface, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:99,integrability,API,API,99,"> Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ). @Axel-Naumann Any updates on the naming convention to be used? Also, I'd like to know if there is a possibility for me adding some unit test cases for the newly implemented interface, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:389,integrability,interfac,interface,389,"> Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ). @Axel-Naumann Any updates on the naming convention to be used? Also, I'd like to know if there is a possibility for me adding some unit test cases for the newly implemented interface, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:99,interoperability,API,API,99,"> Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ). @Axel-Naumann Any updates on the naming convention to be used? Also, I'd like to know if there is a possibility for me adding some unit test cases for the newly implemented interface, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:135,interoperability,compatib,compatible,135,"> Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ). @Axel-Naumann Any updates on the naming convention to be used? Also, I'd like to know if there is a possibility for me adding some unit test cases for the newly implemented interface, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:389,interoperability,interfac,interface,389,"> Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ). @Axel-Naumann Any updates on the naming convention to be used? Also, I'd like to know if there is a possibility for me adding some unit test cases for the newly implemented interface, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:389,modifiability,interfac,interface,389,"> Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ). @Axel-Naumann Any updates on the naming convention to be used? Also, I'd like to know if there is a possibility for me adding some unit test cases for the newly implemented interface, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:234,safety,updat,updates,234,"> Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ). @Axel-Naumann Any updates on the naming convention to be used? Also, I'd like to know if there is a possibility for me adding some unit test cases for the newly implemented interface, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:352,safety,test,test,352,"> Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ). @Axel-Naumann Any updates on the naming convention to be used? Also, I'd like to know if there is a possibility for me adding some unit test cases for the newly implemented interface, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:234,security,updat,updates,234,"> Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ). @Axel-Naumann Any updates on the naming convention to be used? Also, I'd like to know if there is a possibility for me adding some unit test cases for the newly implemented interface, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:347,testability,unit,unit,347,"> Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ). @Axel-Naumann Any updates on the naming convention to be used? Also, I'd like to know if there is a possibility for me adding some unit test cases for the newly implemented interface, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:352,testability,test,test,352,"> Thanks @JRS296 ! We need to decide how to proceed; the name we choose will become part of ROOT's API and we need to keep it backward compatible from there on. We will come back to you hopefully tonight (@pcanal ). @Axel-Naumann Any updates on the naming convention to be used? Also, I'd like to know if there is a possibility for me adding some unit test cases for the newly implemented interface, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:667,deployability,Fail,Fail,667,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:1299,deployability,infrastructur,infrastructure,1299,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:39,energy efficiency,current,current,39,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:165,performance,Synch,Synchronizes,165,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:178,performance,multi-thread,multi-threaded,178,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:210,performance,lock,locks,210,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:470,performance,Synch,Synchronizes,470,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:483,performance,multi-thread,multi-threaded,483,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:515,performance,lock,locks,515,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:765,performance,Synch,Synchronizes,765,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:778,performance,multi-thread,multi-threaded,778,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:810,performance,lock,locks,810,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:1080,performance,Synch,Synchronizes,1080,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:1093,performance,multi-thread,multi-threaded,1093,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:1125,performance,lock,locks,1125,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:400,reliability,doe,does,400,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:667,reliability,Fail,Fail,667,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:1291,safety,test,testing,1291,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:1325,safety,test,test,1325,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:193,security,access,accesses,193,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:210,security,lock,locks,210,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:498,security,access,accesses,498,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:515,security,lock,locks,515,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:793,security,access,accesses,793,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:810,security,lock,locks,810,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:1108,security,access,accesses,1108,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:1125,security,lock,locks,1125,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:1038,testability,simpl,simply,1038,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:1291,testability,test,testing,1291,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:1325,testability,test,test,1325,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14017:1038,usability,simpl,simply,1038,"We are still discussing the names. The current proposal is:. ```. using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with. /// that name does not exist, an invalid RFilePtr will be returned. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid. /// `RFilePtr`) if a file with this name already exists. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name. /// already exists, delete it and create a new one. Else simply create a new file. ///. /// \note: Synchronizes multi-threaded accesses through locks. static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());. ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14017
https://github.com/root-project/root/pull/14018:143,safety,review,review,143,"Thanks @guitargeek ,. - added fully qualified function names in some places for better Doxygen rendering (I wasn't too sure about this, please review). - Removed random commit IDs and added branch name to repo links",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:143,testability,review,review,143,"Thanks @guitargeek ,. - added fully qualified function names in some places for better Doxygen rendering (I wasn't too sure about this, please review). - Removed random commit IDs and added branch name to repo links",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:12,availability,ping,ping,12,@guitargeek ping. Is there anything else to be done here?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/pull/14018:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14018
https://github.com/root-project/root/issues/14024:42,safety,test,test,42,I'll take a look. What is the best way to test new code in build_root.py?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:42,testability,test,test,42,I'll take a look. What is the best way to test new code in build_root.py?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/issues/14024:54,security,modif,modifications,54,"Create a dev branch in your fork of root.git for your modifications in build_root.py. Create a branch with the name name in your fork of roottest.git but from an old commit that cannot work with your root.git branch. If things work, the rebasing of your roottest branch in build_root.py should make the CI pass nonetheless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14024
https://github.com/root-project/root/pull/14031:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/soversion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14031
https://github.com/root-project/root/pull/14031:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/soversion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14031
https://github.com/root-project/root/pull/14031:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/soversion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14031
https://github.com/root-project/root/pull/14031:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14031
https://github.com/root-project/root/pull/14031:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14031
https://github.com/root-project/root/pull/14031:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14031
https://github.com/root-project/root/issues/14032:60,availability,error,error,60,"For me, the title does not change but it does not crash. No error messages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:66,integrability,messag,messages,66,"For me, the title does not change but it does not crash. No error messages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:66,interoperability,messag,messages,66,"For me, the title does not change but it does not crash. No error messages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:60,performance,error,error,60,"For me, the title does not change but it does not crash. No error messages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:18,reliability,doe,does,18,"For me, the title does not change but it does not crash. No error messages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:41,reliability,doe,does,41,"For me, the title does not change but it does not crash. No error messages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:60,safety,error,error,60,"For me, the title does not change but it does not crash. No error messages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:60,usability,error,error,60,"For me, the title does not change but it does not crash. No error messages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:131,availability,error,error,131,It is not crash as well for me. But if I try to move title using my mouse - I get corrupted drawing (as on screenshot) and. lot of error messages.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:92,energy efficiency,draw,drawing,92,It is not crash as well for me. But if I try to move title using my mouse - I get corrupted drawing (as on screenshot) and. lot of error messages.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:137,integrability,messag,messages,137,It is not crash as well for me. But if I try to move title using my mouse - I get corrupted drawing (as on screenshot) and. lot of error messages.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:137,interoperability,messag,messages,137,It is not crash as well for me. But if I try to move title using my mouse - I get corrupted drawing (as on screenshot) and. lot of error messages.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:131,performance,error,error,131,It is not crash as well for me. But if I try to move title using my mouse - I get corrupted drawing (as on screenshot) and. lot of error messages.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:131,safety,error,error,131,It is not crash as well for me. But if I try to move title using my mouse - I get corrupted drawing (as on screenshot) and. lot of error messages.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:68,usability,mous,mouse,68,It is not crash as well for me. But if I try to move title using my mouse - I get corrupted drawing (as on screenshot) and. lot of error messages.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:131,usability,error,error,131,It is not crash as well for me. But if I try to move title using my mouse - I get corrupted drawing (as on screenshot) and. lot of error messages.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/issues/14032:1026,energy efficiency,Draw,Draw,1026,"The label is not the title itself. The label can be set like in the following example. The TPaveText of a histogram title has no label:. ```. {. TCanvas *C = new TCanvas(""C"", ""C"",0,0,700,500);. C->SetHighLightColor(2);. C->Range(0,0,1,1);. C->SetBorderSize(2);. C->SetFrameFillColor(0);. . TPaveText *pt = new TPaveText(0.05,0.1,0.95,0.8,""br"");. pt->SetLabel(""Born equation"");. pt->SetFillColor(19);. TText *text = pt->AddText(""#frac{2s}{#pi#alpha^{2}} #frac{d#sigma}{dcos#theta} (e^{+}e^{-} #rightarrow f#bar{f} ) = #left| #frac{1}{1 - #Delta#alpha} #right|^{2} (1+cos^{2}#theta)"");. text = pt->AddText(""+ 4 Re #left{ #frac{2}{1 - #Delta#alpha} #chi(s) #[]{#hat{g}_{#nu}^{e}#hat{g}_{#nu}^{f} (1 + cos^{2}#theta) + 2 #hat{g}_{a}^{e}#hat{g}_{a}^{f} cos#theta) } #right}"");. text = pt->AddText(""+ 16#left|#chi(s)#right|^{2} #left[(#hat{g}_{a}^{e}^{2} + #hat{g}_{v}^{e}^{2}) (#hat{g}_{a}^{f}^{2} + #hat{g}_{v}^{f}^{2})(1+cos^{2}#theta) + 8 #hat{g}_{a}^{e} #hat{g}_{a}^{f} #hat{g}_{v}^{e} #hat{g}_{v}^{f}cos#theta#right] "");. pt->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14032
https://github.com/root-project/root/pull/14034:10,safety,test,tested,10,"@pcanal I tested with RDataFrame `Snapshot` and a hand-written usage of `TBufferMerger`, writing a quite simple tree. Any ideas what else to test, do we have a more complex benchmark / a production use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:141,safety,test,test,141,"@pcanal I tested with RDataFrame `Snapshot` and a hand-written usage of `TBufferMerger`, writing a quite simple tree. Any ideas what else to test, do we have a more complex benchmark / a production use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:165,safety,compl,complex,165,"@pcanal I tested with RDataFrame `Snapshot` and a hand-written usage of `TBufferMerger`, writing a quite simple tree. Any ideas what else to test, do we have a more complex benchmark / a production use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:165,security,compl,complex,165,"@pcanal I tested with RDataFrame `Snapshot` and a hand-written usage of `TBufferMerger`, writing a quite simple tree. Any ideas what else to test, do we have a more complex benchmark / a production use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:10,testability,test,tested,10,"@pcanal I tested with RDataFrame `Snapshot` and a hand-written usage of `TBufferMerger`, writing a quite simple tree. Any ideas what else to test, do we have a more complex benchmark / a production use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:105,testability,simpl,simple,105,"@pcanal I tested with RDataFrame `Snapshot` and a hand-written usage of `TBufferMerger`, writing a quite simple tree. Any ideas what else to test, do we have a more complex benchmark / a production use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:141,testability,test,test,141,"@pcanal I tested with RDataFrame `Snapshot` and a hand-written usage of `TBufferMerger`, writing a quite simple tree. Any ideas what else to test, do we have a more complex benchmark / a production use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:105,usability,simpl,simple,105,"@pcanal I tested with RDataFrame `Snapshot` and a hand-written usage of `TBufferMerger`, writing a quite simple tree. Any ideas what else to test, do we have a more complex benchmark / a production use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2388,availability,down,down,2388,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:5,energy efficiency,measur,measurements,5,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:426,energy efficiency,clock,clock,426,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:586,energy efficiency,clock,clock,586,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:746,energy efficiency,clock,clock,746,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:908,energy efficiency,clock,clock,908,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1071,energy efficiency,clock,clock,1071,"gram that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapse",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1234,energy efficiency,clock,clock,1234,it (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapse,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1437,energy efficiency,clock,clock,1437,":mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for hi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1597,energy efficiency,clock,clock,1597,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1757,energy efficiency,clock,clock,1757,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1919,energy efficiency,clock,clock,1919,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2082,energy efficiency,clock,clock,2082,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2245,energy efficiency,clock,clock,2245,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:254,integrability,queue,queue,254,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:254,performance,queue,queue,254,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:388,performance,time,time,388,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:433,performance,time,time,433,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:548,performance,time,time,548,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:593,performance,time,time,593,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:708,performance,time,time,708,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:753,performance,time,time,753,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:869,performance,time,time,869,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:915,performance,time,time,915,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1032,performance,time,time,1032,"1`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1078,performance,time,time,1078,"hat writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1195,performance,time,time,1195,"rom this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1241,performance,time,time,1241,moving the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wal,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1399,performance,time,time,1399,): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1444,performance,time,time,1444," or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1559,performance,time,time,1559,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1604,performance,time,time,1604,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1719,performance,time,time,1719,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1764,performance,time,time,1764,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1880,performance,time,time,1880,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1926,performance,time,time,1926,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2043,performance,time,time,2043,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2089,performance,time,time,2089,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2206,performance,time,time,2206,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2252,performance,time,time,2252,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2376,performance,memor,memory,2376,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2492,performance,perform,performance,2492,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:64,testability,simpl,simple,64,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:64,usability,simpl,simple,64,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:383,usability,User,User,383,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:543,usability,User,User,543,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:703,usability,User,User,703,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:864,usability,User,User,864,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1027,usability,User,User,1027,"perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1190,usability,User,User,1190,"mit from this PR, and finally the second commit (removing the queue):. <details>. <summary>full data</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1394,usability,User,User,1394,conds): 406.16. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30. Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down eve,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1554,usability,User,User,1554,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1714,usability,User,User,1714,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1875,usability,User,User,1875,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2038,usability,User,User,2038,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2201,usability,User,User,2201,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2376,usability,memor,memory,2376,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2492,usability,perform,performance,2492,"392068. ttreeTBufferMerger 20000000 16. User time (seconds): 404.52. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24. Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16. User time (seconds): 407.27. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89. Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128. User time (seconds): 6726.12. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26. Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128. User time (seconds): 4558.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53. Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128. User time (seconds): 4089.10. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39. Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113. ttreeTBufferMerger 20000000 16. User time (seconds): 406.02. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20. Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16. User time (seconds): 405.00. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22. Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16. User time (seconds): 406.67. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26. Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128. User time (seconds): 6967.42. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79. Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128. User time (seconds): 4209.07. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90. Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128. User time (seconds): 3700.49. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74. Maximum resident set size (kbytes): 20422848. ```. </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:936,availability,slo,slower,936,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1134,availability,error,error,1134,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1057,deployability,version,versions,1057,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:892,energy efficiency,measur,measurement,892,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1034,energy efficiency,measur,measure,1034,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:286,integrability,queue,queue,286,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:578,integrability,queue,queue,578,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:921,integrability,queue,queue,921,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1057,integrability,version,versions,1057,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1057,modifiability,version,versions,1057,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:286,performance,queue,queue,286,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:578,performance,queue,queue,578,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:921,performance,queue,queue,921,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1134,performance,error,error,1134,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:936,reliability,slo,slower,936,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1112,safety,test,tests,1112,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1134,safety,error,error,1134,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1112,testability,test,tests,1112,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1134,usability,error,error,1134,"<details>. <summary>Here's the full data from yesterday:</summary>. ```. ntpl-perf01:/data/ssdext4/jonas/20231113. 00-master. 0:26.13. 0:26.11. 0:26.53. 0:28.10. 0:30.30. 0:34.19. 0:52.34. 2:11.26. 01-limit. 0:25.86. 0:26.09. 0:26.86. 0:28.11. 0:30.24. 0:33.25. 0:53.51. 1:50.53. 02-no-queue. 0:26.04. 0:26.54. 0:26.85. 0:28.03. 0:29.89. 0:33.16. 0:49.10. 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113. 00-master. 0:27.11. 0:30.00. 0:33.98. 0:42.73. 0:59.20. 1:26.24. 2:29.70. 4:35.79. 01-limit. 0:27.70. 0:29.85. 0:32.01. 0:42.52. 1:00.22. 1:17.40. 2:26.46. 4:37.90. 02-no-queue. 0:31.03. 0:30.05. 0:34.06. 0:42.76. 1:00.26. 1:30.60. 2:29.95. 4:34.74. ```. </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23). ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3800,availability,slo,slower,3800,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:336,deployability,log,log,336,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:393,deployability,log,log,393,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:503,deployability,log,log,503,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:616,deployability,log,log,616,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:738,deployability,log,log,738,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:796,deployability,log,log,796,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:907,deployability,log,log,907,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1021,deployability,log,log,1021,"by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1174,deployability,log,log,1174,"ranches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1231,deployability,log,log,1231,"es with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1341,deployability,log,log,1341,"reeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1454,deployability,log,log,1454,"eTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1576,deployability,log,log,1576,"erBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1634,deployability,log,log,1634,"lock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1745,deployability,log,log,1745,"eTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1859,deployability,log,log,1859,"BufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2012,deployability,log,log,2012,"00.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2069,deployability,log,log,2069,"5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2179,deployability,log,log,2179,"reeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2292,deployability,log,log,2292,"eTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2414,deployability,log,log,2414,"erBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2472,deployability,log,log,2472,"lock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2583,deployability,log,log,2583,"eTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2697,deployability,log,log,2697,"BufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), bu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2850,deployability,log,log,2850,"00.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the mea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2907,deployability,log,log,2907,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3017,deployability,log,log,3017,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3130,deployability,log,log,3130,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3252,deployability,log,log,3252,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3310,deployability,log,log,3310,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3421,deployability,log,log,3421,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3535,deployability,log,log,3535,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:412,energy efficiency,clock,clock,412,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:522,energy efficiency,clock,clock,522,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:635,energy efficiency,clock,clock,635,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:815,energy efficiency,clock,clock,815,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:926,energy efficiency,clock,clock,926,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1040,energy efficiency,clock,clock,1040,"ested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1250,energy efficiency,clock,clock,1250,"es, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1360,energy efficiency,clock,clock,1360,"ches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1473,energy efficiency,clock,clock,1473,"es.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1653,energy efficiency,clock,clock,1653,"or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1764,energy efficiency,clock,clock,1764,"es.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1878,energy efficiency,clock,clock,1878,".01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2088,energy efficiency,clock,clock,2088,"-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2198,energy efficiency,clock,clock,2198,"ches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2311,energy efficiency,clock,clock,2311,"es.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2491,energy efficiency,clock,clock,2491,"or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2602,energy efficiency,clock,clock,2602,"es.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The sc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2716,energy efficiency,clock,clock,2716,".01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes propos",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2926,energy efficiency,clock,clock,2926,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3036,energy efficiency,clock,clock,3036,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3149,energy efficiency,clock,clock,3149,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3329,energy efficiency,clock,clock,3329,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3440,energy efficiency,clock,clock,3440,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3554,energy efficiency,clock,clock,3554,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3849,energy efficiency,measur,measurement,3849,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:595,integrability,queue,queue,595,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:999,integrability,queue,queue,999,"llowing a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1433,integrability,queue,queue,1433,"m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMerge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1837,integrability,queue,queue,1837,":ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2271,integrability,queue,queue,2271,"m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMerge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2675,integrability,queue,queue,2675,":ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3109,integrability,queue,queue,3109,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3513,integrability,queue,queue,3513,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:61,modifiability,scenario,scenario,61,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:116,modifiability,scal,scaling,116,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3603,modifiability,scal,scaling,3603,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:206,performance,memor,memory,206,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:419,performance,time,time,419,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:529,performance,time,time,529,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:595,performance,queue,queue,595,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:642,performance,time,time,642,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:822,performance,time,time,822,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:933,performance,time,time,933,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:999,performance,queue,queue,999,"llowing a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1047,performance,time,time,1047,"a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-ma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1257,performance,time,time,1257,"d so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1367,performance,time,time,1367,"0-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1433,performance,queue,queue,1433,"m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMerge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1480,performance,time,time,1480,"limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elaps",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1660,performance,time,time,1660,"s): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1771,performance,time,time,1771,"master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1837,performance,queue,queue,1837,":ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1885,performance,time,time,1885,"mit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-ma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2095,performance,time,time,2095,"1 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2205,performance,time,time,2205,"0-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2271,performance,queue,queue,2271,"m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMerge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2318,performance,time,time,2318,"limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elaps",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2498,performance,time,time,2498,"s): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2609,performance,time,time,2609,"master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2675,performance,queue,queue,2675,":ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2723,performance,time,time,2723,"mit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed her",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2933,performance,time,time,2933,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3043,performance,time,time,3043,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3109,performance,queue,queue,3109,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3156,performance,time,time,3156,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3336,performance,time,time,3336,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3447,performance,time,time,3447,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3513,performance,queue,queue,3513,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3561,performance,time,time,3561,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3751,performance,perform,performance,3751,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3800,reliability,slo,slower,3800,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:42,safety,test,tested,42,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:336,safety,log,log,336,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:393,safety,log,log,393,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:503,safety,log,log,503,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:616,safety,log,log,616,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:738,safety,log,log,738,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:796,safety,log,log,796,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:907,safety,log,log,907,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1021,safety,log,log,1021,"by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1174,safety,log,log,1174,"ranches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1231,safety,log,log,1231,"es with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1341,safety,log,log,1341,"reeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1454,safety,log,log,1454,"eTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1576,safety,log,log,1576,"erBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1634,safety,log,log,1634,"lock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1745,safety,log,log,1745,"eTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1859,safety,log,log,1859,"BufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2012,safety,log,log,2012,"00.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2069,safety,log,log,2069,"5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2179,safety,log,log,2179,"reeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2292,safety,log,log,2292,"eTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2414,safety,log,log,2414,"erBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2472,safety,log,log,2472,"lock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2583,safety,log,log,2583,"eTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2697,safety,log,log,2697,"BufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), bu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2850,safety,log,log,2850,"00.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the mea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2907,safety,log,log,2907,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3017,safety,log,log,3017,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3130,safety,log,log,3130,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3252,safety,log,log,3252,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3310,safety,log,log,3310,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3421,safety,log,log,3421,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3535,safety,log,log,3535,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:85,security,ident,identical,85,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:336,security,log,log,336,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:393,security,log,log,393,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:503,security,log,log,503,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:616,security,log,log,616,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:738,security,log,log,738,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:796,security,log,log,796,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:907,security,log,log,907,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1021,security,log,log,1021,"by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1174,security,log,log,1174,"ranches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1231,security,log,log,1231,"es with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1341,security,log,log,1341,"reeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1454,security,log,log,1454,"eTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1576,security,log,log,1576,"erBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1634,security,log,log,1634,"lock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1745,security,log,log,1745,"eTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:1859,security,log,log,1859,"BufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2012,security,log,log,2012,"00.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2069,security,log,log,2069,"5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2179,security,log,log,2179,"reeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2292,security,log,log,2292,"eTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2414,security,log,log,2414,"erBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2472,security,log,log,2472,"lock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2583,security,log,log,2583,"eTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2697,security,log,log,2697,"BufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), bu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2850,security,log,log,2850,"00.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the mea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:2907,security,log,log,2907,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3017,security,log,log,3017,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3130,security,log,log,3130,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3252,security,log,log,3252,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3310,security,log,log,3310,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3421,security,log,log,3421,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:3535,security,log,log,3535,"g: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t1.log. ttreeTBufferMergerBranches.00-master.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.71. ttreeTBufferMergerBranches.01-limit.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.16. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.19. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.1000000.100.t64.log. ttreeTBufferMergerBranches.00-master.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.52. ttreeTBufferMergerBranches.01-limit.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.45. ttreeTBufferMergerBranches.02-no-queue.1000000.100.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.47. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t1.log. ttreeTBufferMergerBranches.00-master.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.62. ttreeTBufferMergerBranches.01-limit.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.69. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.01. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000000.10.t64.log. ttreeTBufferMergerBranches.00-master.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.81. ttreeTBufferMergerBranches.01-limit.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:24.65. ttreeTBufferMergerBranches.02-no-queue.10000000.10.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.21. ```. The scaling with 10,000 branches is really terrible (I didn't investigate the underlying reason), but the changes proposed here seem to give comparable performance. For one thread it's sometimes a bit slower, but that could also be variations in the measurement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:42,testability,test,tested,42,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:336,testability,log,log,336,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:393,testability,log,log,393,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
https://github.com/root-project/root/pull/14034:503,testability,log,log,503,"Following a suggestion by @pcanal, I also tested a different scenario creating many (identical) branches to see the scaling behavior. I started with 10,000 entries and 10,000 branches (100k didn't fit into memory), then 100,000 entries with 1,000 branches, and so on:. ```. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t1.log. ttreeTBufferMergerBranches.00-master.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.81. ttreeTBufferMergerBranches.01-limit.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:20.92. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.52. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.10000.10000.t64.log. ttreeTBufferMergerBranches.00-master.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:49.27. ttreeTBufferMergerBranches.01-limit.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:44.11. ttreeTBufferMergerBranches.02-no-queue.10000.10000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 5:33.18. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t1.log. ttreeTBufferMergerBranches.00-master.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.10. ttreeTBufferMergerBranches.01-limit.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.29. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t1.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.39. [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100000.1000.t64.log. ttreeTBufferMergerBranches.00-master.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.43. ttreeTBufferMergerBranches.01-limit.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:50.99. ttreeTBufferMergerBranches.02-no-queue.100000.1000.t64.log: Elapsed (wall clock) time (h:mm:ss or m:ss): 0:47.48. [jonas@ntpl-perf01 20231114]$ . [jonas@ntpl-perf01 20231114]$ grep ""Elapsed"" *.100",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14034
