id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/10528:30552,security,Configur,Configured,30552,"t you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https://github.com/root-project/root gitclone`. 5. `cd build`. 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`. 7. `cmake --build . --target install -- -j4`. ### Setup. <!--. 1. ROOT version. 8. Operating system. 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper. Target: x86_64-pc-linux-gnu. Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc. Thread model: posix. Supported LTO compression algorithms: zlib zstd. gcc version 11.2.0 (GCC). ```. 2. `clang -v`. ```sh. clang version 13.0.1. Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. Found ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:30588,security,configur,configure,30588,"builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https://github.com/root-project/root gitclone`. 5. `cd build`. 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`. 7. `cmake --build . --target install -- -j4`. ### Setup. <!--. 1. ROOT version. 8. Operating system. 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper. Target: x86_64-pc-linux-gnu. Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc. Thread model: posix. Supported LTO compression algorithms: zlib zstd. gcc version 11.2.0 (GCC). ```. 2. `clang -v`. ```sh. clang version 13.0.1. Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. Found candidate GCC installation: /usr/bin/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:30836,security,hash,hash-style,30836,"ur code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https://github.com/root-project/root gitclone`. 5. `cd build`. 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`. 7. `cmake --build . --target install -- -j4`. ### Setup. <!--. 1. ROOT version. 8. Operating system. 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper. Target: x86_64-pc-linux-gnu. Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc. Thread model: posix. Supported LTO compression algorithms: zlib zstd. gcc version 11.2.0 (GCC). ```. 2. `clang -v`. ```sh. clang version 13.0.1. Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0. Found candidate GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0. Selected GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0. Candidate multilib: .;@m64. Candidate multilib: 3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:31337,security,model,model,31337,"t it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper. Target: x86_64-pc-linux-gnu. Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc. Thread model: posix. Supported LTO compression algorithms: zlib zstd. gcc version 11.2.0 (GCC). ```. 2. `clang -v`. ```sh. clang version 13.0.1. Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0. Found candidate GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0. Selected GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ```. 3. `cat /etc/*release`. ```sh. DISTRIB_ID=""Arch"". DISTRIB_RELEASE=""rolling"". DISTRIB_DESCRIPTION=""Arch Linux"". NAME=""Arch Linux"". PRETTY_NAME=""Arch Linux"". ID=arch. BUILD_ID=rolling. ANSI_COLOR=""38;2;23;147;209"". HOME_URL=""https://archlinux.org/"". DOCUMENTATION_URL=""https://wiki.archlinux.org/"". SUPPORT_URL=""https://bbs.archlinux.org/"". BUG_REPORT_URL=""https://bugs.archlinux.org/"". LOGO=archlinux-logo. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:31511,security,model,model,31511,"t it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper. Target: x86_64-pc-linux-gnu. Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc. Thread model: posix. Supported LTO compression algorithms: zlib zstd. gcc version 11.2.0 (GCC). ```. 2. `clang -v`. ```sh. clang version 13.0.1. Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0. Found candidate GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0. Selected GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ```. 3. `cat /etc/*release`. ```sh. DISTRIB_ID=""Arch"". DISTRIB_RELEASE=""rolling"". DISTRIB_DESCRIPTION=""Arch Linux"". NAME=""Arch Linux"". PRETTY_NAME=""Arch Linux"". ID=arch. BUILD_ID=rolling. ANSI_COLOR=""38;2;23;147;209"". HOME_URL=""https://archlinux.org/"". DOCUMENTATION_URL=""https://wiki.archlinux.org/"". SUPPORT_URL=""https://bbs.archlinux.org/"". BUG_REPORT_URL=""https://bugs.archlinux.org/"". LOGO=archlinux-logo. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:32266,security,LOG,LOGO,32266,"t it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper. Target: x86_64-pc-linux-gnu. Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc. Thread model: posix. Supported LTO compression algorithms: zlib zstd. gcc version 11.2.0 (GCC). ```. 2. `clang -v`. ```sh. clang version 13.0.1. Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0. Found candidate GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0. Selected GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ```. 3. `cat /etc/*release`. ```sh. DISTRIB_ID=""Arch"". DISTRIB_RELEASE=""rolling"". DISTRIB_DESCRIPTION=""Arch Linux"". NAME=""Arch Linux"". PRETTY_NAME=""Arch Linux"". ID=arch. BUILD_ID=rolling. ANSI_COLOR=""38;2;23;147;209"". HOME_URL=""https://archlinux.org/"". DOCUMENTATION_URL=""https://wiki.archlinux.org/"". SUPPORT_URL=""https://bbs.archlinux.org/"". BUG_REPORT_URL=""https://bugs.archlinux.org/"". LOGO=archlinux-logo. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:32281,security,log,logo,32281,"t it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper. Target: x86_64-pc-linux-gnu. Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc. Thread model: posix. Supported LTO compression algorithms: zlib zstd. gcc version 11.2.0 (GCC). ```. 2. `clang -v`. ```sh. clang version 13.0.1. Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0. Found candidate GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0. Selected GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ```. 3. `cat /etc/*release`. ```sh. DISTRIB_ID=""Arch"". DISTRIB_RELEASE=""rolling"". DISTRIB_DESCRIPTION=""Arch Linux"". NAME=""Arch Linux"". PRETTY_NAME=""Arch Linux"". ID=arch. BUILD_ID=rolling. ANSI_COLOR=""38;2;23;147;209"". HOME_URL=""https://archlinux.org/"". DOCUMENTATION_URL=""https://wiki.archlinux.org/"". SUPPORT_URL=""https://bbs.archlinux.org/"". BUG_REPORT_URL=""https://bugs.archlinux.org/"". LOGO=archlinux-logo. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:1712,testability,Test,Test,1712,".2.0. -- The CXX compiler identification is GNU 11.2.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.36.0""). -- Detected ROOT_VERSION 6.27.01. -- Checking internet connectivity... -- Yes. -- Looking for Python. -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed. -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""). -- Found GCC. Major version 11, minor version 2. -- Looking for pthread.h. -- Looking for pthread.h - found. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Success. -- ROOT Platform: linux. -- ROOT Compiler: GNU 11.2.0. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'). -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for versions 3.10.4 (Main) and 2.7.18. -- Looking for ZLib. -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.12""). -- Looking for nlohmann/json.hpp. -- nlohmann/json.hpp not found. Switching on builtin_nlohmannjson option. -- Looking for Freetype. -- Found Freetype: /usr/lib/libfreetype.so (found version ""2.12.1""). -- Looking for PCRE. -- Found PCRE: /usr/include (found version ""8.45""). -- Looking ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:1756,testability,Test,Test,1756,"GNU 11.2.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.36.0""). -- Detected ROOT_VERSION 6.27.01. -- Checking internet connectivity... -- Yes. -- Looking for Python. -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed. -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""). -- Found GCC. Major version 11, minor version 2. -- Looking for pthread.h. -- Looking for pthread.h - found. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Success. -- ROOT Platform: linux. -- ROOT Compiler: GNU 11.2.0. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'). -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for versions 3.10.4 (Main) and 2.7.18. -- Looking for ZLib. -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.12""). -- Looking for nlohmann/json.hpp. -- nlohmann/json.hpp not found. Switching on builtin_nlohmannjson option. -- Looking for Freetype. -- Found Freetype: /usr/lib/libfreetype.so (found version ""2.12.1""). -- Looking for PCRE. -- Found PCRE: /usr/include (found version ""8.45""). -- Looking for LZMA. -- Looking for lzma_auto_decoder i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:1834,testability,Test,Test,1834," - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.36.0""). -- Detected ROOT_VERSION 6.27.01. -- Checking internet connectivity... -- Yes. -- Looking for Python. -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed. -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""). -- Found GCC. Major version 11, minor version 2. -- Looking for pthread.h. -- Looking for pthread.h - found. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Success. -- ROOT Platform: linux. -- ROOT Compiler: GNU 11.2.0. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'). -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for versions 3.10.4 (Main) and 2.7.18. -- Looking for ZLib. -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.12""). -- Looking for nlohmann/json.hpp. -- nlohmann/json.hpp not found. Switching on builtin_nlohmannjson option. -- Looking for Freetype. -- Found Freetype: /usr/lib/libfreetype.so (found version ""2.12.1""). -- Looking for PCRE. -- Found PCRE: /usr/include (found version ""8.45""). -- Looking for LZMA. -- Looking for lzma_auto_decoder in /usr/lib/liblzma.so. -- Looking for lzma_auto_decoder in /usr/lib/liblzma.so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:1876,testability,Test,Test,1876,"/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.36.0""). -- Detected ROOT_VERSION 6.27.01. -- Checking internet connectivity... -- Yes. -- Looking for Python. -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed. -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""). -- Found GCC. Major version 11, minor version 2. -- Looking for pthread.h. -- Looking for pthread.h - found. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Success. -- ROOT Platform: linux. -- ROOT Compiler: GNU 11.2.0. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'). -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for versions 3.10.4 (Main) and 2.7.18. -- Looking for ZLib. -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.12""). -- Looking for nlohmann/json.hpp. -- nlohmann/json.hpp not found. Switching on builtin_nlohmannjson option. -- Looking for Freetype. -- Found Freetype: /usr/lib/libfreetype.so (found version ""2.12.1""). -- Looking for PCRE. -- Found PCRE: /usr/include (found version ""8.45""). -- Looking for LZMA. -- Looking for lzma_auto_decoder in /usr/lib/liblzma.so. -- Looking for lzma_auto_decoder in /usr/lib/liblzma.so - found. -- Looking for lzma_easy_encoder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:7540,testability,depend,dependencies,7540,"found. You can enable the option 'builtin_cfitsio' to build the library internally'. -- For the time being switching off 'fitsio' option. -- Looking for XROOTD. -- XROOTD not found, enabling 'builtin_xrootd' option. -- Downloading and building XROOTD version 5.4.2. -- Could NOT find GFAL (missing: GFAL_INCLUDE_DIR SRM_IFCE_INCLUDE_DIR GFAL_LIBRARY). -- GFAL library not found. Set variable GFAL_DIR to point to your gfal installation. and the variable SRM_IFCE_DIR to the srm_ifce installation. -- For the time being switching OFF 'gfal' option. -- Could NOT find FTGL (missing: FTGL_INCLUDE_DIR FTGL_LIBRARY). -- ftgl library not found. Set variable FTGL_ROOT_DIR to point to your installation. -- For the time being switching ON 'builtin_ftgl' option. -- Checking for module 'davix>=0.6.4'. -- Package 'davix', required by 'virtual:world', not found. -- Looking for uuid_generate_random in uuid. -- Looking for uuid_generate_random in uuid - found. -- Found libuuid: /usr/include. -- Davix dependencies not found, switching OFF 'davix' option. -- Looking for TBB. -- Found TBB: /usr (Required is at least version ""2018""). -- Looking for VDT. -- Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""). -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH. -- Switching ON 'builtin_vdt' option. -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored. -- Looking for BLAS for optional parts of TMVA. -- Looking for sgemm_. -- Looking for sgemm_ - not found. -- Looking for sgemm_. -- Looking for sgemm_ - found. -- Found BLAS: /usr/lib/libblas.so. -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB. -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is GNU. -- Found assembler: /usr/bin/cc. -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND). -- Looking",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:8200,testability,Test,Test,8200,"L_ROOT_DIR to point to your installation. -- For the time being switching ON 'builtin_ftgl' option. -- Checking for module 'davix>=0.6.4'. -- Package 'davix', required by 'virtual:world', not found. -- Looking for uuid_generate_random in uuid. -- Looking for uuid_generate_random in uuid - found. -- Found libuuid: /usr/include. -- Davix dependencies not found, switching OFF 'davix' option. -- Looking for TBB. -- Found TBB: /usr (Required is at least version ""2018""). -- Looking for VDT. -- Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""). -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH. -- Switching ON 'builtin_vdt' option. -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored. -- Looking for BLAS for optional parts of TMVA. -- Looking for sgemm_. -- Looking for sgemm_ - not found. -- Looking for sgemm_. -- Looking for sgemm_ - found. -- Found BLAS: /usr/lib/libblas.so. -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB. -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is GNU. -- Found assembler: /usr/bin/cc. -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND). -- Looking for backtrace. -- Looking for backtrace - found. -- backtrace facility detected in default set of libraries. -- Found Backtrace: /usr/include. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH). -- OCaml bindings disabled. -- Found Python module pygments. -- Found Python module pygments.lexers.c_cpp. -- Found Python module yaml. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:8254,testability,Test,Test,8254,"ime being switching ON 'builtin_ftgl' option. -- Checking for module 'davix>=0.6.4'. -- Package 'davix', required by 'virtual:world', not found. -- Looking for uuid_generate_random in uuid. -- Looking for uuid_generate_random in uuid - found. -- Found libuuid: /usr/include. -- Davix dependencies not found, switching OFF 'davix' option. -- Looking for TBB. -- Found TBB: /usr (Required is at least version ""2018""). -- Looking for VDT. -- Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""). -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH. -- Switching ON 'builtin_vdt' option. -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored. -- Looking for BLAS for optional parts of TMVA. -- Looking for sgemm_. -- Looking for sgemm_ - not found. -- Looking for sgemm_. -- Looking for sgemm_ - found. -- Found BLAS: /usr/lib/libblas.so. -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB. -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is GNU. -- Found assembler: /usr/bin/cc. -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND). -- Looking for backtrace. -- Looking for backtrace - found. -- backtrace facility detected in default set of libraries. -- Found Backtrace: /usr/include. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH). -- OCaml bindings disabled. -- Found Python module pygments. -- Found Python module pygments.lexers.c_cpp. -- Found Python module yaml. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9737,testability,Test,Test,9737,"disabled. -- Doxygen disabled. -- Go bindings disabled. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH). -- OCaml bindings disabled. -- Found Python module pygments. -- Found Python module pygments.lexers.c_cpp. -- Found Python module yaml. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9774,testability,Test,Test,9774,"bindings disabled. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH). -- OCaml bindings disabled. -- Found Python module pygments. -- Found Python module pygments.lexers.c_cpp. -- Found Python module yaml. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Per",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9821,testability,Test,Test,9821,"sing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH). -- OCaml bindings disabled. -- Found Python module pygments. -- Found Python module pygments.lexers.c_cpp. -- Found Python module yaml. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Tes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9867,testability,Test,Test,9867,"H). -- OCaml bindings disabled. -- Found Python module pygments. -- Found Python module pygments.lexers.c_cpp. -- Found Python module yaml. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Tes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9923,testability,Test,Test,9923,"ygments. -- Found Python module pygments.lexers.c_cpp. -- Found Python module yaml. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9973,testability,Test,Test,9973,"cpp. -- Found Python module yaml. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10033,testability,Test,Test,10033,"4-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10084,testability,Test,Test,10084," x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10234,testability,Test,Test,10234,ect information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Tes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10278,testability,Test,Test,10278,. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10331,testability,Test,Test,10331,ion: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10367,testability,Test,Test,10367,ERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Ma,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10413,testability,Test,Test,10413, for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10453,testability,Test,Test,10453,-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT C,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10503,testability,Test,Test,10503,0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10545,testability,Test,Test,10545,../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10596,testability,Test,Test,10596,/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10645,testability,Test,Test,10645,../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10704,testability,Test,Test,10704,lback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10739,testability,Test,Test,10739, CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10784,testability,Test,Test,10784,_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fall,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10820,testability,Test,Test,10820,est C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Ws,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10866,testability,Test,Test,10866,est C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10909,testability,Test,Test,10909, Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. E,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10962,testability,Test,Test,10962,"rforming Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11012,testability,Test,Test,11012,"ess. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11072,testability,Test,Test,11072,"erforming Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11121,testability,Test,Test,11121,"uccess. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11180,testability,Test,Test,11180,"Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_vdt builtin_xr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11233,testability,Test,Test,11233,"est GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_vdt builtin_xrootd clad dataframe exceptions fftw3 gdml http imt ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:30325,testability,context,context,30325,"CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o. [ 75%] Built target MetaCling. make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https://github.com/root-project/root gitclone`. 5. `cd build`. 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`. 7. `cmake --build . --target install -- -j4`. ### Setup. <!--. 1. ROOT version. 8. Operating system. 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper. Target: x86_64-pc-linux-gnu. Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:30354,testability,context,context,30354,"/CMakeFiles/MetaCling.dir/TClingValue.cxx.o. [ 75%] Built target MetaCling. make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https://github.com/root-project/root gitclone`. 5. `cd build`. 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`. 7. `cmake --build . --target install -- -j4`. ### Setup. <!--. 1. ROOT version. 8. Operating system. 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper. Target: x86_64-pc-linux-gnu. Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc. Thread model: posix. Support",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:32266,testability,LOG,LOGO,32266,"t it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper. Target: x86_64-pc-linux-gnu. Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc. Thread model: posix. Supported LTO compression algorithms: zlib zstd. gcc version 11.2.0 (GCC). ```. 2. `clang -v`. ```sh. clang version 13.0.1. Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0. Found candidate GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0. Selected GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ```. 3. `cat /etc/*release`. ```sh. DISTRIB_ID=""Arch"". DISTRIB_RELEASE=""rolling"". DISTRIB_DESCRIPTION=""Arch Linux"". NAME=""Arch Linux"". PRETTY_NAME=""Arch Linux"". ID=arch. BUILD_ID=rolling. ANSI_COLOR=""38;2;23;147;209"". HOME_URL=""https://archlinux.org/"". DOCUMENTATION_URL=""https://wiki.archlinux.org/"". SUPPORT_URL=""https://bbs.archlinux.org/"". BUG_REPORT_URL=""https://bugs.archlinux.org/"". LOGO=archlinux-logo. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:32281,testability,log,logo,32281,"t it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper. Target: x86_64-pc-linux-gnu. Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc. Thread model: posix. Supported LTO compression algorithms: zlib zstd. gcc version 11.2.0 (GCC). ```. 2. `clang -v`. ```sh. clang version 13.0.1. Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0. Found candidate GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0. Selected GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ```. 3. `cat /etc/*release`. ```sh. DISTRIB_ID=""Arch"". DISTRIB_RELEASE=""rolling"". DISTRIB_DESCRIPTION=""Arch Linux"". NAME=""Arch Linux"". PRETTY_NAME=""Arch Linux"". ID=arch. BUILD_ID=rolling. ANSI_COLOR=""38;2;23;147;209"". HOME_URL=""https://archlinux.org/"". DOCUMENTATION_URL=""https://wiki.archlinux.org/"". SUPPORT_URL=""https://bbs.archlinux.org/"". BUG_REPORT_URL=""https://bugs.archlinux.org/"". LOGO=archlinux-logo. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:471,usability,clear,clear,471,"""bits/utility.h"" not found. root does not build from source in Arch linux.; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. Yes. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Root fails to build in Arch Linux. `$ cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`. <details>. <summary>output</summary>. ```. -- The C compiler identification is GNU 11.2.0. -- The CXX compiler identification is GNU 11.2.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.36.0""). -- Detected ROOT_VERSION 6.27.01. -- Checking internet connectivity... -- Yes. -- Looking for Python. -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed. -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""). -- Found GCC. Major version 11, minor version 2. -- Looking for pthread.h. -- Looking for pthread.h - found. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Success. -- ROOT Platform: linux. -- ROOT Compiler: GNU 11.2.0. -- ROOT Processor: x86_64. -- R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:519,usability,behavi,behavior,519,"""bits/utility.h"" not found. root does not build from source in Arch linux.; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. Yes. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Root fails to build in Arch Linux. `$ cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`. <details>. <summary>output</summary>. ```. -- The C compiler identification is GNU 11.2.0. -- The CXX compiler identification is GNU 11.2.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.36.0""). -- Detected ROOT_VERSION 6.27.01. -- Checking internet connectivity... -- Yes. -- Looking for Python. -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed. -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""). -- Found GCC. Major version 11, minor version 2. -- Looking for pthread.h. -- Looking for pthread.h - found. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Success. -- ROOT Platform: linux. -- ROOT Compiler: GNU 11.2.0. -- ROOT Processor: x86_64. -- R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:1701,usability,Perform,Performing,1701,"s GNU 11.2.0. -- The CXX compiler identification is GNU 11.2.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.36.0""). -- Detected ROOT_VERSION 6.27.01. -- Checking internet connectivity... -- Yes. -- Looking for Python. -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed. -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""). -- Found GCC. Major version 11, minor version 2. -- Looking for pthread.h. -- Looking for pthread.h - found. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Success. -- ROOT Platform: linux. -- ROOT Compiler: GNU 11.2.0. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'). -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for versions 3.10.4 (Main) and 2.7.18. -- Looking for ZLib. -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.12""). -- Looking for nlohmann/json.hpp. -- nlohmann/json.hpp not found. Switching on builtin_nlohmannjson option. -- Looking for Freetype. -- Found Freetype: /usr/lib/libfreetype.so (found version ""2.12.1""). -- Looking for PCRE. -- Found PCRE: /usr/include (found version ""8.45""). -- ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:1745,usability,Perform,Performing,1745,"tion is GNU 11.2.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.36.0""). -- Detected ROOT_VERSION 6.27.01. -- Checking internet connectivity... -- Yes. -- Looking for Python. -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed. -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""). -- Found GCC. Major version 11, minor version 2. -- Looking for pthread.h. -- Looking for pthread.h - found. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Success. -- ROOT Platform: linux. -- ROOT Compiler: GNU 11.2.0. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'). -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for versions 3.10.4 (Main) and 2.7.18. -- Looking for ZLib. -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.12""). -- Looking for nlohmann/json.hpp. -- nlohmann/json.hpp not found. Switching on builtin_nlohmannjson option. -- Looking for Freetype. -- Found Freetype: /usr/lib/libfreetype.so (found version ""2.12.1""). -- Looking for PCRE. -- Found PCRE: /usr/include (found version ""8.45""). -- Looking for LZMA. -- Looking for lzma_auto_d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:1823,usability,Perform,Performing,1823,"ABI info - done. -- Check for working C compiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.36.0""). -- Detected ROOT_VERSION 6.27.01. -- Checking internet connectivity... -- Yes. -- Looking for Python. -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed. -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""). -- Found GCC. Major version 11, minor version 2. -- Looking for pthread.h. -- Looking for pthread.h - found. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Success. -- ROOT Platform: linux. -- ROOT Compiler: GNU 11.2.0. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'). -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for versions 3.10.4 (Main) and 2.7.18. -- Looking for ZLib. -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.12""). -- Looking for nlohmann/json.hpp. -- nlohmann/json.hpp not found. Switching on builtin_nlohmannjson option. -- Looking for Freetype. -- Found Freetype: /usr/lib/libfreetype.so (found version ""2.12.1""). -- Looking for PCRE. -- Found PCRE: /usr/include (found version ""8.45""). -- Looking for LZMA. -- Looking for lzma_auto_decoder in /usr/lib/liblzma.so. -- Looking for lzma_auto_decoder in /usr/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:1865,usability,Perform,Performing,1865,"mpiler: /usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found Git: /usr/bin/git (found version ""2.36.0""). -- Detected ROOT_VERSION 6.27.01. -- Checking internet connectivity... -- Yes. -- Looking for Python. -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed. -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""). -- Found GCC. Major version 11, minor version 2. -- Looking for pthread.h. -- Looking for pthread.h - found. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD. -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success. -- Found Threads: TRUE. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Success. -- ROOT Platform: linux. -- ROOT Compiler: GNU 11.2.0. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'). -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. -- ROOT default compression algorithm: zlib. -- PyROOT will be built for versions 3.10.4 (Main) and 2.7.18. -- Looking for ZLib. -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.12""). -- Looking for nlohmann/json.hpp. -- nlohmann/json.hpp not found. Switching on builtin_nlohmannjson option. -- Looking for Freetype. -- Found Freetype: /usr/lib/libfreetype.so (found version ""2.12.1""). -- Looking for PCRE. -- Found PCRE: /usr/include (found version ""8.45""). -- Looking for LZMA. -- Looking for lzma_auto_decoder in /usr/lib/liblzma.so. -- Looking for lzma_auto_decoder in /usr/lib/liblzma.so - found. -- Looking for lzma_easy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:4864,usability,minim,minimum,4864,"tionNumber in ICE - found. -- X11_INCLUDE_DIR: /usr/include. -- X11_LIBRARIES: /usr/lib/libSM.so;/usr/lib/libICE.so;/usr/lib/libX11.so;/usr/lib/libXext.so. -- X11_Xpm_INCLUDE_PATH: /usr/include. -- X11_Xpm_LIB: /usr/lib/libXpm.so. -- X11_Xft_INCLUDE_PATH: /usr/include. -- X11_Xft_LIB: /usr/lib/libXft.so. -- X11_Xext_INCLUDE_PATH: /usr/include. -- X11_Xext_LIB: /usr/lib/libXext.so. -- Found GIF: /usr/lib/libgif.so (found version ""5.2.1""). -- Found TIFF: /usr/lib/libtiff.so (found version ""4.3.0""). -- Found PNG: /usr/lib/libpng.so (found version ""1.6.37""). -- Found JPEG: /usr/lib/libjpeg.so (found version ""80""). -- Looking for AfterImage. -- Could NOT find AfterImage (missing: AFTERIMAGE_INCLUDE_DIR AFTERIMAGE_LIBRARIES). -- AfterImage not found. Switching on builtin_afterimage option. -- Building AfterImage library included in ROOT itself. -- Looking for GSL. -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.8.0""). -- Found GSL: /usr/include (found suitable version ""2.7.1"", minimum required is ""1.10""). -- Looking for OpenGL. -- Found OpenGL: /usr/lib/libOpenGL.so. -- Looking for GLEW. -- Could NOT find GLEW (missing: GLEW_INCLUDE_DIRS GLEW_LIBRARIES). -- GLEW not found. Switching on builtin_glew option. -- Looking for gl2ps. -- Could NOT find gl2ps (missing: GL2PS_LIBRARY GL2PS_INCLUDE_DIR). -- gl2ps not found. Switching on builtin_gl2ps option. -- Looking for LibXml2. -- Found LibXml2: /usr/lib/libxml2.so (found version ""2.9.13""). -- Found OpenSSL: /usr/lib/libcrypto.so (found version ""1.1.1n""). -- Looking for MySQL. -- Found MySQL: /usr/include/mysql. -- Looking for Oracle. -- Oracle not found. -- Oracle: You can specify includes: -DORACLE_PATH_INCLUDES=/usr/include/oracle/10.2.0.3/client. -- currently found includes:. -- Oracle: You can specify libs: -DORACLE_PATH_LIB=/usr/lib/oracle/10.2.0.3/client/lib. -- currently found libs: ORACLE_LIBRARY_OCCI-NOTFOUND;ORACLE_LIBRARY_CLNTSH-NOTFOUND;ORACLE_LIBRARY_LNNZ-NOTFOUND. -- Oracle not found. Switching off orac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:8189,usability,Perform,Performing,8189,"able FTGL_ROOT_DIR to point to your installation. -- For the time being switching ON 'builtin_ftgl' option. -- Checking for module 'davix>=0.6.4'. -- Package 'davix', required by 'virtual:world', not found. -- Looking for uuid_generate_random in uuid. -- Looking for uuid_generate_random in uuid - found. -- Found libuuid: /usr/include. -- Davix dependencies not found, switching OFF 'davix' option. -- Looking for TBB. -- Found TBB: /usr (Required is at least version ""2018""). -- Looking for VDT. -- Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""). -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH. -- Switching ON 'builtin_vdt' option. -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored. -- Looking for BLAS for optional parts of TMVA. -- Looking for sgemm_. -- Looking for sgemm_ - not found. -- Looking for sgemm_. -- Looking for sgemm_ - found. -- Found BLAS: /usr/lib/libblas.so. -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB. -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is GNU. -- Found assembler: /usr/bin/cc. -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND). -- Looking for backtrace. -- Looking for backtrace - found. -- backtrace facility detected in default set of libraries. -- Found Backtrace: /usr/include. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH). -- OCaml bindings disabled. -- Found Python module pygments. -- Found Python module pygments.lexers.c_cpp. -- Found Python module yaml. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:8243,usability,Perform,Performing,8243,"or the time being switching ON 'builtin_ftgl' option. -- Checking for module 'davix>=0.6.4'. -- Package 'davix', required by 'virtual:world', not found. -- Looking for uuid_generate_random in uuid. -- Looking for uuid_generate_random in uuid - found. -- Found libuuid: /usr/include. -- Davix dependencies not found, switching OFF 'davix' option. -- Looking for TBB. -- Found TBB: /usr (Required is at least version ""2018""). -- Looking for VDT. -- Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""). -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH. -- Switching ON 'builtin_vdt' option. -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored. -- Looking for BLAS for optional parts of TMVA. -- Looking for sgemm_. -- Looking for sgemm_ - not found. -- Looking for sgemm_. -- Looking for sgemm_ - found. -- Found BLAS: /usr/lib/libblas.so. -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB. -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success. -- Building LLVM in 'Release' mode. -- The ASM compiler identification is GNU. -- Found assembler: /usr/bin/cc. -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND). -- Looking for backtrace. -- Looking for backtrace - found. -- backtrace facility detected in default set of libraries. -- Found Backtrace: /usr/include. -- Native target architecture is X86. -- Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH). -- OCaml bindings disabled. -- Found Python module pygments. -- Found Python module pygments.lexers.c_cpp. -- Found Python module yaml. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project informat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9726,usability,Perform,Performing,9726,"Threads disabled. -- Doxygen disabled. -- Go bindings disabled. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH). -- OCaml bindings disabled. -- Found Python module pygments. -- Found Python module pygments.lexers.c_cpp. -- Found Python module yaml. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Per",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9763,usability,Perform,Performing,9763,". -- Go bindings disabled. -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH). -- OCaml bindings disabled. -- Found Python module pygments. -- Found Python module pygments.lexers.c_cpp. -- Found Python module yaml. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9810,usability,Perform,Performing,9810,"aml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH). -- OCaml bindings disabled. -- Found Python module pygments. -- Found Python module pygments.lexers.c_cpp. -- Found Python module yaml. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Perfor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9856,usability,Perform,Performing,9856,"DLIB_PATH). -- OCaml bindings disabled. -- Found Python module pygments. -- Found Python module pygments.lexers.c_cpp. -- Found Python module yaml. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Perfor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9912,usability,Perform,Performing,9912,"module pygments. -- Found Python module pygments.lexers.c_cpp. -- Found Python module yaml. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test fou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9962,usability,Perform,Performing,9962,"exers.c_cpp. -- Found Python module yaml. -- LLVM host triple: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10022,usability,Perform,Performing,10022,"e: x86_64-unknown-linux-gnu. -- LLVM default target triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10073,usability,Perform,Performing,10073," triple: x86_64-unknown-linux-gnu. -- Building with -fPIC. -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""). -- Constructing LLVMBuild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10223,usability,Perform,Performing,10223,ild project information. -- Linker detection: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Perfor,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10267,usability,Perform,Performing,10267,: GNU ld. -- Targeting X86. -- Targeting NVPTX. -- Clang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size -,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10320,usability,Perform,Performing,10320,ang version: 9.0.1. -- Cling version (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10356,usability,Perform,Performing,10356, (from VERSION file): ROOT_1.0~dev. -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledat,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10402,usability,Perform,Performing,10402,ill look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10442,usability,Perform,Performing,10442,c/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10492,usability,Perform,Performing,10492,++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10534,usability,Perform,Performing,10534,/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10585,usability,Perform,Performing,10585,nux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Insta,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10634,usability,Perform,Performing,10634,./../../../include/c++/11.2.0/backward' at runtime. -- And then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10693,usability,Perform,Performing,10693,then fallback to: 'c++'. -- Performing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-impl,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10728,usability,Perform,Performing,10728,ing Test CXX_HAS_fno_rtti. -- Performing Test CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10773,usability,Perform,Performing,10773, CXX_HAS_fno_rtti - Success. -- Performing Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-impli,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10809,usability,Perform,Performing,10809,orming Test C_HAS_Wno_strict_overflow. -- Performing Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10855,usability,Perform,Performing,10855,orming Test C_HAS_Wno_strict_overflow - Success. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10898,usability,Perform,Performing,10898,cess. -- Performing Test C_HAS_Wno_maybe_uninitialized. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10951,usability,Perform,Performing,10951,"d. -- Performing Test C_HAS_Wno_maybe_uninitialized - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11001,usability,Perform,Performing,11001,"d - Success. -- Performing Test C_HAS_Wno_parentheses_equality. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled supp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11061,usability,Perform,Performing,11061,"ty. -- Performing Test C_HAS_Wno_parentheses_equality - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11110,usability,Perform,Performing,11110,"lity - Success. -- Looking for m. -- Looking for m - not found. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew built",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11169,usability,Perform,Performing,11169,"und. -- Use SSL API VERSION 1.1 for civetweb. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_vdt bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11222,usability,Perform,Performing,11222,"orming Test GCC_HAS_BIDI_CHARS_FLAG. -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed. -- Performing Test found_setresuid. -- Performing Test found_setresuid - Success. -- Performing Test found_stdstringview. -- Performing Test found_stdstringview - Success. -- Performing Test found_stod_stringview. -- Performing Test found_stod_stringview - Failed. -- Performing Test found_opplusequal_stringview. -- Performing Test found_opplusequal_stringview - Success. -- Performing Test found_stdapply. -- Performing Test found_stdapply - Success. -- Performing Test found_stdinvoke. -- Performing Test found_stdinvoke - Success. -- Performing Test found_stdindexsequence. -- Performing Test found_stdindexsequence - Success. -- Performing Test found_attribute_always_inline. -- Performing Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_vdt builtin_xrootd clad dataframe exceptions fftw3 gdml htt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:12002,usability,support,support,12002,"rming Test found_attribute_always_inline - Success. -- Performing Test has_found_attribute_noinline. -- Performing Test has_found_attribute_noinline - Success. -- Performing Test found_hardware_interference_size. -- Performing Test found_hardware_interference_size - Failed. Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh. Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h. -- ROOT Configuration. System Linux-5.15.37-1-lts. Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64). Build type Release. Install path /home/razorr/Softwares/Installed/HEP/Root/install. Compiler GNU 11.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG. Linker flags:. Executable -rdynamic. Module. Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_vdt builtin_xrootd clad dataframe exceptions fftw3 gdml http imt mathmore mlp minuit2 mysql opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd. -- Configuring done. -- Generating done. -- Build files have been written to: /home/razorr/Softwares/Installed/HEP/Root/build. ```. </details>. `$ cmake --build . --target install -- -j4`. <details>. <summary>truncated output</summary>. ``` . [ 75%] Building CXX object core/clingutils/CMakeFiles/ClingUtils.dir/src/TClingUtils.cxx.o. [ 75%] Built target Dictgen. [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o. [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingDataMemberInfo.cxx.o. [ 75%] Building CXX object core/metacling/src/CMakeFiles/M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:13989,usability,error,error,13989,"c/CMakeFiles/MetaCling.dir/TClingDeclInfo.cxx.o. [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingDiagnostics.cxx.o. [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingMemberIter.cxx.o. [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodArgInfo.cxx.o. [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodInfo.cxx.o. [ 75%] Built target ClingUtils. [ 75%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 75%] Linking CXX executable src/rootcling_stage1. [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o. [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypedefInfo.cxx.o. [ 75%] Built target rootcling_stage1. [ 75%] Generating G__Core.cxx, ../lib/Core.pcm. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here. #include <new>. ^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here. #include <string>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:14607,usability,error,error,14607,"stage1. [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o. [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypedefInfo.cxx.o. [ 75%] Built target rootcling_stage1. [ 75%] Generating G__Core.cxx, ../lib/Core.pcm. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here. #include <new>. ^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here. #include <string>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'. std::string m_Result;. ^. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here. #include",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:14956,usability,error,error,14956,"c/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here. #include <new>. ^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here. #include <string>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'. std::string m_Result;. ^. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here. #include <string>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'. std::string m_Type;. ^. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /ho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:15356,usability,error,error,15356,"input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here. #include <string>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'. std::string m_Result;. ^. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here. #include <string>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'. std::string m_Type;. ^. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Visibility.h:13:10: note: submodule of top-level module 'std' implicitly imported here. #i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:15731,usability,error,error,15731,"/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here. #include <string>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'. std::string m_Result;. ^. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here. #include <string>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'. std::string m_Type;. ^. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Visibility.h:13:10: note: submodule of top-level module 'std' implicitly imported here. #include <new>. ^. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:16129,usability,error,error,16129,"uilding module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here. #include <string>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'. std::string m_Type;. ^. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Visibility.h:13:10: note: submodule of top-level module 'std' implicitly imported here. #include <new>. ^. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'. template <class T, class = typename std::enable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:16707,usability,error,error,16707,"etimeHandler.h:56:7: error: use of undeclared identifier 'std'. std::string m_Type;. ^. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Visibility.h:13:10: note: submodule of top-level module 'std' implicitly imported here. #include <new>. ^. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:56: error: use of undeclared identifier 'std'. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: er",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:17042,usability,error,error,17042,"7:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Visibility.h:13:10: note: submodule of top-level module 'std' implicitly imported here. #include <new>. ^. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:56: error: use of undeclared identifier 'std'. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: error: use of undeclared identifier 'std'. return std::is_signed<T>::value. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function. static constexpr EStorageType determineStorageTypeT(T*) {. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:17260,usability,error,error,17260,"reter/Visibility.h:13:10: note: submodule of top-level module 'std' implicitly imported here. #include <new>. ^. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:56: error: use of undeclared identifier 'std'. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: error: use of undeclared identifier 'std'. return std::is_signed<T>::value. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function. static constexpr EStorageType determineStorageTypeT(T*) {. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'. = std::is_reference<T>::value ? ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared iden",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:17478,usability,error,error,17478," building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:56: error: use of undeclared identifier 'std'. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: error: use of undeclared identifier 'std'. return std::is_signed<T>::value. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function. static constexpr EStorageType determineStorageTypeT(T*) {. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'. = std::is_reference<T>::value ? ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: expected a qualified name after '",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:17708,usability,error,error,17708,"r: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:56: error: use of undeclared identifier 'std'. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: error: use of undeclared identifier 'std'. return std::is_signed<T>::value. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function. static constexpr EStorageType determineStorageTypeT(T*) {. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'. = std::is_reference<T>::value ? ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: expected a qualified name after 'typename'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: unknown type name 'type'. While building module ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:17872,usability,error,error,17872,"le of top-level module 'std' implicitly imported here. #include <type_traits>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:56: error: use of undeclared identifier 'std'. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: error: use of undeclared identifier 'std'. return std::is_signed<T>::value. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function. static constexpr EStorageType determineStorageTypeT(T*) {. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'. = std::is_reference<T>::value ? ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: expected a qualified name after 'typename'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: unknown type name 'type'. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /home/razorr/Softwares/Installed/HEP/Root/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:18070,usability,error,error,18070,"fier 'std'. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:56: error: use of undeclared identifier 'std'. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: error: use of undeclared identifier 'std'. return std::is_signed<T>::value. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function. static constexpr EStorageType determineStorageTypeT(T*) {. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'. = std::is_reference<T>::value ? ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: expected a qualified name after 'typename'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: unknown type name 'type'. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:18234,usability,error,error,18234,"rpreter/Value.h:93:56: error: use of undeclared identifier 'std'. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: error: use of undeclared identifier 'std'. return std::is_signed<T>::value. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function. static constexpr EStorageType determineStorageTypeT(T*) {. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'. = std::is_reference<T>::value ? ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: expected a qualified name after 'typename'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: unknown type name 'type'. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'. #include ""cling/Interpreter/RuntimeUniverse.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:18441,usability,error,error,18441,"/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list. template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: error: use of undeclared identifier 'std'. return std::is_signed<T>::value. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function. static constexpr EStorageType determineStorageTypeT(T*) {. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'. = std::is_reference<T>::value ? ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: expected a qualified name after 'typename'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: unknown type name 'type'. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'. #include ""cling/Interpreter/RuntimeUniverse.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/razorr/Softwares/Installe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:18656,usability,error,error,18656,"/Root/build/etc/cling/Interpreter/Value.h:95:14: error: use of undeclared identifier 'std'. return std::is_signed<T>::value. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function. static constexpr EStorageType determineStorageTypeT(T*) {. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'. = std::is_reference<T>::value ? ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: expected a qualified name after 'typename'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: unknown type name 'type'. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'. #include ""cling/Interpreter/RuntimeUniverse.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Ins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:18934,usability,error,error,18934,"r EStorageType determineStorageTypeT(T*) {. ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'. = std::is_reference<T>::value ? ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: expected a qualified name after 'typename'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: unknown type name 'type'. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'. #include ""cling/Interpreter/RuntimeUniverse.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here. #include <cstddef> // size_t, NULL. ^. In file included from input_line_3:2:. /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:10: fatal erro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:19097,usability,error,error,19097,"ifier 'std'. = std::is_reference<T>::value ? ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: expected a qualified name after 'typename'. determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr). ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: unknown type name 'type'. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'. #include ""cling/Interpreter/RuntimeUniverse.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here. #include <cstddef> // size_t, NULL. ^. In file included from input_line_3:2:. /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:19563,usability,error,error,19563," ^. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: unknown type name 'type'. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'. #include ""cling/Interpreter/RuntimeUniverse.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here. #include <cstddef> // size_t, NULL. ^. In file included from input_line_3:2:. /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:29:. In file included from <module-includes>:1:. /home/razorr/Softwares/Installed/HEP/Root/build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:19933,usability,error,error,19933,"ror: could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'. #include ""cling/Interpreter/RuntimeUniverse.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here. #include <cstddef> // size_t, NULL. ^. In file included from input_line_3:2:. /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:29:. In file included from <module-includes>:1:. /home/razorr/Softwares/Installed/HEP/Root/build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/string_view:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <iosfwd>. ^. While building module 'C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:20318,usability,error,error,20318,"nfo.cxx.o. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /home/razorr/Softwares/Installed/HEP/Root/build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here. #include <cstddef> // size_t, NULL. ^. In file included from input_line_3:2:. /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:29:. In file included from <module-includes>:1:. /home/razorr/Softwares/Installed/HEP/Root/build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/string_view:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <iosfwd>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:20662,usability,error,error,20662,"/HEP/Root/build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here. #include <cstddef> // size_t, NULL. ^. In file included from input_line_3:2:. /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:29:. In file included from <module-includes>:1:. /home/razorr/Softwares/Installed/HEP/Root/build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/string_view:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <iosfwd>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:39:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/stl_algobase.h> // std::copy, std::fill_n. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:21162,usability,error,error,21162,"lude/Rtypes.h:29:. In file included from <module-includes>:1:. /home/razorr/Softwares/Installed/HEP/Root/build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/string_view:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <iosfwd>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:39:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/stl_algobase.h> // std::copy, std::fill_n. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <cwchar> // For mbstate_t. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: expected '{'. namespace std _GLIBCXX_VISIBILITY(default). ^. /usr/lib/gcc/x86_64-pc-l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:21708,usability,error,error,21708,"""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/string_view:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <iosfwd>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:39:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/stl_algobase.h> // std::copy, std::fill_n. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <cwchar> // For mbstate_t. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: expected '{'. namespace std _GLIBCXX_VISIBILITY(default). ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: C++ requires a type specifier for all declarations. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:35: error: expected expression. namespace std _GLIBCXX_VISIBILITY(default). ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:43: error: expected ';' after top level declarator. namespace std _GLIBCXX_VISIBILITY(default). ^. While building module 'Core':. While building module 'ROOT_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:22073,usability,error,error,22073,"195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:39:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/stl_algobase.h> // std::copy, std::fill_n. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <cwchar> // For mbstate_t. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: expected '{'. namespace std _GLIBCXX_VISIBILITY(default). ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: C++ requires a type specifier for all declarations. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:35: error: expected expression. namespace std _GLIBCXX_VISIBILITY(default). ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:43: error: expected ';' after top level declarator. namespace std _GLIBCXX_VISIBILITY(default). ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:41:10: note: s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:22235,usability,error,error,22235,"ib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:39:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/stl_algobase.h> // std::copy, std::fill_n. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <cwchar> // For mbstate_t. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: expected '{'. namespace std _GLIBCXX_VISIBILITY(default). ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: C++ requires a type specifier for all declarations. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:35: error: expected expression. namespace std _GLIBCXX_VISIBILITY(default). ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:43: error: expected ';' after top level declarator. namespace std _GLIBCXX_VISIBILITY(default). ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:41:10: note: submodule of top-level module 'std' implicitly imported here. #include <cwchar> // For WEOF, wmemmove, wmemset, etc. ^. While building module 'Core':. While buildi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:22388,usability,error,error,22388,"here. #include <bits/stl_algobase.h> // std::copy, std::fill_n. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <cwchar> // For mbstate_t. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: expected '{'. namespace std _GLIBCXX_VISIBILITY(default). ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: C++ requires a type specifier for all declarations. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:35: error: expected expression. namespace std _GLIBCXX_VISIBILITY(default). ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:43: error: expected ';' after top level declarator. namespace std _GLIBCXX_VISIBILITY(default). ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:41:10: note: submodule of top-level module 'std' implicitly imported here. #include <cwchar> // For WEOF, wmemmove, wmemset, etc. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Ins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:22557,usability,error,error,22557,"me/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:40:10: note: submodule of top-level module 'std' implicitly imported here. #include <cwchar> // For mbstate_t. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: expected '{'. namespace std _GLIBCXX_VISIBILITY(default). ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: C++ requires a type specifier for all declarations. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:35: error: expected expression. namespace std _GLIBCXX_VISIBILITY(default). ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:43: error: expected ';' after top level declarator. namespace std _GLIBCXX_VISIBILITY(default). ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:41:10: note: submodule of top-level module 'std' implicitly imported here. #include <cwchar> // For WEOF, wmemmove, wmemset, etc. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:22902,usability,error,error,22902,"le 'std' implicitly imported here. #include <cwchar> // For mbstate_t. ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: expected '{'. namespace std _GLIBCXX_VISIBILITY(default). ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: C++ requires a type specifier for all declarations. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:35: error: expected expression. namespace std _GLIBCXX_VISIBILITY(default). ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:43: error: expected ';' after top level declarator. namespace std _GLIBCXX_VISIBILITY(default). ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:41:10: note: submodule of top-level module 'std' implicitly imported here. #include <cwchar> // For WEOF, wmemmove, wmemset, etc. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:699:10: note: submodule of top-level module 'std' implicitly imported here. #include <cstdint>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:23445,usability,error,error,23445,"Y(default). ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:43: error: expected ';' after top level declarator. namespace std _GLIBCXX_VISIBILITY(default). ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:41:10: note: submodule of top-level module 'std' implicitly imported here. #include <cwchar> // For WEOF, wmemmove, wmemset, etc. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:699:10: note: submodule of top-level module 'std' implicitly imported here. #include <cstdint>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/functional_hash.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:23954,usability,error,error,23954,"utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:41:10: note: submodule of top-level module 'std' implicitly imported here. #include <cwchar> // For WEOF, wmemmove, wmemset, etc. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:699:10: note: submodule of top-level module 'std' implicitly imported here. #include <cstdint>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/functional_hash.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:36:10: note: submodule of top-level module 'std' implicitly imported here. #include <initializer_list>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:24470,usability,error,error,24470,"h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:699:10: note: submodule of top-level module 'std' implicitly imported here. #include <cstdint>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/functional_hash.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:36:10: note: submodule of top-level module 'std' implicitly imported here. #include <initializer_list>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits> // common_type_t, make_signed_t. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:24988,usability,error,error,24988,"und. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/functional_hash.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:36:10: note: submodule of top-level module 'std' implicitly imported here. #include <initializer_list>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits> // common_type_t, make_signed_t. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:63:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/cpp_type_traits.h>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/S",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:25533,usability,error,error,25533," ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:36:10: note: submodule of top-level module 'std' implicitly imported here. #include <initializer_list>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits> // common_type_t, make_signed_t. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:63:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/cpp_type_traits.h>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator_base_types.h:67:11: note: submodule of top-level module 'std' implicitly imported here. # include <type_traits> // For __void_t, is_convertible. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:26057,usability,error,error,26057,"sr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits> // common_type_t, make_signed_t. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:63:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/cpp_type_traits.h>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator_base_types.h:67:11: note: submodule of top-level module 'std' implicitly imported here. # include <type_traits> // For __void_t, is_convertible. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/ext/type_traits.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/cpp_type_traits.h>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:26614,usability,error,error,26614,"86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:63:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/cpp_type_traits.h>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator_base_types.h:67:11: note: submodule of top-level module 'std' implicitly imported here. # include <type_traits> // For __void_t, is_convertible. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/ext/type_traits.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/cpp_type_traits.h>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/move.h:57:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits> // Brings in std::declval too. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Ins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:27136,usability,error,error,27136,"/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator_base_types.h:67:11: note: submodule of top-level module 'std' implicitly imported here. # include <type_traits> // For __void_t, is_convertible. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/ext/type_traits.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/cpp_type_traits.h>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/move.h:57:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits> // Brings in std::declval too. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:70:11: note: submodule of top-level module 'std' implicitly imported here. # include <type_traits>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/H",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:27671,usability,error,error,27671,"ty.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/ext/type_traits.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/cpp_type_traits.h>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/move.h:57:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits> // Brings in std::declval too. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:70:11: note: submodule of top-level module 'std' implicitly imported here. # include <type_traits>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <iosfwd>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:28185,usability,error,error,28185,"ts/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/move.h:57:10: note: submodule of top-level module 'std' implicitly imported here. #include <type_traits> // Brings in std::declval too. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:70:11: note: submodule of top-level module 'std' implicitly imported here. # include <type_traits>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <iosfwd>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/exception_defines.h>. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1. make",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:28695,usability,error,error,28695,".h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:70:11: note: submodule of top-level module 'std' implicitly imported here. # include <type_traits>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <iosfwd>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/exception_defines.h>. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o. [ 75%] Built target MetaCling. make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:28979,usability,error,error,28979,"odule 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <iosfwd>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/exception_defines.h>. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o. [ 75%] Built target MetaCling. make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:28995,usability,error,errors,28995,"dation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <iosfwd>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/exception_defines.h>. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o. [ 75%] Built target MetaCling. make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:29011,usability,stop,stopping,29011,"TTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <iosfwd>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/exception_defines.h>. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o. [ 75%] Built target MetaCling. make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https://github.com/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:29042,usability,Error,Error,29042,"r/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <iosfwd>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/exception_defines.h>. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o. [ 75%] Built target MetaCling. make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https://github.com/root-project/root gitclone`. 5. `c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:29049,usability,Error,Error,29049,"ares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <iosfwd>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/exception_defines.h>. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o. [ 75%] Built target MetaCling. make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https://github.com/root-project/root gitclone`. 5. `cd build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:29175,usability,Error,Error,29175,"42:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <iosfwd>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/exception_defines.h>. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o. [ 75%] Built target MetaCling. make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https://github.com/root-project/root gitclone`. 5. `cd build`. 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`. 7. `cmake --build . --target install -- -j4`. ### Setup. <!--. 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:29259,usability,Error,Error,29259,"b/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here. #include <iosfwd>. ^. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/exception_defines.h>. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o. [ 75%] Built target MetaCling. make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https://github.com/root-project/root gitclone`. 5. `cd build`. 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`. 7. `cmake --build . --target install -- -j4`. ### Setup. <!--. 1. ROOT version. 8. Operating system. 9. How you obtained ROOT, such as `dnf install` ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:29464,usability,Error,Error,29464,"'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/exception_defines.h>. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o. [ 75%] Built target MetaCling. make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https://github.com/root-project/root gitclone`. 5. `cd build`. 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`. 7. `cmake --build . --target install -- -j4`. ### Setup. <!--. 1. ROOT version. 8. Operating system. 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:29503,usability,behavi,behavior,29503,"ndation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/exception_defines.h>. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o. [ 75%] Built target MetaCling. make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https://github.com/root-project/root gitclone`. 5. `cd build`. 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`. 7. `cmake --build . --target install -- -j4`. ### Setup. <!--. 1. ROOT version. 8. Operating system. 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:29521,usability,clear,clear,29521,"RTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:. /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/exception_defines.h>. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o. [ 75%] Built target MetaCling. make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https://github.com/root-project/root gitclone`. 5. `cd build`. 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`. 7. `cmake --build . --target install -- -j4`. ### Setup. <!--. 1. ROOT version. 8. Operating system. 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper. T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:29612,usability,error,errors,29612,"/home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/exception_defines.h>. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o. [ 75%] Built target MetaCling. make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https://github.com/root-project/root gitclone`. 5. `cd build`. 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`. 7. `cmake --build . --target install -- -j4`. ### Setup. <!--. 1. ROOT version. 8. Operating system. 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper. Target: x86_64-pc-linux-gnu. Configured with: /build/gcc/src/gcc/configure --enable-language",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:29667,usability,behavi,behavior,29667,"g/std.modulemap:442:12: error: header 'bits/utility.h' not found. header ""bits/utility.h"". ^. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/exception_defines.h>. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o. [ 75%] Built target MetaCling. make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https://github.com/root-project/root gitclone`. 5. `cd build`. 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`. 7. `cmake --build . --target install -- -j4`. ### Setup. <!--. 1. ROOT version. 8. Operating system. 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper. Target: x86_64-pc-linux-gnu. Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-boots",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:29812,usability,input,input,29812,"./include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here. #include <bits/exception_defines.h>. ^. fatal error: too many errors emitted, stopping now [-ferror-limit=]. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o. [ 75%] Built target MetaCling. make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Root builds without any errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. `mkdir -p HEP/root`. 2. `cd HEP/root`. 3. `mkdir build install`. 4. `git clone --depth=1 https://github.com/root-project/root gitclone`. 5. `cd build`. 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`. 7. `cmake --build . --target install -- -j4`. ### Setup. <!--. 1. ROOT version. 8. Operating system. 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper. Target: x86_64-pc-linux-gnu. Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:31351,usability,Support,Supported,31351,"t it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. 1. `gcc -v`. ```sh. Using built-in specs. COLLECT_GCC=gcc. COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper. Target: x86_64-pc-linux-gnu. Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc. Thread model: posix. Supported LTO compression algorithms: zlib zstd. gcc version 11.2.0 (GCC). ```. 2. `clang -v`. ```sh. clang version 13.0.1. Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0. Found candidate GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0. Selected GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0. Candidate multilib: .;@m64. Candidate multilib: 32;@m32. Selected multilib: .;@m64. ```. 3. `cat /etc/*release`. ```sh. DISTRIB_ID=""Arch"". DISTRIB_RELEASE=""rolling"". DISTRIB_DESCRIPTION=""Arch Linux"". NAME=""Arch Linux"". PRETTY_NAME=""Arch Linux"". ID=arch. BUILD_ID=rolling. ANSI_COLOR=""38;2;23;147;209"". HOME_URL=""https://archlinux.org/"". DOCUMENTATION_URL=""https://wiki.archlinux.org/"". SUPPORT_URL=""https://bbs.archlinux.org/"". BUG_REPORT_URL=""https://bugs.archlinux.org/"". LOGO=archlinux-logo. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/pull/10529:21,deployability,modul,modulemap,21,[cxxmodules] Fix std.modulemap for older GCC; The header `bits/utility.h` only exists since libstdc++-12.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10529
https://github.com/root-project/root/pull/10529:21,modifiability,modul,modulemap,21,[cxxmodules] Fix std.modulemap for older GCC; The header `bits/utility.h` only exists since libstdc++-12.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10529
https://github.com/root-project/root/pull/10529:21,safety,modul,modulemap,21,[cxxmodules] Fix std.modulemap for older GCC; The header `bits/utility.h` only exists since libstdc++-12.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10529
https://github.com/root-project/root/pull/10531:284,energy efficiency,alloc,allocated,284,"[math] Improve gsl multifit algorithm with support for external gradient; . This PR fixes allows to use external gradient (for example computed with CLAD in TFormula) in the GSLMultiFit algorithm. . A fix is applied also in TF1::GradientPar where in case of CLAD gradient a vector is allocated for storing the gradient. Using an external pointer, for example coming from GSL has shown to be problematic. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10531
https://github.com/root-project/root/pull/10531:43,usability,support,support,43,"[math] Improve gsl multifit algorithm with support for external gradient; . This PR fixes allows to use external gradient (for example computed with CLAD in TFormula) in the GSLMultiFit algorithm. . A fix is applied also in TF1::GradientPar where in case of CLAD gradient a vector is allocated for storing the gradient. Using an external pointer, for example coming from GSL has shown to be problematic. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10531
https://github.com/root-project/root/pull/10532:202,availability,consist,consistency,202,"[RF] Replace `Bool_t`, `kTRUE`, and `kFALSE` in RooFit; The standard `bool`, `true`, and `false` have been used in new RooFit. code for a few years now, and it's better to update also the old code. for consistency. This helps also for doxygen, when the a function with. one way of specifying the boolean is referenced by a signature that uses. the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10532
https://github.com/root-project/root/pull/10532:172,deployability,updat,update,172,"[RF] Replace `Bool_t`, `kTRUE`, and `kFALSE` in RooFit; The standard `bool`, `true`, and `false` have been used in new RooFit. code for a few years now, and it's better to update also the old code. for consistency. This helps also for doxygen, when the a function with. one way of specifying the boolean is referenced by a signature that uses. the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10532
https://github.com/root-project/root/pull/10532:60,interoperability,standard,standard,60,"[RF] Replace `Bool_t`, `kTRUE`, and `kFALSE` in RooFit; The standard `bool`, `true`, and `false` have been used in new RooFit. code for a few years now, and it's better to update also the old code. for consistency. This helps also for doxygen, when the a function with. one way of specifying the boolean is referenced by a signature that uses. the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10532
https://github.com/root-project/root/pull/10532:281,interoperability,specif,specifying,281,"[RF] Replace `Bool_t`, `kTRUE`, and `kFALSE` in RooFit; The standard `bool`, `true`, and `false` have been used in new RooFit. code for a few years now, and it's better to update also the old code. for consistency. This helps also for doxygen, when the a function with. one way of specifying the boolean is referenced by a signature that uses. the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10532
https://github.com/root-project/root/pull/10532:172,safety,updat,update,172,"[RF] Replace `Bool_t`, `kTRUE`, and `kFALSE` in RooFit; The standard `bool`, `true`, and `false` have been used in new RooFit. code for a few years now, and it's better to update also the old code. for consistency. This helps also for doxygen, when the a function with. one way of specifying the boolean is referenced by a signature that uses. the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10532
https://github.com/root-project/root/pull/10532:172,security,updat,update,172,"[RF] Replace `Bool_t`, `kTRUE`, and `kFALSE` in RooFit; The standard `bool`, `true`, and `false` have been used in new RooFit. code for a few years now, and it's better to update also the old code. for consistency. This helps also for doxygen, when the a function with. one way of specifying the boolean is referenced by a signature that uses. the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10532
https://github.com/root-project/root/pull/10532:323,security,sign,signature,323,"[RF] Replace `Bool_t`, `kTRUE`, and `kFALSE` in RooFit; The standard `bool`, `true`, and `false` have been used in new RooFit. code for a few years now, and it's better to update also the old code. for consistency. This helps also for doxygen, when the a function with. one way of specifying the boolean is referenced by a signature that uses. the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10532
https://github.com/root-project/root/pull/10532:202,usability,consist,consistency,202,"[RF] Replace `Bool_t`, `kTRUE`, and `kFALSE` in RooFit; The standard `bool`, `true`, and `false` have been used in new RooFit. code for a few years now, and it's better to update also the old code. for consistency. This helps also for doxygen, when the a function with. one way of specifying the boolean is referenced by a signature that uses. the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10532
https://github.com/root-project/root/pull/10532:220,usability,help,helps,220,"[RF] Replace `Bool_t`, `kTRUE`, and `kFALSE` in RooFit; The standard `bool`, `true`, and `false` have been used in new RooFit. code for a few years now, and it's better to update also the old code. for consistency. This helps also for doxygen, when the a function with. one way of specifying the boolean is referenced by a signature that uses. the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10532
https://github.com/root-project/root/issues/10533:926,availability,Operat,Operating,926,"While running TMVA why I a getting an empty ROC plot.; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:1001,availability,down,download,1001,"While running TMVA why I a getting an empty ROC plot.; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:847,deployability,build,build,847,"While running TMVA why I a getting an empty ROC plot.; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:914,deployability,version,version,914,"While running TMVA why I a getting an empty ROC plot.; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:983,deployability,instal,install,983,"While running TMVA why I a getting an empty ROC plot.; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:914,integrability,version,version,914,"While running TMVA why I a getting an empty ROC plot.; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:914,modifiability,version,version,914,"While running TMVA why I a getting an empty ROC plot.; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:801,safety,input,input,801,"While running TMVA why I a getting an empty ROC plot.; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:1055,testability,context,context,1055,"While running TMVA why I a getting an empty ROC plot.; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:1084,testability,context,context,1084,"While running TMVA why I a getting an empty ROC plot.; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:445,usability,clear,clear,445,"While running TMVA why I a getting an empty ROC plot.; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:493,usability,behavi,behavior,493,"While running TMVA why I a getting an empty ROC plot.; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:524,usability,behavi,behavior,524,"While running TMVA why I a getting an empty ROC plot.; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:542,usability,clear,clear,542,"While running TMVA why I a getting an empty ROC plot.; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:656,usability,behavi,behavior,656,"While running TMVA why I a getting an empty ROC plot.; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:801,usability,input,input,801,"While running TMVA why I a getting an empty ROC plot.; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10535:107,integrability,pub,public,107,"ROOT prompt tab completion ""leaks"" private members; For the following class definition. ```cpp. class A {. public:. int x; . };. class B : public A {. private:. using A::x;. };. ```. the tab completion of `b.<tab>` of an object `B b;` shows `x`. Normally, private data members are not shown though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10535
https://github.com/root-project/root/issues/10535:139,integrability,pub,public,139,"ROOT prompt tab completion ""leaks"" private members; For the following class definition. ```cpp. class A {. public:. int x; . };. class B : public A {. private:. using A::x;. };. ```. the tab completion of `b.<tab>` of an object `B b;` shows `x`. Normally, private data members are not shown though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10535
https://github.com/root-project/root/issues/10535:16,safety,compl,completion,16,"ROOT prompt tab completion ""leaks"" private members; For the following class definition. ```cpp. class A {. public:. int x; . };. class B : public A {. private:. using A::x;. };. ```. the tab completion of `b.<tab>` of an object `B b;` shows `x`. Normally, private data members are not shown though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10535
https://github.com/root-project/root/issues/10535:191,safety,compl,completion,191,"ROOT prompt tab completion ""leaks"" private members; For the following class definition. ```cpp. class A {. public:. int x; . };. class B : public A {. private:. using A::x;. };. ```. the tab completion of `b.<tab>` of an object `B b;` shows `x`. Normally, private data members are not shown though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10535
https://github.com/root-project/root/issues/10535:16,security,compl,completion,16,"ROOT prompt tab completion ""leaks"" private members; For the following class definition. ```cpp. class A {. public:. int x; . };. class B : public A {. private:. using A::x;. };. ```. the tab completion of `b.<tab>` of an object `B b;` shows `x`. Normally, private data members are not shown though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10535
https://github.com/root-project/root/issues/10535:191,security,compl,completion,191,"ROOT prompt tab completion ""leaks"" private members; For the following class definition. ```cpp. class A {. public:. int x; . };. class B : public A {. private:. using A::x;. };. ```. the tab completion of `b.<tab>` of an object `B b;` shows `x`. Normally, private data members are not shown though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10535
https://github.com/root-project/root/pull/10536:42,deployability,Continu,Continue,42,"Use override syntax in different classes; Continue transformation, mainly classes from `core` and `net`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10536
https://github.com/root-project/root/pull/10536:88,energy efficiency,core,core,88,"Use override syntax in different classes; Continue transformation, mainly classes from `core` and `net`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10536
https://github.com/root-project/root/pull/10536:51,integrability,transform,transformation,51,"Use override syntax in different classes; Continue transformation, mainly classes from `core` and `net`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10536
https://github.com/root-project/root/pull/10536:51,interoperability,transform,transformation,51,"Use override syntax in different classes; Continue transformation, mainly classes from `core` and `net`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10536
https://github.com/root-project/root/issues/10538:1896,availability,Operat,Operating,1896,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1971,availability,down,download,1971,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1517,deployability,build,build,1517,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1884,deployability,version,version,1884,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1953,deployability,instal,install,1953,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:2127,deployability,releas,release,2127,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:646,energy efficiency,model,model,646,"[RF] AdditionalData is not exported to XML; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yours",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1710,integrability,discover,discovered,1710,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1884,integrability,version,version,1884,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:39,interoperability,XML,XML,39,"[RF] AdditionalData is not exported to XML; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yours",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:590,interoperability,XML,XML,590,"[RF] AdditionalData is not exported to XML; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yours",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:808,interoperability,XML,XML,808,"[RF] AdditionalData is not exported to XML; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yours",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:988,interoperability,XML,XML,988,"[RF] AdditionalData is not exported to XML; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yours",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1261,interoperability,XML,XML,1261,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1710,interoperability,discover,discovered,1710,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1884,modifiability,version,version,1884,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1471,safety,input,input,1471,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:646,security,model,model,646,"[RF] AdditionalData is not exported to XML; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yours",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1621,security,modif,modified,1621,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:2166,testability,context,context,2166,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:2195,testability,context,context,2195,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:434,usability,clear,clear,434,"[RF] AdditionalData is not exported to XML; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yours",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:482,usability,behavi,behavior,482,"[RF] AdditionalData is not exported to XML; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yours",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1131,usability,behavi,behavior,1131,"oject/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1149,usability,clear,clear,1149,"?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1326,usability,behavi,behavior,1326,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1471,usability,input,input,1471,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1710,usability,discov,discovered,1710,"3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The additional datasets also get exported to XML/rootfile/etc. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue. It was first discovered in our analysis framework. [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/). ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10539:515,availability,down,downloads,515,"6.26.02 doesn't build Netx component; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:870,availability,Down,Download,870,"6.26.02 doesn't build Netx component; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:1129,availability,Operat,Operating,1129,"/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.com/root-project/root/files/8646801/root-v6.26.02-headers.txt). [root-headers-diff.txt](https://github.com/root-project/root/files/864",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:1191,availability,down,download,1191,"* AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.com/root-project/root/files/8646801/root-v6.26.02-headers.txt). [root-headers-diff.txt](https://github.com/root-project/root/files/8646803/root-headers-diff.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:16,deployability,build,build,16,"6.26.02 doesn't build Netx component; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:537,deployability,build,build,537,"6.26.02 doesn't build Netx component; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:774,deployability,build,build,774,"6.26.02 doesn't build Netx component; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:823,deployability,instal,installed,823,"6.26.02 doesn't build Netx component; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:842,deployability,instal,install,842,"6.26.02 doesn't build Netx component; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:887,deployability,releas,release,887,"6.26.02 doesn't build Netx component; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:918,deployability,instal,install,918,"6.26.02 doesn't build Netx component; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:1108,deployability,version,version,1108,"ithub.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.com/root-project/root/files/8646801/root-v6.26.02-headers.txt). [root-headers-diff.txt](https://github.com/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:27,integrability,compon,component,27,"6.26.02 doesn't build Netx component; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:1108,integrability,version,version,1108,"ithub.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.com/root-project/root/files/8646801/root-v6.26.02-headers.txt). [root-headers-diff.txt](https://github.com/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:27,interoperability,compon,component,27,"6.26.02 doesn't build Netx component; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:27,modifiability,compon,component,27,"6.26.02 doesn't build Netx component; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:1108,modifiability,version,version,1108,"ithub.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.com/root-project/root/files/8646801/root-v6.26.02-headers.txt). [root-headers-diff.txt](https://github.com/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:8,reliability,doe,doesn,8,"6.26.02 doesn't build Netx component; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:1234,testability,context,context,1234,"* AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.com/root-project/root/files/8646801/root-v6.26.02-headers.txt). [root-headers-diff.txt](https://github.com/root-project/root/files/8646803/root-headers-diff.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:1263,testability,context,context,1263,"* AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.com/root-project/root/files/8646801/root-v6.26.02-headers.txt). [root-headers-diff.txt](https://github.com/root-project/root/files/8646803/root-headers-diff.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:707,usability,behavi,behavior,707,"6.26.02 doesn't build Netx component; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior. The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce. Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup. 1. ROOT version: 6.26.02. 2. Operating system: Ubuntu 20. 3. How you obtained ROOT: binary download and also built it. ### Additional context. <!--. Add any other context about the problem here. -->. you may also notice that the headers list for 6.26.02 is considerably shorter:. ```. $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt. 2970 root-v6.24.06-headers.txt. 2840 root-v6.26.02-headers.txt. ```. Headers included in 6.24.06 but missing in 6.26.02:. ```. $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt. $ grep -c '^-\./' root-headers-diff.txt . 238. ```. Headers missing in 6.24.06 but included in 6.26.02:. ```. $ grep -c '^+\./' root-headers-diff.txt . 108. ```. Thank you! ### Attachments. [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt). [root-v6.26.02-headers.txt](https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10540:12,reliability,doe,does,12,"TTreeReader does not handle properly entry ranges where `beginEntry==endEntry`; Consider the following minimal reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include<TSystem.h>. using namespace ROOT;. using namespace ROOT::RDF;. int main() {. auto dfWriter = RDataFrame(5).Define(""x"", [](ULong64_t e) { return int(e) + 10; }, {""rdfentry_""});. dfWriter.Snapshot<int>(""mytree"", ""myfile.root"", {""x""});. TFile *myFile = TFile::Open(""myfile.root"");. TTreeReader myReader(""mytree"", myFile);. myReader.SetEntriesRange(2, 2); // supposed to return empty tree. TTreeReaderValue<int> x(myReader, ""x"");. while (myReader.Next()) { // supposed not to loop at all. std::cout << *x << std::endl;. }. }. ```. The following reproducer gives a tree with elements 12, 13, 14, i.e. as if the range was (2,5). However, empty range is explicitly requested, and hence is supposed to give an empty tree. Fyi: @vepadulano @eguiraud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10540
https://github.com/root-project/root/issues/10540:103,usability,minim,minimal,103,"TTreeReader does not handle properly entry ranges where `beginEntry==endEntry`; Consider the following minimal reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include<TSystem.h>. using namespace ROOT;. using namespace ROOT::RDF;. int main() {. auto dfWriter = RDataFrame(5).Define(""x"", [](ULong64_t e) { return int(e) + 10; }, {""rdfentry_""});. dfWriter.Snapshot<int>(""mytree"", ""myfile.root"", {""x""});. TFile *myFile = TFile::Open(""myfile.root"");. TTreeReader myReader(""mytree"", myFile);. myReader.SetEntriesRange(2, 2); // supposed to return empty tree. TTreeReaderValue<int> x(myReader, ""x"");. while (myReader.Next()) { // supposed not to loop at all. std::cout << *x << std::endl;. }. }. ```. The following reproducer gives a tree with elements 12, 13, 14, i.e. as if the range was (2,5). However, empty range is explicitly requested, and hence is supposed to give an empty tree. Fyi: @vepadulano @eguiraud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10540
https://github.com/root-project/root/pull/10542:12,safety,test,test,12,"[cling] Fix test/DynamicLibraryManager/callable_lib_L_AB_abs.C; Just pass the absolute path, do not prefix with `-l` which confuses `ld`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10542
https://github.com/root-project/root/pull/10542:12,testability,test,test,12,"[cling] Fix test/DynamicLibraryManager/callable_lib_L_AB_abs.C; Just pass the absolute path, do not prefix with `-l` which confuses `ld`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10542
https://github.com/root-project/root/pull/10543:133,safety,test,test,133,"[DF] Throw if a varied column is redefined; ...because we'd only redefine the _nominal_ value, which would be extremely confusing. A test for this case will soon be added as part of a general improvement to Vary's test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10543
https://github.com/root-project/root/pull/10543:214,safety,test,test,214,"[DF] Throw if a varied column is redefined; ...because we'd only redefine the _nominal_ value, which would be extremely confusing. A test for this case will soon be added as part of a general improvement to Vary's test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10543
https://github.com/root-project/root/pull/10543:133,testability,test,test,133,"[DF] Throw if a varied column is redefined; ...because we'd only redefine the _nominal_ value, which would be extremely confusing. A test for this case will soon be added as part of a general improvement to Vary's test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10543
https://github.com/root-project/root/pull/10543:214,testability,test,test,214,"[DF] Throw if a varied column is redefined; ...because we'd only redefine the _nominal_ value, which would be extremely confusing. A test for this case will soon be added as part of a general improvement to Vary's test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10543
https://github.com/root-project/root/pull/10543:219,testability,coverag,coverage,219,"[DF] Throw if a varied column is redefined; ...because we'd only redefine the _nominal_ value, which would be extremely confusing. A test for this case will soon be added as part of a general improvement to Vary's test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10543
https://github.com/root-project/root/pull/10544:15,availability,down,downcast,15,"[DF] Fix wrong downcast in {RRange,RFilter}::GetVariedFilter ; When previous node of a RRange or RFilter node was a RJittedFilter,. we were wrongly downcasting _varied_ filters to the RJittedFilter type,. but varied filters are _not_ jitted filters, they are copies of the. actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,. we treat it everywhere as the generic base class RFilterBase, which. fixes the problem and it is consistent with what we already do in. RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/pull/10544:148,availability,down,downcasting,148,"[DF] Fix wrong downcast in {RRange,RFilter}::GetVariedFilter ; When previous node of a RRange or RFilter node was a RJittedFilter,. we were wrongly downcasting _varied_ filters to the RJittedFilter type,. but varied filters are _not_ jitted filters, they are copies of the. actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,. we treat it everywhere as the generic base class RFilterBase, which. fixes the problem and it is consistent with what we already do in. RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/pull/10544:464,availability,consist,consistent,464,"[DF] Fix wrong downcast in {RRange,RFilter}::GetVariedFilter ; When previous node of a RRange or RFilter node was a RJittedFilter,. we were wrongly downcasting _varied_ filters to the RJittedFilter type,. but varied filters are _not_ jitted filters, they are copies of the. actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,. we treat it everywhere as the generic base class RFilterBase, which. fixes the problem and it is consistent with what we already do in. RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/pull/10544:308,deployability,patch,patch,308,"[DF] Fix wrong downcast in {RRange,RFilter}::GetVariedFilter ; When previous node of a RRange or RFilter node was a RJittedFilter,. we were wrongly downcasting _varied_ filters to the RJittedFilter type,. but varied filters are _not_ jitted filters, they are copies of the. actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,. we treat it everywhere as the generic base class RFilterBase, which. fixes the problem and it is consistent with what we already do in. RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/pull/10544:169,integrability,filter,filters,169,"[DF] Fix wrong downcast in {RRange,RFilter}::GetVariedFilter ; When previous node of a RRange or RFilter node was a RJittedFilter,. we were wrongly downcasting _varied_ filters to the RJittedFilter type,. but varied filters are _not_ jitted filters, they are copies of the. actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,. we treat it everywhere as the generic base class RFilterBase, which. fixes the problem and it is consistent with what we already do in. RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/pull/10544:216,integrability,filter,filters,216,"[DF] Fix wrong downcast in {RRange,RFilter}::GetVariedFilter ; When previous node of a RRange or RFilter node was a RJittedFilter,. we were wrongly downcasting _varied_ filters to the RJittedFilter type,. but varied filters are _not_ jitted filters, they are copies of the. actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,. we treat it everywhere as the generic base class RFilterBase, which. fixes the problem and it is consistent with what we already do in. RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/pull/10544:241,integrability,filter,filters,241,"[DF] Fix wrong downcast in {RRange,RFilter}::GetVariedFilter ; When previous node of a RRange or RFilter node was a RJittedFilter,. we were wrongly downcasting _varied_ filters to the RJittedFilter type,. but varied filters are _not_ jitted filters, they are copies of the. actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,. we treat it everywhere as the generic base class RFilterBase, which. fixes the problem and it is consistent with what we already do in. RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/pull/10544:290,integrability,filter,filter,290,"[DF] Fix wrong downcast in {RRange,RFilter}::GetVariedFilter ; When previous node of a RRange or RFilter node was a RJittedFilter,. we were wrongly downcasting _varied_ filters to the RJittedFilter type,. but varied filters are _not_ jitted filters, they are copies of the. actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,. we treat it everywhere as the generic base class RFilterBase, which. fixes the problem and it is consistent with what we already do in. RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/pull/10544:308,safety,patch,patch,308,"[DF] Fix wrong downcast in {RRange,RFilter}::GetVariedFilter ; When previous node of a RRange or RFilter node was a RJittedFilter,. we were wrongly downcasting _varied_ filters to the RJittedFilter type,. but varied filters are _not_ jitted filters, they are copies of the. actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,. we treat it everywhere as the generic base class RFilterBase, which. fixes the problem and it is consistent with what we already do in. RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/pull/10544:565,safety,test,test,565,"[DF] Fix wrong downcast in {RRange,RFilter}::GetVariedFilter ; When previous node of a RRange or RFilter node was a RJittedFilter,. we were wrongly downcasting _varied_ filters to the RJittedFilter type,. but varied filters are _not_ jitted filters, they are copies of the. actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,. we treat it everywhere as the generic base class RFilterBase, which. fixes the problem and it is consistent with what we already do in. RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/pull/10544:308,security,patch,patch,308,"[DF] Fix wrong downcast in {RRange,RFilter}::GetVariedFilter ; When previous node of a RRange or RFilter node was a RJittedFilter,. we were wrongly downcasting _varied_ filters to the RJittedFilter type,. but varied filters are _not_ jitted filters, they are copies of the. actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,. we treat it everywhere as the generic base class RFilterBase, which. fixes the problem and it is consistent with what we already do in. RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/pull/10544:554,testability,regress,regression,554,"[DF] Fix wrong downcast in {RRange,RFilter}::GetVariedFilter ; When previous node of a RRange or RFilter node was a RJittedFilter,. we were wrongly downcasting _varied_ filters to the RJittedFilter type,. but varied filters are _not_ jitted filters, they are copies of the. actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,. we treat it everywhere as the generic base class RFilterBase, which. fixes the problem and it is consistent with what we already do in. RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/pull/10544:565,testability,test,test,565,"[DF] Fix wrong downcast in {RRange,RFilter}::GetVariedFilter ; When previous node of a RRange or RFilter node was a RJittedFilter,. we were wrongly downcasting _varied_ filters to the RJittedFilter type,. but varied filters are _not_ jitted filters, they are copies of the. actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,. we treat it everywhere as the generic base class RFilterBase, which. fixes the problem and it is consistent with what we already do in. RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/pull/10544:464,usability,consist,consistent,464,"[DF] Fix wrong downcast in {RRange,RFilter}::GetVariedFilter ; When previous node of a RRange or RFilter node was a RJittedFilter,. we were wrongly downcasting _varied_ filters to the RJittedFilter type,. but varied filters are _not_ jitted filters, they are copies of the. actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,. we treat it everywhere as the generic base class RFilterBase, which. fixes the problem and it is consistent with what we already do in. RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/issues/10545:386,availability,error,error,386,"Teach `Vary` to accept `Stats`; `Stats` RDF action should accepts systematic variations, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Stats<int>(""x"");. ROOT::RDF::Experimental::VariationsFor(h); // logic error:. // The MakeNew method is not implemented for this action helper (TStatistic<BR/>). Cannot Vary its result. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10545
https://github.com/root-project/root/issues/10545:380,deployability,log,logic,380,"Teach `Vary` to accept `Stats`; `Stats` RDF action should accepts systematic variations, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Stats<int>(""x"");. ROOT::RDF::Experimental::VariationsFor(h); // logic error:. // The MakeNew method is not implemented for this action helper (TStatistic<BR/>). Cannot Vary its result. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10545
https://github.com/root-project/root/issues/10545:93,energy efficiency,current,currently,93,"Teach `Vary` to accept `Stats`; `Stats` RDF action should accepts systematic variations, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Stats<int>(""x"");. ROOT::RDF::Experimental::VariationsFor(h); // logic error:. // The MakeNew method is not implemented for this action helper (TStatistic<BR/>). Cannot Vary its result. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10545
https://github.com/root-project/root/issues/10545:386,performance,error,error,386,"Teach `Vary` to accept `Stats`; `Stats` RDF action should accepts systematic variations, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Stats<int>(""x"");. ROOT::RDF::Experimental::VariationsFor(h); // logic error:. // The MakeNew method is not implemented for this action helper (TStatistic<BR/>). Cannot Vary its result. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10545
https://github.com/root-project/root/issues/10545:103,reliability,doe,does,103,"Teach `Vary` to accept `Stats`; `Stats` RDF action should accepts systematic variations, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Stats<int>(""x"");. ROOT::RDF::Experimental::VariationsFor(h); // logic error:. // The MakeNew method is not implemented for this action helper (TStatistic<BR/>). Cannot Vary its result. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10545
https://github.com/root-project/root/issues/10545:380,safety,log,logic,380,"Teach `Vary` to accept `Stats`; `Stats` RDF action should accepts systematic variations, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Stats<int>(""x"");. ROOT::RDF::Experimental::VariationsFor(h); // logic error:. // The MakeNew method is not implemented for this action helper (TStatistic<BR/>). Cannot Vary its result. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10545
https://github.com/root-project/root/issues/10545:386,safety,error,error,386,"Teach `Vary` to accept `Stats`; `Stats` RDF action should accepts systematic variations, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Stats<int>(""x"");. ROOT::RDF::Experimental::VariationsFor(h); // logic error:. // The MakeNew method is not implemented for this action helper (TStatistic<BR/>). Cannot Vary its result. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10545
https://github.com/root-project/root/issues/10545:380,security,log,logic,380,"Teach `Vary` to accept `Stats`; `Stats` RDF action should accepts systematic variations, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Stats<int>(""x"");. ROOT::RDF::Experimental::VariationsFor(h); // logic error:. // The MakeNew method is not implemented for this action helper (TStatistic<BR/>). Cannot Vary its result. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10545
https://github.com/root-project/root/issues/10545:380,testability,log,logic,380,"Teach `Vary` to accept `Stats`; `Stats` RDF action should accepts systematic variations, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Stats<int>(""x"");. ROOT::RDF::Experimental::VariationsFor(h); // logic error:. // The MakeNew method is not implemented for this action helper (TStatistic<BR/>). Cannot Vary its result. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10545
https://github.com/root-project/root/issues/10545:113,usability,Minim,Minimal,113,"Teach `Vary` to accept `Stats`; `Stats` RDF action should accepts systematic variations, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Stats<int>(""x"");. ROOT::RDF::Experimental::VariationsFor(h); // logic error:. // The MakeNew method is not implemented for this action helper (TStatistic<BR/>). Cannot Vary its result. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10545
https://github.com/root-project/root/issues/10545:386,usability,error,error,386,"Teach `Vary` to accept `Stats`; `Stats` RDF action should accepts systematic variations, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Stats<int>(""x"");. ROOT::RDF::Experimental::VariationsFor(h); // logic error:. // The MakeNew method is not implemented for this action helper (TStatistic<BR/>). Cannot Vary its result. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10545
https://github.com/root-project/root/issues/10545:451,usability,help,helper,451,"Teach `Vary` to accept `Stats`; `Stats` RDF action should accepts systematic variations, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Stats<int>(""x"");. ROOT::RDF::Experimental::VariationsFor(h); // logic error:. // The MakeNew method is not implemented for this action helper (TStatistic<BR/>). Cannot Vary its result. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10545
https://github.com/root-project/root/pull/10546:49,deployability,log,logger,49,"[RF] Improve passing `nullptr` to RooFit message logger; This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:153,deployability,log,logger,153,"[RF] Improve passing `nullptr` to RooFit message logger; This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:402,deployability,updat,updated,402,"[RF] Improve passing `nullptr` to RooFit message logger; This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:41,integrability,messag,message,41,"[RF] Improve passing `nullptr` to RooFit message logger; This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:145,integrability,messag,message,145,"[RF] Improve passing `nullptr` to RooFit message logger; This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:41,interoperability,messag,message,41,"[RF] Improve passing `nullptr` to RooFit message logger; This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:145,interoperability,messag,message,145,"[RF] Improve passing `nullptr` to RooFit message logger; This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:49,safety,log,logger,49,"[RF] Improve passing `nullptr` to RooFit message logger; This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:153,safety,log,logger,153,"[RF] Improve passing `nullptr` to RooFit message logger; This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:402,safety,updat,updated,402,"[RF] Improve passing `nullptr` to RooFit message logger; This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:483,safety,avoid,avoid,483,"[RF] Improve passing `nullptr` to RooFit message logger; This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:49,security,log,logger,49,"[RF] Improve passing `nullptr` to RooFit message logger; This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:153,security,log,logger,153,"[RF] Improve passing `nullptr` to RooFit message logger; This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:402,security,updat,updated,402,"[RF] Improve passing `nullptr` to RooFit message logger; This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:49,testability,log,logger,49,"[RF] Improve passing `nullptr` to RooFit message logger; This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:153,testability,log,logger,153,"[RF] Improve passing `nullptr` to RooFit message logger; This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/issues/10548:658,availability,error,error,658,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1392,availability,error,error,1392,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1455,availability,Error,Error,1455,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1494,availability,Error,Error,1494,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:124,deployability,build,build,124,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:444,deployability,version,version,444,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:825,deployability,build,build,825,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1177,deployability,version,version,1177,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:444,integrability,version,version,444,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1177,integrability,version,version,1177,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:444,modifiability,version,version,444,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1177,modifiability,version,version,1177,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:658,performance,error,error,658,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1392,performance,error,error,1392,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1455,performance,Error,Error,1455,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1494,performance,Error,Error,1494,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:658,safety,error,error,658,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:758,safety,except,exception,758,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1392,safety,error,error,1392,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1455,safety,Error,Error,1455,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1494,safety,Error,Error,1494,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:18,security,ident,identifier,18,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:280,security,Team,Team,280,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:683,security,ident,identifier,683,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1016,security,Team,Team,1016,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1417,security,ident,identifier,1417,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:492,usability,help,help,492,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:658,usability,error,error,658,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:852,usability,behavi,behavior,852,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1225,usability,help,help,1225,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1392,usability,error,error,1392,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1455,usability,Error,Error,1455,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1494,usability,Error,Error,1494,"Use of undeclared identifier on Mac ARM; ### Describe the bug. On Mac ARM we get (found by René):. ```. sftnight@macphsft26 build % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern/ |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on May 09 2022, 11:42:50 |. | From heads/master@v6-25-02-1202-g8dc4bc40fb |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_9:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. libc++abi: terminating with uncaught exception of type cling::CompilationException. sftnight@macphsft26 build %. ```. ### Expected behavior. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.27/01 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on May 09 2022, 05:37:55 |. | From heads/master@v6-25-02-1201-g797bb5dce1 |. | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] whatever. input_line_13:2:3: error: use of undeclared identifier 'whatever'. (whatever). ^. Error in <HandleInterpreterException>: Error evaluating expression (whatever). Execution of your code was aborted. root [1] . ```. ### To Reproduce. Type something unknown at the ROOT prompt. ### Setup. MacOS, ARM1 machine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/pull/10550:345,deployability,log,logic,345,"[RF] Avoid using `_normSet` member in RooAddPdf; The `RooAbsPdf::_normSet` member should be not used, because it can. happen in many situations that the RooArgSet it points to gets out of. scope and then you get a crash. There were several cases reported on the. forum where this happened with a RooAddPdf recently, becaues with ROOT. 6.26 some logic of the RooAddPdf got changed to better deal with empty. normalization sets. This commit avoids using `_normSet` by overriding `getValV` in RooAddPdf. directly, instead of `evaluate()`. This way, it has access to the actual. normalization set that is passed to the call to `getVal()`. For the batch mode, we now pass `nullptr` to. `RooAddPdf::getNormAndCache()` instead of `_normSet`. In this case it. falls back to using `_copyOfLastNormSet`, which is guaranteed to still. be valid because it's a unique_ptr owned by the RooAddPdf itself. Needs to be backported to ROOT 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10550
https://github.com/root-project/root/pull/10550:643,integrability,batch,batch,643,"[RF] Avoid using `_normSet` member in RooAddPdf; The `RooAbsPdf::_normSet` member should be not used, because it can. happen in many situations that the RooArgSet it points to gets out of. scope and then you get a crash. There were several cases reported on the. forum where this happened with a RooAddPdf recently, becaues with ROOT. 6.26 some logic of the RooAddPdf got changed to better deal with empty. normalization sets. This commit avoids using `_normSet` by overriding `getValV` in RooAddPdf. directly, instead of `evaluate()`. This way, it has access to the actual. normalization set that is passed to the call to `getVal()`. For the batch mode, we now pass `nullptr` to. `RooAddPdf::getNormAndCache()` instead of `_normSet`. In this case it. falls back to using `_copyOfLastNormSet`, which is guaranteed to still. be valid because it's a unique_ptr owned by the RooAddPdf itself. Needs to be backported to ROOT 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10550
https://github.com/root-project/root/pull/10550:643,performance,batch,batch,643,"[RF] Avoid using `_normSet` member in RooAddPdf; The `RooAbsPdf::_normSet` member should be not used, because it can. happen in many situations that the RooArgSet it points to gets out of. scope and then you get a crash. There were several cases reported on the. forum where this happened with a RooAddPdf recently, becaues with ROOT. 6.26 some logic of the RooAddPdf got changed to better deal with empty. normalization sets. This commit avoids using `_normSet` by overriding `getValV` in RooAddPdf. directly, instead of `evaluate()`. This way, it has access to the actual. normalization set that is passed to the call to `getVal()`. For the batch mode, we now pass `nullptr` to. `RooAddPdf::getNormAndCache()` instead of `_normSet`. In this case it. falls back to using `_copyOfLastNormSet`, which is guaranteed to still. be valid because it's a unique_ptr owned by the RooAddPdf itself. Needs to be backported to ROOT 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10550
https://github.com/root-project/root/pull/10550:5,safety,Avoid,Avoid,5,"[RF] Avoid using `_normSet` member in RooAddPdf; The `RooAbsPdf::_normSet` member should be not used, because it can. happen in many situations that the RooArgSet it points to gets out of. scope and then you get a crash. There were several cases reported on the. forum where this happened with a RooAddPdf recently, becaues with ROOT. 6.26 some logic of the RooAddPdf got changed to better deal with empty. normalization sets. This commit avoids using `_normSet` by overriding `getValV` in RooAddPdf. directly, instead of `evaluate()`. This way, it has access to the actual. normalization set that is passed to the call to `getVal()`. For the batch mode, we now pass `nullptr` to. `RooAddPdf::getNormAndCache()` instead of `_normSet`. In this case it. falls back to using `_copyOfLastNormSet`, which is guaranteed to still. be valid because it's a unique_ptr owned by the RooAddPdf itself. Needs to be backported to ROOT 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10550
https://github.com/root-project/root/pull/10550:345,safety,log,logic,345,"[RF] Avoid using `_normSet` member in RooAddPdf; The `RooAbsPdf::_normSet` member should be not used, because it can. happen in many situations that the RooArgSet it points to gets out of. scope and then you get a crash. There were several cases reported on the. forum where this happened with a RooAddPdf recently, becaues with ROOT. 6.26 some logic of the RooAddPdf got changed to better deal with empty. normalization sets. This commit avoids using `_normSet` by overriding `getValV` in RooAddPdf. directly, instead of `evaluate()`. This way, it has access to the actual. normalization set that is passed to the call to `getVal()`. For the batch mode, we now pass `nullptr` to. `RooAddPdf::getNormAndCache()` instead of `_normSet`. In this case it. falls back to using `_copyOfLastNormSet`, which is guaranteed to still. be valid because it's a unique_ptr owned by the RooAddPdf itself. Needs to be backported to ROOT 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10550
https://github.com/root-project/root/pull/10550:439,safety,avoid,avoids,439,"[RF] Avoid using `_normSet` member in RooAddPdf; The `RooAbsPdf::_normSet` member should be not used, because it can. happen in many situations that the RooArgSet it points to gets out of. scope and then you get a crash. There were several cases reported on the. forum where this happened with a RooAddPdf recently, becaues with ROOT. 6.26 some logic of the RooAddPdf got changed to better deal with empty. normalization sets. This commit avoids using `_normSet` by overriding `getValV` in RooAddPdf. directly, instead of `evaluate()`. This way, it has access to the actual. normalization set that is passed to the call to `getVal()`. For the batch mode, we now pass `nullptr` to. `RooAddPdf::getNormAndCache()` instead of `_normSet`. In this case it. falls back to using `_copyOfLastNormSet`, which is guaranteed to still. be valid because it's a unique_ptr owned by the RooAddPdf itself. Needs to be backported to ROOT 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10550
https://github.com/root-project/root/pull/10550:827,safety,valid,valid,827,"[RF] Avoid using `_normSet` member in RooAddPdf; The `RooAbsPdf::_normSet` member should be not used, because it can. happen in many situations that the RooArgSet it points to gets out of. scope and then you get a crash. There were several cases reported on the. forum where this happened with a RooAddPdf recently, becaues with ROOT. 6.26 some logic of the RooAddPdf got changed to better deal with empty. normalization sets. This commit avoids using `_normSet` by overriding `getValV` in RooAddPdf. directly, instead of `evaluate()`. This way, it has access to the actual. normalization set that is passed to the call to `getVal()`. For the batch mode, we now pass `nullptr` to. `RooAddPdf::getNormAndCache()` instead of `_normSet`. In this case it. falls back to using `_copyOfLastNormSet`, which is guaranteed to still. be valid because it's a unique_ptr owned by the RooAddPdf itself. Needs to be backported to ROOT 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10550
https://github.com/root-project/root/pull/10550:345,security,log,logic,345,"[RF] Avoid using `_normSet` member in RooAddPdf; The `RooAbsPdf::_normSet` member should be not used, because it can. happen in many situations that the RooArgSet it points to gets out of. scope and then you get a crash. There were several cases reported on the. forum where this happened with a RooAddPdf recently, becaues with ROOT. 6.26 some logic of the RooAddPdf got changed to better deal with empty. normalization sets. This commit avoids using `_normSet` by overriding `getValV` in RooAddPdf. directly, instead of `evaluate()`. This way, it has access to the actual. normalization set that is passed to the call to `getVal()`. For the batch mode, we now pass `nullptr` to. `RooAddPdf::getNormAndCache()` instead of `_normSet`. In this case it. falls back to using `_copyOfLastNormSet`, which is guaranteed to still. be valid because it's a unique_ptr owned by the RooAddPdf itself. Needs to be backported to ROOT 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10550
https://github.com/root-project/root/pull/10550:553,security,access,access,553,"[RF] Avoid using `_normSet` member in RooAddPdf; The `RooAbsPdf::_normSet` member should be not used, because it can. happen in many situations that the RooArgSet it points to gets out of. scope and then you get a crash. There were several cases reported on the. forum where this happened with a RooAddPdf recently, becaues with ROOT. 6.26 some logic of the RooAddPdf got changed to better deal with empty. normalization sets. This commit avoids using `_normSet` by overriding `getValV` in RooAddPdf. directly, instead of `evaluate()`. This way, it has access to the actual. normalization set that is passed to the call to `getVal()`. For the batch mode, we now pass `nullptr` to. `RooAddPdf::getNormAndCache()` instead of `_normSet`. In this case it. falls back to using `_copyOfLastNormSet`, which is guaranteed to still. be valid because it's a unique_ptr owned by the RooAddPdf itself. Needs to be backported to ROOT 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10550
https://github.com/root-project/root/pull/10550:345,testability,log,logic,345,"[RF] Avoid using `_normSet` member in RooAddPdf; The `RooAbsPdf::_normSet` member should be not used, because it can. happen in many situations that the RooArgSet it points to gets out of. scope and then you get a crash. There were several cases reported on the. forum where this happened with a RooAddPdf recently, becaues with ROOT. 6.26 some logic of the RooAddPdf got changed to better deal with empty. normalization sets. This commit avoids using `_normSet` by overriding `getValV` in RooAddPdf. directly, instead of `evaluate()`. This way, it has access to the actual. normalization set that is passed to the call to `getVal()`. For the batch mode, we now pass `nullptr` to. `RooAddPdf::getNormAndCache()` instead of `_normSet`. In this case it. falls back to using `_copyOfLastNormSet`, which is guaranteed to still. be valid because it's a unique_ptr owned by the RooAddPdf itself. Needs to be backported to ROOT 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10550
https://github.com/root-project/root/issues/10551:82,energy efficiency,current,currently,82,"Teach `Vary` to accept `Report`; `Vary` should support `Report()` RDF action, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Filter([](int x) { return x > 5; }, {""x""}, ""before""). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Filter([](int x) { return x > 7; }, {""x""}, ""after""). .Report();. ROOT::RDF::Experimental::VariationsFor(h);. ```. CC: @eguiraud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10551
https://github.com/root-project/root/issues/10551:228,integrability,Filter,Filter,228,"Teach `Vary` to accept `Report`; `Vary` should support `Report()` RDF action, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Filter([](int x) { return x > 5; }, {""x""}, ""before""). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Filter([](int x) { return x > 7; }, {""x""}, ""after""). .Report();. ROOT::RDF::Experimental::VariationsFor(h);. ```. CC: @eguiraud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10551
https://github.com/root-project/root/issues/10551:360,integrability,Filter,Filter,360,"Teach `Vary` to accept `Report`; `Vary` should support `Report()` RDF action, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Filter([](int x) { return x > 5; }, {""x""}, ""before""). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Filter([](int x) { return x > 7; }, {""x""}, ""after""). .Report();. ROOT::RDF::Experimental::VariationsFor(h);. ```. CC: @eguiraud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10551
https://github.com/root-project/root/issues/10551:92,reliability,doe,does,92,"Teach `Vary` to accept `Report`; `Vary` should support `Report()` RDF action, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Filter([](int x) { return x > 5; }, {""x""}, ""before""). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Filter([](int x) { return x > 7; }, {""x""}, ""after""). .Report();. ROOT::RDF::Experimental::VariationsFor(h);. ```. CC: @eguiraud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10551
https://github.com/root-project/root/issues/10551:47,usability,support,support,47,"Teach `Vary` to accept `Report`; `Vary` should support `Report()` RDF action, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Filter([](int x) { return x > 5; }, {""x""}, ""before""). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Filter([](int x) { return x > 7; }, {""x""}, ""after""). .Report();. ROOT::RDF::Experimental::VariationsFor(h);. ```. CC: @eguiraud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10551
https://github.com/root-project/root/issues/10551:102,usability,Minim,Minimal,102,"Teach `Vary` to accept `Report`; `Vary` should support `Report()` RDF action, but currently does not. Minimal reproducer:. ```cpp. auto h = ROOT::RDataFrame(10). .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}). .Filter([](int x) { return x > 5; }, {""x""}, ""before""). .Vary(. ""x"",. [](int x) {. return ROOT::RVecI{x - 1, x + 1};. },. {""x""}, 2). .Filter([](int x) { return x > 7; }, {""x""}, ""after""). .Report();. ROOT::RDF::Experimental::VariationsFor(h);. ```. CC: @eguiraud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10551
https://github.com/root-project/root/pull/10552:58,interoperability,compatib,compatibility,58,"[RF] Add class rules for `RooCollectionProxy` for forward compatibility; In ROOT 6.28, some proxy classes were replaced:. `RooSetProxy` -> `RooCollectionProxy<RooArgSet>`. `RooListProxy` -> `RooCollectionProxy<RooListProxy>`. This breaks reading workspaces created with 6.28 by 6.26. Even though we generally don't guarantee forward compatibility, the. problem can be fixed easily in this case by adding a class rule to treat. the new class names as aliases for the old ones.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10552
https://github.com/root-project/root/pull/10552:92,interoperability,prox,proxy,92,"[RF] Add class rules for `RooCollectionProxy` for forward compatibility; In ROOT 6.28, some proxy classes were replaced:. `RooSetProxy` -> `RooCollectionProxy<RooArgSet>`. `RooListProxy` -> `RooCollectionProxy<RooListProxy>`. This breaks reading workspaces created with 6.28 by 6.26. Even though we generally don't guarantee forward compatibility, the. problem can be fixed easily in this case by adding a class rule to treat. the new class names as aliases for the old ones.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10552
https://github.com/root-project/root/pull/10552:333,interoperability,compatib,compatibility,333,"[RF] Add class rules for `RooCollectionProxy` for forward compatibility; In ROOT 6.28, some proxy classes were replaced:. `RooSetProxy` -> `RooCollectionProxy<RooArgSet>`. `RooListProxy` -> `RooCollectionProxy<RooListProxy>`. This breaks reading workspaces created with 6.28 by 6.26. Even though we generally don't guarantee forward compatibility, the. problem can be fixed easily in this case by adding a class rule to treat. the new class names as aliases for the old ones.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10552
https://github.com/root-project/root/pull/10553:245,deployability,observ,observations,245,"[RF] Correctly implement additional dataset feature in HistFactory; In HistFactory, the presence of a `Channel::GetAdditionalDatas` function. hinted to the possibility of defining additional datases for a. HistFactory model, besides the nominal observations dataset named. `""obsData""`. When reading a user-generated HistFactory XML, the additional datasets. were in fact read into the `Channel::fAdditionalData` member, and. corresponding RooDataSets were created in the per-channel proto. workspaces. However, when defining the Measurement object in C++ and dumping the XML. via `PrintXML`, the additional datasets were not considered. They were. also not considered when merging the datasets in the per-channel proto. workspaces into the simultaneous dataset. This commit suggests to. implement this correctly. Now, one can define additional datasets as follows in the XML:. ```xml. <Data HistoName=""data"" InputFile=""data/example.root"" HistoPath="""" Name=""addData""/>. ```. If there is no `Name` tag, the RooDataSet in the workspace will use the. `HistoName` as its name. In the touched code, some cleaning of commented out code and general code modernization is also suggested. Closes #10538.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10553
https://github.com/root-project/root/pull/10553:218,energy efficiency,model,model,218,"[RF] Correctly implement additional dataset feature in HistFactory; In HistFactory, the presence of a `Channel::GetAdditionalDatas` function. hinted to the possibility of defining additional datases for a. HistFactory model, besides the nominal observations dataset named. `""obsData""`. When reading a user-generated HistFactory XML, the additional datasets. were in fact read into the `Channel::fAdditionalData` member, and. corresponding RooDataSets were created in the per-channel proto. workspaces. However, when defining the Measurement object in C++ and dumping the XML. via `PrintXML`, the additional datasets were not considered. They were. also not considered when merging the datasets in the per-channel proto. workspaces into the simultaneous dataset. This commit suggests to. implement this correctly. Now, one can define additional datasets as follows in the XML:. ```xml. <Data HistoName=""data"" InputFile=""data/example.root"" HistoPath="""" Name=""addData""/>. ```. If there is no `Name` tag, the RooDataSet in the workspace will use the. `HistoName` as its name. In the touched code, some cleaning of commented out code and general code modernization is also suggested. Closes #10538.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10553
https://github.com/root-project/root/pull/10553:529,energy efficiency,Measur,Measurement,529,"[RF] Correctly implement additional dataset feature in HistFactory; In HistFactory, the presence of a `Channel::GetAdditionalDatas` function. hinted to the possibility of defining additional datases for a. HistFactory model, besides the nominal observations dataset named. `""obsData""`. When reading a user-generated HistFactory XML, the additional datasets. were in fact read into the `Channel::fAdditionalData` member, and. corresponding RooDataSets were created in the per-channel proto. workspaces. However, when defining the Measurement object in C++ and dumping the XML. via `PrintXML`, the additional datasets were not considered. They were. also not considered when merging the datasets in the per-channel proto. workspaces into the simultaneous dataset. This commit suggests to. implement this correctly. Now, one can define additional datasets as follows in the XML:. ```xml. <Data HistoName=""data"" InputFile=""data/example.root"" HistoPath="""" Name=""addData""/>. ```. If there is no `Name` tag, the RooDataSet in the workspace will use the. `HistoName` as its name. In the touched code, some cleaning of commented out code and general code modernization is also suggested. Closes #10538.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10553
https://github.com/root-project/root/pull/10553:328,interoperability,XML,XML,328,"[RF] Correctly implement additional dataset feature in HistFactory; In HistFactory, the presence of a `Channel::GetAdditionalDatas` function. hinted to the possibility of defining additional datases for a. HistFactory model, besides the nominal observations dataset named. `""obsData""`. When reading a user-generated HistFactory XML, the additional datasets. were in fact read into the `Channel::fAdditionalData` member, and. corresponding RooDataSets were created in the per-channel proto. workspaces. However, when defining the Measurement object in C++ and dumping the XML. via `PrintXML`, the additional datasets were not considered. They were. also not considered when merging the datasets in the per-channel proto. workspaces into the simultaneous dataset. This commit suggests to. implement this correctly. Now, one can define additional datasets as follows in the XML:. ```xml. <Data HistoName=""data"" InputFile=""data/example.root"" HistoPath="""" Name=""addData""/>. ```. If there is no `Name` tag, the RooDataSet in the workspace will use the. `HistoName` as its name. In the touched code, some cleaning of commented out code and general code modernization is also suggested. Closes #10538.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10553
https://github.com/root-project/root/pull/10553:571,interoperability,XML,XML,571,"[RF] Correctly implement additional dataset feature in HistFactory; In HistFactory, the presence of a `Channel::GetAdditionalDatas` function. hinted to the possibility of defining additional datases for a. HistFactory model, besides the nominal observations dataset named. `""obsData""`. When reading a user-generated HistFactory XML, the additional datasets. were in fact read into the `Channel::fAdditionalData` member, and. corresponding RooDataSets were created in the per-channel proto. workspaces. However, when defining the Measurement object in C++ and dumping the XML. via `PrintXML`, the additional datasets were not considered. They were. also not considered when merging the datasets in the per-channel proto. workspaces into the simultaneous dataset. This commit suggests to. implement this correctly. Now, one can define additional datasets as follows in the XML:. ```xml. <Data HistoName=""data"" InputFile=""data/example.root"" HistoPath="""" Name=""addData""/>. ```. If there is no `Name` tag, the RooDataSet in the workspace will use the. `HistoName` as its name. In the touched code, some cleaning of commented out code and general code modernization is also suggested. Closes #10538.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10553
https://github.com/root-project/root/pull/10553:871,interoperability,XML,XML,871,"[RF] Correctly implement additional dataset feature in HistFactory; In HistFactory, the presence of a `Channel::GetAdditionalDatas` function. hinted to the possibility of defining additional datases for a. HistFactory model, besides the nominal observations dataset named. `""obsData""`. When reading a user-generated HistFactory XML, the additional datasets. were in fact read into the `Channel::fAdditionalData` member, and. corresponding RooDataSets were created in the per-channel proto. workspaces. However, when defining the Measurement object in C++ and dumping the XML. via `PrintXML`, the additional datasets were not considered. They were. also not considered when merging the datasets in the per-channel proto. workspaces into the simultaneous dataset. This commit suggests to. implement this correctly. Now, one can define additional datasets as follows in the XML:. ```xml. <Data HistoName=""data"" InputFile=""data/example.root"" HistoPath="""" Name=""addData""/>. ```. If there is no `Name` tag, the RooDataSet in the workspace will use the. `HistoName` as its name. In the touched code, some cleaning of commented out code and general code modernization is also suggested. Closes #10538.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10553
https://github.com/root-project/root/pull/10553:880,interoperability,xml,xml,880,"[RF] Correctly implement additional dataset feature in HistFactory; In HistFactory, the presence of a `Channel::GetAdditionalDatas` function. hinted to the possibility of defining additional datases for a. HistFactory model, besides the nominal observations dataset named. `""obsData""`. When reading a user-generated HistFactory XML, the additional datasets. were in fact read into the `Channel::fAdditionalData` member, and. corresponding RooDataSets were created in the per-channel proto. workspaces. However, when defining the Measurement object in C++ and dumping the XML. via `PrintXML`, the additional datasets were not considered. They were. also not considered when merging the datasets in the per-channel proto. workspaces into the simultaneous dataset. This commit suggests to. implement this correctly. Now, one can define additional datasets as follows in the XML:. ```xml. <Data HistoName=""data"" InputFile=""data/example.root"" HistoPath="""" Name=""addData""/>. ```. If there is no `Name` tag, the RooDataSet in the workspace will use the. `HistoName` as its name. In the touched code, some cleaning of commented out code and general code modernization is also suggested. Closes #10538.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10553
https://github.com/root-project/root/pull/10553:908,safety,Input,InputFile,908,"[RF] Correctly implement additional dataset feature in HistFactory; In HistFactory, the presence of a `Channel::GetAdditionalDatas` function. hinted to the possibility of defining additional datases for a. HistFactory model, besides the nominal observations dataset named. `""obsData""`. When reading a user-generated HistFactory XML, the additional datasets. were in fact read into the `Channel::fAdditionalData` member, and. corresponding RooDataSets were created in the per-channel proto. workspaces. However, when defining the Measurement object in C++ and dumping the XML. via `PrintXML`, the additional datasets were not considered. They were. also not considered when merging the datasets in the per-channel proto. workspaces into the simultaneous dataset. This commit suggests to. implement this correctly. Now, one can define additional datasets as follows in the XML:. ```xml. <Data HistoName=""data"" InputFile=""data/example.root"" HistoPath="""" Name=""addData""/>. ```. If there is no `Name` tag, the RooDataSet in the workspace will use the. `HistoName` as its name. In the touched code, some cleaning of commented out code and general code modernization is also suggested. Closes #10538.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10553
https://github.com/root-project/root/pull/10553:218,security,model,model,218,"[RF] Correctly implement additional dataset feature in HistFactory; In HistFactory, the presence of a `Channel::GetAdditionalDatas` function. hinted to the possibility of defining additional datases for a. HistFactory model, besides the nominal observations dataset named. `""obsData""`. When reading a user-generated HistFactory XML, the additional datasets. were in fact read into the `Channel::fAdditionalData` member, and. corresponding RooDataSets were created in the per-channel proto. workspaces. However, when defining the Measurement object in C++ and dumping the XML. via `PrintXML`, the additional datasets were not considered. They were. also not considered when merging the datasets in the per-channel proto. workspaces into the simultaneous dataset. This commit suggests to. implement this correctly. Now, one can define additional datasets as follows in the XML:. ```xml. <Data HistoName=""data"" InputFile=""data/example.root"" HistoPath="""" Name=""addData""/>. ```. If there is no `Name` tag, the RooDataSet in the workspace will use the. `HistoName` as its name. In the touched code, some cleaning of commented out code and general code modernization is also suggested. Closes #10538.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10553
https://github.com/root-project/root/pull/10553:245,testability,observ,observations,245,"[RF] Correctly implement additional dataset feature in HistFactory; In HistFactory, the presence of a `Channel::GetAdditionalDatas` function. hinted to the possibility of defining additional datases for a. HistFactory model, besides the nominal observations dataset named. `""obsData""`. When reading a user-generated HistFactory XML, the additional datasets. were in fact read into the `Channel::fAdditionalData` member, and. corresponding RooDataSets were created in the per-channel proto. workspaces. However, when defining the Measurement object in C++ and dumping the XML. via `PrintXML`, the additional datasets were not considered. They were. also not considered when merging the datasets in the per-channel proto. workspaces into the simultaneous dataset. This commit suggests to. implement this correctly. Now, one can define additional datasets as follows in the XML:. ```xml. <Data HistoName=""data"" InputFile=""data/example.root"" HistoPath="""" Name=""addData""/>. ```. If there is no `Name` tag, the RooDataSet in the workspace will use the. `HistoName` as its name. In the touched code, some cleaning of commented out code and general code modernization is also suggested. Closes #10538.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10553
https://github.com/root-project/root/pull/10553:740,testability,simul,simultaneous,740,"[RF] Correctly implement additional dataset feature in HistFactory; In HistFactory, the presence of a `Channel::GetAdditionalDatas` function. hinted to the possibility of defining additional datases for a. HistFactory model, besides the nominal observations dataset named. `""obsData""`. When reading a user-generated HistFactory XML, the additional datasets. were in fact read into the `Channel::fAdditionalData` member, and. corresponding RooDataSets were created in the per-channel proto. workspaces. However, when defining the Measurement object in C++ and dumping the XML. via `PrintXML`, the additional datasets were not considered. They were. also not considered when merging the datasets in the per-channel proto. workspaces into the simultaneous dataset. This commit suggests to. implement this correctly. Now, one can define additional datasets as follows in the XML:. ```xml. <Data HistoName=""data"" InputFile=""data/example.root"" HistoPath="""" Name=""addData""/>. ```. If there is no `Name` tag, the RooDataSet in the workspace will use the. `HistoName` as its name. In the touched code, some cleaning of commented out code and general code modernization is also suggested. Closes #10538.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10553
https://github.com/root-project/root/pull/10553:142,usability,hint,hinted,142,"[RF] Correctly implement additional dataset feature in HistFactory; In HistFactory, the presence of a `Channel::GetAdditionalDatas` function. hinted to the possibility of defining additional datases for a. HistFactory model, besides the nominal observations dataset named. `""obsData""`. When reading a user-generated HistFactory XML, the additional datasets. were in fact read into the `Channel::fAdditionalData` member, and. corresponding RooDataSets were created in the per-channel proto. workspaces. However, when defining the Measurement object in C++ and dumping the XML. via `PrintXML`, the additional datasets were not considered. They were. also not considered when merging the datasets in the per-channel proto. workspaces into the simultaneous dataset. This commit suggests to. implement this correctly. Now, one can define additional datasets as follows in the XML:. ```xml. <Data HistoName=""data"" InputFile=""data/example.root"" HistoPath="""" Name=""addData""/>. ```. If there is no `Name` tag, the RooDataSet in the workspace will use the. `HistoName` as its name. In the touched code, some cleaning of commented out code and general code modernization is also suggested. Closes #10538.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10553
https://github.com/root-project/root/pull/10553:301,usability,user,user-generated,301,"[RF] Correctly implement additional dataset feature in HistFactory; In HistFactory, the presence of a `Channel::GetAdditionalDatas` function. hinted to the possibility of defining additional datases for a. HistFactory model, besides the nominal observations dataset named. `""obsData""`. When reading a user-generated HistFactory XML, the additional datasets. were in fact read into the `Channel::fAdditionalData` member, and. corresponding RooDataSets were created in the per-channel proto. workspaces. However, when defining the Measurement object in C++ and dumping the XML. via `PrintXML`, the additional datasets were not considered. They were. also not considered when merging the datasets in the per-channel proto. workspaces into the simultaneous dataset. This commit suggests to. implement this correctly. Now, one can define additional datasets as follows in the XML:. ```xml. <Data HistoName=""data"" InputFile=""data/example.root"" HistoPath="""" Name=""addData""/>. ```. If there is no `Name` tag, the RooDataSet in the workspace will use the. `HistoName` as its name. In the touched code, some cleaning of commented out code and general code modernization is also suggested. Closes #10538.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10553
https://github.com/root-project/root/pull/10553:908,usability,Input,InputFile,908,"[RF] Correctly implement additional dataset feature in HistFactory; In HistFactory, the presence of a `Channel::GetAdditionalDatas` function. hinted to the possibility of defining additional datases for a. HistFactory model, besides the nominal observations dataset named. `""obsData""`. When reading a user-generated HistFactory XML, the additional datasets. were in fact read into the `Channel::fAdditionalData` member, and. corresponding RooDataSets were created in the per-channel proto. workspaces. However, when defining the Measurement object in C++ and dumping the XML. via `PrintXML`, the additional datasets were not considered. They were. also not considered when merging the datasets in the per-channel proto. workspaces into the simultaneous dataset. This commit suggests to. implement this correctly. Now, one can define additional datasets as follows in the XML:. ```xml. <Data HistoName=""data"" InputFile=""data/example.root"" HistoPath="""" Name=""addData""/>. ```. If there is no `Name` tag, the RooDataSet in the workspace will use the. `HistoName` as its name. In the touched code, some cleaning of commented out code and general code modernization is also suggested. Closes #10538.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10553
https://github.com/root-project/root/pull/10553:1179,usability,Close,Closes,1179,"[RF] Correctly implement additional dataset feature in HistFactory; In HistFactory, the presence of a `Channel::GetAdditionalDatas` function. hinted to the possibility of defining additional datases for a. HistFactory model, besides the nominal observations dataset named. `""obsData""`. When reading a user-generated HistFactory XML, the additional datasets. were in fact read into the `Channel::fAdditionalData` member, and. corresponding RooDataSets were created in the per-channel proto. workspaces. However, when defining the Measurement object in C++ and dumping the XML. via `PrintXML`, the additional datasets were not considered. They were. also not considered when merging the datasets in the per-channel proto. workspaces into the simultaneous dataset. This commit suggests to. implement this correctly. Now, one can define additional datasets as follows in the XML:. ```xml. <Data HistoName=""data"" InputFile=""data/example.root"" HistoPath="""" Name=""addData""/>. ```. If there is no `Name` tag, the RooDataSet in the workspace will use the. `HistoName` as its name. In the touched code, some cleaning of commented out code and general code modernization is also suggested. Closes #10538.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10553
https://github.com/root-project/root/pull/10554:48,deployability,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 13; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10516. 2. https://github.com/root-project/root/pull/10525. 3. https://github.com/root-project/root/pull/10550.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10554
https://github.com/root-project/root/pull/10554:150,deployability,patch,patches,150,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 13; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10516. 2. https://github.com/root-project/root/pull/10525. 3. https://github.com/root-project/root/pull/10550.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10554
https://github.com/root-project/root/pull/10554:48,safety,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 13; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10516. 2. https://github.com/root-project/root/pull/10525. 3. https://github.com/root-project/root/pull/10550.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10554
https://github.com/root-project/root/pull/10554:150,safety,patch,patches,150,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 13; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10516. 2. https://github.com/root-project/root/pull/10525. 3. https://github.com/root-project/root/pull/10550.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10554
https://github.com/root-project/root/pull/10554:48,security,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 13; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10516. 2. https://github.com/root-project/root/pull/10525. 3. https://github.com/root-project/root/pull/10550.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10554
https://github.com/root-project/root/pull/10554:150,security,patch,patches,150,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 13; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10516. 2. https://github.com/root-project/root/pull/10525. 3. https://github.com/root-project/root/pull/10550.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10554
https://github.com/root-project/root/pull/10555:39,deployability,build,building,39,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:94,deployability,patch,patch,94,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:148,deployability,build,building,148,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:236,deployability,modul,modulemaps,236,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:247,deployability,fail,fails,247,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:638,deployability,updat,updated,638,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:236,modifiability,modul,modulemaps,236,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:247,reliability,fail,fails,247,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:94,safety,patch,patch,94,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:214,safety,valid,validation,214,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:236,safety,modul,modulemaps,236,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:608,safety,test,tested,608,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:638,safety,updat,updated,638,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:94,security,patch,patch,94,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:214,security,validat,validation,214,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:638,security,updat,updated,638,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:608,testability,test,tested,608,Fix running with macOS 12.0+ SDK after building with an older SDK; # This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the. validation of private modulemaps fails due to a change in layout. This. change disables the check when DisablePCHValidation is active. See these bug reports:. * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5. * https://github.com/conda-forge/root-feedstock/issues/149. * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/issues/10556:552,availability,ERROR,ERROR,552,"ROOT cannot read compiler includes when compiled with a ccache compiler wrapper ; As mentioned [here](https://github.com/root-project/root/commit/24a1193e66b2499940fb581acf0144228bfdcd6e#diff-e181029772a3e9aeffcda7614c4b0b4af48d409768e3c48b8077f245a78f38c9R200-R204) in some setups the compiler is actually a symlink to `ccache`. When ROOT is compiled with such a wrapper, it stores `ccache` as the compiler in `compiledata.h` (with `#define CLING_CXX_RLTV ""ccache ""`) and then ROOT cannot figure out compiler include paths at runtime:. ```sh. $ root. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C ccache -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. ------------------------------------------------------------------. | Welcome to ROOT 6.26/02 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 12 2022, 16:28:03 |. | From tags/v6-26-02@v6-26-02 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10556
https://github.com/root-project/root/issues/10556:72,integrability,wrap,wrapper,72,"ROOT cannot read compiler includes when compiled with a ccache compiler wrapper ; As mentioned [here](https://github.com/root-project/root/commit/24a1193e66b2499940fb581acf0144228bfdcd6e#diff-e181029772a3e9aeffcda7614c4b0b4af48d409768e3c48b8077f245a78f38c9R200-R204) in some setups the compiler is actually a symlink to `ccache`. When ROOT is compiled with such a wrapper, it stores `ccache` as the compiler in `compiledata.h` (with `#define CLING_CXX_RLTV ""ccache ""`) and then ROOT cannot figure out compiler include paths at runtime:. ```sh. $ root. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C ccache -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. ------------------------------------------------------------------. | Welcome to ROOT 6.26/02 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 12 2022, 16:28:03 |. | From tags/v6-26-02@v6-26-02 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10556
https://github.com/root-project/root/issues/10556:364,integrability,wrap,wrapper,364,"ROOT cannot read compiler includes when compiled with a ccache compiler wrapper ; As mentioned [here](https://github.com/root-project/root/commit/24a1193e66b2499940fb581acf0144228bfdcd6e#diff-e181029772a3e9aeffcda7614c4b0b4af48d409768e3c48b8077f245a78f38c9R200-R204) in some setups the compiler is actually a symlink to `ccache`. When ROOT is compiled with such a wrapper, it stores `ccache` as the compiler in `compiledata.h` (with `#define CLING_CXX_RLTV ""ccache ""`) and then ROOT cannot figure out compiler include paths at runtime:. ```sh. $ root. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C ccache -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. ------------------------------------------------------------------. | Welcome to ROOT 6.26/02 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 12 2022, 16:28:03 |. | From tags/v6-26-02@v6-26-02 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10556
https://github.com/root-project/root/issues/10556:72,interoperability,wrapper,wrapper,72,"ROOT cannot read compiler includes when compiled with a ccache compiler wrapper ; As mentioned [here](https://github.com/root-project/root/commit/24a1193e66b2499940fb581acf0144228bfdcd6e#diff-e181029772a3e9aeffcda7614c4b0b4af48d409768e3c48b8077f245a78f38c9R200-R204) in some setups the compiler is actually a symlink to `ccache`. When ROOT is compiled with such a wrapper, it stores `ccache` as the compiler in `compiledata.h` (with `#define CLING_CXX_RLTV ""ccache ""`) and then ROOT cannot figure out compiler include paths at runtime:. ```sh. $ root. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C ccache -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. ------------------------------------------------------------------. | Welcome to ROOT 6.26/02 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 12 2022, 16:28:03 |. | From tags/v6-26-02@v6-26-02 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10556
https://github.com/root-project/root/issues/10556:364,interoperability,wrapper,wrapper,364,"ROOT cannot read compiler includes when compiled with a ccache compiler wrapper ; As mentioned [here](https://github.com/root-project/root/commit/24a1193e66b2499940fb581acf0144228bfdcd6e#diff-e181029772a3e9aeffcda7614c4b0b4af48d409768e3c48b8077f245a78f38c9R200-R204) in some setups the compiler is actually a symlink to `ccache`. When ROOT is compiled with such a wrapper, it stores `ccache` as the compiler in `compiledata.h` (with `#define CLING_CXX_RLTV ""ccache ""`) and then ROOT cannot figure out compiler include paths at runtime:. ```sh. $ root. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C ccache -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. ------------------------------------------------------------------. | Welcome to ROOT 6.26/02 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 12 2022, 16:28:03 |. | From tags/v6-26-02@v6-26-02 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10556
https://github.com/root-project/root/issues/10556:606,interoperability,standard,standard,606,"ROOT cannot read compiler includes when compiled with a ccache compiler wrapper ; As mentioned [here](https://github.com/root-project/root/commit/24a1193e66b2499940fb581acf0144228bfdcd6e#diff-e181029772a3e9aeffcda7614c4b0b4af48d409768e3c48b8077f245a78f38c9R200-R204) in some setups the compiler is actually a symlink to `ccache`. When ROOT is compiled with such a wrapper, it stores `ccache` as the compiler in `compiledata.h` (with `#define CLING_CXX_RLTV ""ccache ""`) and then ROOT cannot figure out compiler include paths at runtime:. ```sh. $ root. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C ccache -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. ------------------------------------------------------------------. | Welcome to ROOT 6.26/02 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 12 2022, 16:28:03 |. | From tags/v6-26-02@v6-26-02 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10556
https://github.com/root-project/root/issues/10556:552,performance,ERROR,ERROR,552,"ROOT cannot read compiler includes when compiled with a ccache compiler wrapper ; As mentioned [here](https://github.com/root-project/root/commit/24a1193e66b2499940fb581acf0144228bfdcd6e#diff-e181029772a3e9aeffcda7614c4b0b4af48d409768e3c48b8077f245a78f38c9R200-R204) in some setups the compiler is actually a symlink to `ccache`. When ROOT is compiled with such a wrapper, it stores `ccache` as the compiler in `compiledata.h` (with `#define CLING_CXX_RLTV ""ccache ""`) and then ROOT cannot figure out compiler include paths at runtime:. ```sh. $ root. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C ccache -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. ------------------------------------------------------------------. | Welcome to ROOT 6.26/02 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 12 2022, 16:28:03 |. | From tags/v6-26-02@v6-26-02 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10556
https://github.com/root-project/root/issues/10556:552,safety,ERROR,ERROR,552,"ROOT cannot read compiler includes when compiled with a ccache compiler wrapper ; As mentioned [here](https://github.com/root-project/root/commit/24a1193e66b2499940fb581acf0144228bfdcd6e#diff-e181029772a3e9aeffcda7614c4b0b4af48d409768e3c48b8077f245a78f38c9R200-R204) in some setups the compiler is actually a symlink to `ccache`. When ROOT is compiled with such a wrapper, it stores `ccache` as the compiler in `compiledata.h` (with `#define CLING_CXX_RLTV ""ccache ""`) and then ROOT cannot figure out compiler include paths at runtime:. ```sh. $ root. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C ccache -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. ------------------------------------------------------------------. | Welcome to ROOT 6.26/02 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 12 2022, 16:28:03 |. | From tags/v6-26-02@v6-26-02 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10556
https://github.com/root-project/root/issues/10556:919,security,Team,Team,919,"ROOT cannot read compiler includes when compiled with a ccache compiler wrapper ; As mentioned [here](https://github.com/root-project/root/commit/24a1193e66b2499940fb581acf0144228bfdcd6e#diff-e181029772a3e9aeffcda7614c4b0b4af48d409768e3c48b8077f245a78f38c9R200-R204) in some setups the compiler is actually a symlink to `ccache`. When ROOT is compiled with such a wrapper, it stores `ccache` as the compiler in `compiledata.h` (with `#define CLING_CXX_RLTV ""ccache ""`) and then ROOT cannot figure out compiler include paths at runtime:. ```sh. $ root. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C ccache -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. ------------------------------------------------------------------. | Welcome to ROOT 6.26/02 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 12 2022, 16:28:03 |. | From tags/v6-26-02@v6-26-02 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10556
https://github.com/root-project/root/issues/10556:552,usability,ERROR,ERROR,552,"ROOT cannot read compiler includes when compiled with a ccache compiler wrapper ; As mentioned [here](https://github.com/root-project/root/commit/24a1193e66b2499940fb581acf0144228bfdcd6e#diff-e181029772a3e9aeffcda7614c4b0b4af48d409768e3c48b8077f245a78f38c9R200-R204) in some setups the compiler is actually a symlink to `ccache`. When ROOT is compiled with such a wrapper, it stores `ccache` as the compiler in `compiledata.h` (with `#define CLING_CXX_RLTV ""ccache ""`) and then ROOT cannot figure out compiler include paths at runtime:. ```sh. $ root. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C ccache -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. ------------------------------------------------------------------. | Welcome to ROOT 6.26/02 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 12 2022, 16:28:03 |. | From tags/v6-26-02@v6-26-02 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10556
https://github.com/root-project/root/issues/10556:1068,usability,help,help,1068,"ROOT cannot read compiler includes when compiled with a ccache compiler wrapper ; As mentioned [here](https://github.com/root-project/root/commit/24a1193e66b2499940fb581acf0144228bfdcd6e#diff-e181029772a3e9aeffcda7614c4b0b4af48d409768e3c48b8077f245a78f38c9R200-R204) in some setups the compiler is actually a symlink to `ccache`. When ROOT is compiled with such a wrapper, it stores `ccache` as the compiler in `compiledata.h` (with `#define CLING_CXX_RLTV ""ccache ""`) and then ROOT cannot figure out compiler include paths at runtime:. ```sh. $ root. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C ccache -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. ------------------------------------------------------------------. | Welcome to ROOT 6.26/02 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 12 2022, 16:28:03 |. | From tags/v6-26-02@v6-26-02 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10556
https://github.com/root-project/root/issues/10557:642,energy efficiency,model,model,642,"[RF] Inconsistent behavior of `RooAbsPdf::createChi2()` and `RooChi2Var`; ### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:. ```C++. model.createChi2(data);. RooChi2Var{""chi2"", ""chi2"", model, data};. ```. ### To Reproduce. ```C++. void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;. RooRealVar mean(""mean"",""mean"",5, 0, 10) ;. RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);. RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2. std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};. // Create chi2 variable directoy via constructor. RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results! chi21->Print();. chi22.Print();. auto minimize = [](RooAbsReal& real){. RooMinimizer m(real);. m.setPrintLevel(-1);. m.migrad();. m.hesse();. std::unique_ptr<RooFitResult> r{m.save()};. r->Print();. };. // Even the minimization results are different, also when correctly. // resetting the fit parameters in between fits. minimize(*chi21);. mean.setVal(5);. sigma.setVal(0.5);. mean.setError(0.0);. sigma.setError(0.0);. minimize(chi22);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10557
https://github.com/root-project/root/issues/10557:694,energy efficiency,model,model,694,"[RF] Inconsistent behavior of `RooAbsPdf::createChi2()` and `RooChi2Var`; ### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:. ```C++. model.createChi2(data);. RooChi2Var{""chi2"", ""chi2"", model, data};. ```. ### To Reproduce. ```C++. void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;. RooRealVar mean(""mean"",""mean"",5, 0, 10) ;. RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);. RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2. std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};. // Create chi2 variable directoy via constructor. RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results! chi21->Print();. chi22.Print();. auto minimize = [](RooAbsReal& real){. RooMinimizer m(real);. m.setPrintLevel(-1);. m.migrad();. m.hesse();. std::unique_ptr<RooFitResult> r{m.save()};. r->Print();. };. // Even the minimization results are different, also when correctly. // resetting the fit parameters in between fits. minimize(*chi21);. mean.setVal(5);. sigma.setVal(0.5);. mean.setError(0.0);. sigma.setError(0.0);. minimize(chi22);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10557
https://github.com/root-project/root/issues/10557:1029,modifiability,variab,variable,1029,"[RF] Inconsistent behavior of `RooAbsPdf::createChi2()` and `RooChi2Var`; ### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:. ```C++. model.createChi2(data);. RooChi2Var{""chi2"", ""chi2"", model, data};. ```. ### To Reproduce. ```C++. void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;. RooRealVar mean(""mean"",""mean"",5, 0, 10) ;. RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);. RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2. std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};. // Create chi2 variable directoy via constructor. RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results! chi21->Print();. chi22.Print();. auto minimize = [](RooAbsReal& real){. RooMinimizer m(real);. m.setPrintLevel(-1);. m.migrad();. m.hesse();. std::unique_ptr<RooFitResult> r{m.save()};. r->Print();. };. // Even the minimization results are different, also when correctly. // resetting the fit parameters in between fits. minimize(*chi21);. mean.setVal(5);. sigma.setVal(0.5);. mean.setError(0.0);. sigma.setError(0.0);. minimize(chi22);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10557
https://github.com/root-project/root/issues/10557:1139,modifiability,variab,variable,1139,"[RF] Inconsistent behavior of `RooAbsPdf::createChi2()` and `RooChi2Var`; ### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:. ```C++. model.createChi2(data);. RooChi2Var{""chi2"", ""chi2"", model, data};. ```. ### To Reproduce. ```C++. void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;. RooRealVar mean(""mean"",""mean"",5, 0, 10) ;. RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);. RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2. std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};. // Create chi2 variable directoy via constructor. RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results! chi21->Print();. chi22.Print();. auto minimize = [](RooAbsReal& real){. RooMinimizer m(real);. m.setPrintLevel(-1);. m.migrad();. m.hesse();. std::unique_ptr<RooFitResult> r{m.save()};. r->Print();. };. // Even the minimization results are different, also when correctly. // resetting the fit parameters in between fits. minimize(*chi21);. mean.setVal(5);. sigma.setVal(0.5);. mean.setError(0.0);. sigma.setError(0.0);. minimize(chi22);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10557
https://github.com/root-project/root/issues/10557:1549,modifiability,paramet,parameters,1549,"[RF] Inconsistent behavior of `RooAbsPdf::createChi2()` and `RooChi2Var`; ### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:. ```C++. model.createChi2(data);. RooChi2Var{""chi2"", ""chi2"", model, data};. ```. ### To Reproduce. ```C++. void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;. RooRealVar mean(""mean"",""mean"",5, 0, 10) ;. RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);. RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2. std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};. // Create chi2 variable directoy via constructor. RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results! chi21->Print();. chi22.Print();. auto minimize = [](RooAbsReal& real){. RooMinimizer m(real);. m.setPrintLevel(-1);. m.migrad();. m.hesse();. std::unique_ptr<RooFitResult> r{m.save()};. r->Print();. };. // Even the minimization results are different, also when correctly. // resetting the fit parameters in between fits. minimize(*chi21);. mean.setVal(5);. sigma.setVal(0.5);. mean.setError(0.0);. sigma.setError(0.0);. minimize(chi22);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10557
https://github.com/root-project/root/issues/10557:642,security,model,model,642,"[RF] Inconsistent behavior of `RooAbsPdf::createChi2()` and `RooChi2Var`; ### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:. ```C++. model.createChi2(data);. RooChi2Var{""chi2"", ""chi2"", model, data};. ```. ### To Reproduce. ```C++. void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;. RooRealVar mean(""mean"",""mean"",5, 0, 10) ;. RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);. RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2. std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};. // Create chi2 variable directoy via constructor. RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results! chi21->Print();. chi22.Print();. auto minimize = [](RooAbsReal& real){. RooMinimizer m(real);. m.setPrintLevel(-1);. m.migrad();. m.hesse();. std::unique_ptr<RooFitResult> r{m.save()};. r->Print();. };. // Even the minimization results are different, also when correctly. // resetting the fit parameters in between fits. minimize(*chi21);. mean.setVal(5);. sigma.setVal(0.5);. mean.setError(0.0);. sigma.setError(0.0);. minimize(chi22);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10557
https://github.com/root-project/root/issues/10557:694,security,model,model,694,"[RF] Inconsistent behavior of `RooAbsPdf::createChi2()` and `RooChi2Var`; ### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:. ```C++. model.createChi2(data);. RooChi2Var{""chi2"", ""chi2"", model, data};. ```. ### To Reproduce. ```C++. void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;. RooRealVar mean(""mean"",""mean"",5, 0, 10) ;. RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);. RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2. std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};. // Create chi2 variable directoy via constructor. RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results! chi21->Print();. chi22.Print();. auto minimize = [](RooAbsReal& real){. RooMinimizer m(real);. m.setPrintLevel(-1);. m.migrad();. m.hesse();. std::unique_ptr<RooFitResult> r{m.save()};. r->Print();. };. // Even the minimization results are different, also when correctly. // resetting the fit parameters in between fits. minimize(*chi21);. mean.setVal(5);. sigma.setVal(0.5);. mean.setError(0.0);. sigma.setError(0.0);. minimize(chi22);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10557
https://github.com/root-project/root/issues/10557:18,usability,behavi,behavior,18,"[RF] Inconsistent behavior of `RooAbsPdf::createChi2()` and `RooChi2Var`; ### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:. ```C++. model.createChi2(data);. RooChi2Var{""chi2"", ""chi2"", model, data};. ```. ### To Reproduce. ```C++. void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;. RooRealVar mean(""mean"",""mean"",5, 0, 10) ;. RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);. RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2. std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};. // Create chi2 variable directoy via constructor. RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results! chi21->Print();. chi22.Print();. auto minimize = [](RooAbsReal& real){. RooMinimizer m(real);. m.setPrintLevel(-1);. m.migrad();. m.hesse();. std::unique_ptr<RooFitResult> r{m.save()};. r->Print();. };. // Even the minimization results are different, also when correctly. // resetting the fit parameters in between fits. minimize(*chi21);. mean.setVal(5);. sigma.setVal(0.5);. mean.setError(0.0);. sigma.setError(0.0);. minimize(chi22);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10557
https://github.com/root-project/root/issues/10557:299,usability,Minim,Minimization,299,"[RF] Inconsistent behavior of `RooAbsPdf::createChi2()` and `RooChi2Var`; ### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:. ```C++. model.createChi2(data);. RooChi2Var{""chi2"", ""chi2"", model, data};. ```. ### To Reproduce. ```C++. void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;. RooRealVar mean(""mean"",""mean"",5, 0, 10) ;. RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);. RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2. std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};. // Create chi2 variable directoy via constructor. RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results! chi21->Print();. chi22.Print();. auto minimize = [](RooAbsReal& real){. RooMinimizer m(real);. m.setPrintLevel(-1);. m.migrad();. m.hesse();. std::unique_ptr<RooFitResult> r{m.save()};. r->Print();. };. // Even the minimization results are different, also when correctly. // resetting the fit parameters in between fits. minimize(*chi21);. mean.setVal(5);. sigma.setVal(0.5);. mean.setError(0.0);. sigma.setError(0.0);. minimize(chi22);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10557
https://github.com/root-project/root/issues/10557:431,usability,behavi,behavior,431,"[RF] Inconsistent behavior of `RooAbsPdf::createChi2()` and `RooChi2Var`; ### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:. ```C++. model.createChi2(data);. RooChi2Var{""chi2"", ""chi2"", model, data};. ```. ### To Reproduce. ```C++. void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;. RooRealVar mean(""mean"",""mean"",5, 0, 10) ;. RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);. RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2. std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};. // Create chi2 variable directoy via constructor. RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results! chi21->Print();. chi22.Print();. auto minimize = [](RooAbsReal& real){. RooMinimizer m(real);. m.setPrintLevel(-1);. m.migrad();. m.hesse();. std::unique_ptr<RooFitResult> r{m.save()};. r->Print();. };. // Even the minimization results are different, also when correctly. // resetting the fit parameters in between fits. minimize(*chi21);. mean.setVal(5);. sigma.setVal(0.5);. mean.setError(0.0);. sigma.setError(0.0);. minimize(chi22);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10557
https://github.com/root-project/root/issues/10557:1294,usability,minim,minimize,1294,"[RF] Inconsistent behavior of `RooAbsPdf::createChi2()` and `RooChi2Var`; ### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:. ```C++. model.createChi2(data);. RooChi2Var{""chi2"", ""chi2"", model, data};. ```. ### To Reproduce. ```C++. void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;. RooRealVar mean(""mean"",""mean"",5, 0, 10) ;. RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);. RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2. std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};. // Create chi2 variable directoy via constructor. RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results! chi21->Print();. chi22.Print();. auto minimize = [](RooAbsReal& real){. RooMinimizer m(real);. m.setPrintLevel(-1);. m.migrad();. m.hesse();. std::unique_ptr<RooFitResult> r{m.save()};. r->Print();. };. // Even the minimization results are different, also when correctly. // resetting the fit parameters in between fits. minimize(*chi21);. mean.setVal(5);. sigma.setVal(0.5);. mean.setError(0.0);. sigma.setError(0.0);. minimize(chi22);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10557
https://github.com/root-project/root/issues/10557:1471,usability,minim,minimization,1471,"[RF] Inconsistent behavior of `RooAbsPdf::createChi2()` and `RooChi2Var`; ### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:. ```C++. model.createChi2(data);. RooChi2Var{""chi2"", ""chi2"", model, data};. ```. ### To Reproduce. ```C++. void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;. RooRealVar mean(""mean"",""mean"",5, 0, 10) ;. RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);. RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2. std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};. // Create chi2 variable directoy via constructor. RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results! chi21->Print();. chi22.Print();. auto minimize = [](RooAbsReal& real){. RooMinimizer m(real);. m.setPrintLevel(-1);. m.migrad();. m.hesse();. std::unique_ptr<RooFitResult> r{m.save()};. r->Print();. };. // Even the minimization results are different, also when correctly. // resetting the fit parameters in between fits. minimize(*chi21);. mean.setVal(5);. sigma.setVal(0.5);. mean.setError(0.0);. sigma.setError(0.0);. minimize(chi22);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10557
https://github.com/root-project/root/issues/10557:1577,usability,minim,minimize,1577,"[RF] Inconsistent behavior of `RooAbsPdf::createChi2()` and `RooChi2Var`; ### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:. ```C++. model.createChi2(data);. RooChi2Var{""chi2"", ""chi2"", model, data};. ```. ### To Reproduce. ```C++. void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;. RooRealVar mean(""mean"",""mean"",5, 0, 10) ;. RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);. RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2. std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};. // Create chi2 variable directoy via constructor. RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results! chi21->Print();. chi22.Print();. auto minimize = [](RooAbsReal& real){. RooMinimizer m(real);. m.setPrintLevel(-1);. m.migrad();. m.hesse();. std::unique_ptr<RooFitResult> r{m.save()};. r->Print();. };. // Even the minimization results are different, also when correctly. // resetting the fit parameters in between fits. minimize(*chi21);. mean.setVal(5);. sigma.setVal(0.5);. mean.setError(0.0);. sigma.setError(0.0);. minimize(chi22);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10557
https://github.com/root-project/root/issues/10557:1676,usability,minim,minimize,1676,"[RF] Inconsistent behavior of `RooAbsPdf::createChi2()` and `RooChi2Var`; ### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:. ```C++. model.createChi2(data);. RooChi2Var{""chi2"", ""chi2"", model, data};. ```. ### To Reproduce. ```C++. void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;. RooRealVar mean(""mean"",""mean"",5, 0, 10) ;. RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);. RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2. std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};. // Create chi2 variable directoy via constructor. RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results! chi21->Print();. chi22.Print();. auto minimize = [](RooAbsReal& real){. RooMinimizer m(real);. m.setPrintLevel(-1);. m.migrad();. m.hesse();. std::unique_ptr<RooFitResult> r{m.save()};. r->Print();. };. // Even the minimization results are different, also when correctly. // resetting the fit parameters in between fits. minimize(*chi21);. mean.setVal(5);. sigma.setVal(0.5);. mean.setError(0.0);. sigma.setError(0.0);. minimize(chi22);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10557
https://github.com/root-project/root/pull/10558:696,integrability,Event,Events,696,"[ntuple] Improve ROOT file embedding; This PR splits the RNTuple anchor in a ROOT file in two classes: the `RFileNTupleAnchor` struct that is used by the RNTuple page storage low-level layer. And the user-facing `RNTuple` class. The `RNTuple` class is technically an anchor (identical persistent layout). To the user, it represents an (immutable) RNTuple data set in a ROOT file. It can create a page source from its information. The page source, in turn, can be used to create higher-level readers. In this PR, we add an `RNTupleReader::Open()` overload to open an RNTuple object. So you can now do. ```cpp. auto f = TFile::Open(""data.root"");. auto reader = RNTupleReader::Open(f->Get<RNTuple>(""Events""));. ```. In the same way, an RDF factory can be added later. . The PR also changes the order of keys written by the minifile writer to be aligned with TFile behavior. In particular, the key list and the streamer info are now written at the end of the file instead of at the beginning. See also #10559 (_not_ fixed by this PR). TODO:. - [x] Clean-up commit history. - [x] Fix clang-tidy issues",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10558
https://github.com/root-project/root/pull/10558:185,modifiability,layer,layer,185,"[ntuple] Improve ROOT file embedding; This PR splits the RNTuple anchor in a ROOT file in two classes: the `RFileNTupleAnchor` struct that is used by the RNTuple page storage low-level layer. And the user-facing `RNTuple` class. The `RNTuple` class is technically an anchor (identical persistent layout). To the user, it represents an (immutable) RNTuple data set in a ROOT file. It can create a page source from its information. The page source, in turn, can be used to create higher-level readers. In this PR, we add an `RNTupleReader::Open()` overload to open an RNTuple object. So you can now do. ```cpp. auto f = TFile::Open(""data.root"");. auto reader = RNTupleReader::Open(f->Get<RNTuple>(""Events""));. ```. In the same way, an RDF factory can be added later. . The PR also changes the order of keys written by the minifile writer to be aligned with TFile behavior. In particular, the key list and the streamer info are now written at the end of the file instead of at the beginning. See also #10559 (_not_ fixed by this PR). TODO:. - [x] Clean-up commit history. - [x] Fix clang-tidy issues",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10558
https://github.com/root-project/root/pull/10558:275,security,ident,identical,275,"[ntuple] Improve ROOT file embedding; This PR splits the RNTuple anchor in a ROOT file in two classes: the `RFileNTupleAnchor` struct that is used by the RNTuple page storage low-level layer. And the user-facing `RNTuple` class. The `RNTuple` class is technically an anchor (identical persistent layout). To the user, it represents an (immutable) RNTuple data set in a ROOT file. It can create a page source from its information. The page source, in turn, can be used to create higher-level readers. In this PR, we add an `RNTupleReader::Open()` overload to open an RNTuple object. So you can now do. ```cpp. auto f = TFile::Open(""data.root"");. auto reader = RNTupleReader::Open(f->Get<RNTuple>(""Events""));. ```. In the same way, an RDF factory can be added later. . The PR also changes the order of keys written by the minifile writer to be aligned with TFile behavior. In particular, the key list and the streamer info are now written at the end of the file instead of at the beginning. See also #10559 (_not_ fixed by this PR). TODO:. - [x] Clean-up commit history. - [x] Fix clang-tidy issues",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10558
https://github.com/root-project/root/pull/10558:336,security,immut,immutable,336,"[ntuple] Improve ROOT file embedding; This PR splits the RNTuple anchor in a ROOT file in two classes: the `RFileNTupleAnchor` struct that is used by the RNTuple page storage low-level layer. And the user-facing `RNTuple` class. The `RNTuple` class is technically an anchor (identical persistent layout). To the user, it represents an (immutable) RNTuple data set in a ROOT file. It can create a page source from its information. The page source, in turn, can be used to create higher-level readers. In this PR, we add an `RNTupleReader::Open()` overload to open an RNTuple object. So you can now do. ```cpp. auto f = TFile::Open(""data.root"");. auto reader = RNTupleReader::Open(f->Get<RNTuple>(""Events""));. ```. In the same way, an RDF factory can be added later. . The PR also changes the order of keys written by the minifile writer to be aligned with TFile behavior. In particular, the key list and the streamer info are now written at the end of the file instead of at the beginning. See also #10559 (_not_ fixed by this PR). TODO:. - [x] Clean-up commit history. - [x] Fix clang-tidy issues",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10558
https://github.com/root-project/root/pull/10558:200,usability,user,user-facing,200,"[ntuple] Improve ROOT file embedding; This PR splits the RNTuple anchor in a ROOT file in two classes: the `RFileNTupleAnchor` struct that is used by the RNTuple page storage low-level layer. And the user-facing `RNTuple` class. The `RNTuple` class is technically an anchor (identical persistent layout). To the user, it represents an (immutable) RNTuple data set in a ROOT file. It can create a page source from its information. The page source, in turn, can be used to create higher-level readers. In this PR, we add an `RNTupleReader::Open()` overload to open an RNTuple object. So you can now do. ```cpp. auto f = TFile::Open(""data.root"");. auto reader = RNTupleReader::Open(f->Get<RNTuple>(""Events""));. ```. In the same way, an RDF factory can be added later. . The PR also changes the order of keys written by the minifile writer to be aligned with TFile behavior. In particular, the key list and the streamer info are now written at the end of the file instead of at the beginning. See also #10559 (_not_ fixed by this PR). TODO:. - [x] Clean-up commit history. - [x] Fix clang-tidy issues",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10558
https://github.com/root-project/root/pull/10558:312,usability,user,user,312,"[ntuple] Improve ROOT file embedding; This PR splits the RNTuple anchor in a ROOT file in two classes: the `RFileNTupleAnchor` struct that is used by the RNTuple page storage low-level layer. And the user-facing `RNTuple` class. The `RNTuple` class is technically an anchor (identical persistent layout). To the user, it represents an (immutable) RNTuple data set in a ROOT file. It can create a page source from its information. The page source, in turn, can be used to create higher-level readers. In this PR, we add an `RNTupleReader::Open()` overload to open an RNTuple object. So you can now do. ```cpp. auto f = TFile::Open(""data.root"");. auto reader = RNTupleReader::Open(f->Get<RNTuple>(""Events""));. ```. In the same way, an RDF factory can be added later. . The PR also changes the order of keys written by the minifile writer to be aligned with TFile behavior. In particular, the key list and the streamer info are now written at the end of the file instead of at the beginning. See also #10559 (_not_ fixed by this PR). TODO:. - [x] Clean-up commit history. - [x] Fix clang-tidy issues",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10558
https://github.com/root-project/root/pull/10558:861,usability,behavi,behavior,861,"[ntuple] Improve ROOT file embedding; This PR splits the RNTuple anchor in a ROOT file in two classes: the `RFileNTupleAnchor` struct that is used by the RNTuple page storage low-level layer. And the user-facing `RNTuple` class. The `RNTuple` class is technically an anchor (identical persistent layout). To the user, it represents an (immutable) RNTuple data set in a ROOT file. It can create a page source from its information. The page source, in turn, can be used to create higher-level readers. In this PR, we add an `RNTupleReader::Open()` overload to open an RNTuple object. So you can now do. ```cpp. auto f = TFile::Open(""data.root"");. auto reader = RNTupleReader::Open(f->Get<RNTuple>(""Events""));. ```. In the same way, an RDF factory can be added later. . The PR also changes the order of keys written by the minifile writer to be aligned with TFile behavior. In particular, the key list and the streamer info are now written at the end of the file instead of at the beginning. See also #10559 (_not_ fixed by this PR). TODO:. - [x] Clean-up commit history. - [x] Fix clang-tidy issues",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10558
https://github.com/root-project/root/issues/10559:150,deployability,updat,update,150,"[ntuple] Fix low-level TFile embedding; RNTuple's minifile writer seems to create subtly corrupted ROOT files. If such a file is opened by `TFile` in update mode and reopened for reading, the map reads like. ```. 20220511/094820 At:100 N=104 TFile . 20320223/050248 At:204 N=68423 CX = -11523.26 . 20531200/160357 At:68627 N=14215937 CX = -24.78 . 20531200/160357 At:14284564 N=1 END . ```. On first sight, the file remains usable/readable though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10559
https://github.com/root-project/root/issues/10559:82,integrability,sub,subtly,82,"[ntuple] Fix low-level TFile embedding; RNTuple's minifile writer seems to create subtly corrupted ROOT files. If such a file is opened by `TFile` in update mode and reopened for reading, the map reads like. ```. 20220511/094820 At:100 N=104 TFile . 20320223/050248 At:204 N=68423 CX = -11523.26 . 20531200/160357 At:68627 N=14215937 CX = -24.78 . 20531200/160357 At:14284564 N=1 END . ```. On first sight, the file remains usable/readable though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10559
https://github.com/root-project/root/issues/10559:150,safety,updat,update,150,"[ntuple] Fix low-level TFile embedding; RNTuple's minifile writer seems to create subtly corrupted ROOT files. If such a file is opened by `TFile` in update mode and reopened for reading, the map reads like. ```. 20220511/094820 At:100 N=104 TFile . 20320223/050248 At:204 N=68423 CX = -11523.26 . 20531200/160357 At:68627 N=14215937 CX = -24.78 . 20531200/160357 At:14284564 N=1 END . ```. On first sight, the file remains usable/readable though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10559
https://github.com/root-project/root/issues/10559:150,security,updat,update,150,"[ntuple] Fix low-level TFile embedding; RNTuple's minifile writer seems to create subtly corrupted ROOT files. If such a file is opened by `TFile` in update mode and reopened for reading, the map reads like. ```. 20220511/094820 At:100 N=104 TFile . 20320223/050248 At:204 N=68423 CX = -11523.26 . 20531200/160357 At:68627 N=14215937 CX = -24.78 . 20531200/160357 At:14284564 N=1 END . ```. On first sight, the file remains usable/readable though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10559
https://github.com/root-project/root/issues/10559:424,usability,usab,usable,424,"[ntuple] Fix low-level TFile embedding; RNTuple's minifile writer seems to create subtly corrupted ROOT files. If such a file is opened by `TFile` in update mode and reopened for reading, the map reads like. ```. 20220511/094820 At:100 N=104 TFile . 20320223/050248 At:204 N=68423 CX = -11523.26 . 20531200/160357 At:68627 N=14215937 CX = -24.78 . 20531200/160357 At:14284564 N=1 END . ```. On first sight, the file remains usable/readable though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10559
https://github.com/root-project/root/pull/10560:9,deployability,depend,dependency,9,"Refactor dependency between head node and its backend; This class is not really needed, we can use free functions instead. This removes an implicit inter-dependency between the head node and the backend. Now it's only the head node that stores a reference to the backend needed to execute the graph, similarly to RLoopManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10560
https://github.com/root-project/root/pull/10560:154,deployability,depend,dependency,154,"Refactor dependency between head node and its backend; This class is not really needed, we can use free functions instead. This removes an implicit inter-dependency between the head node and the backend. Now it's only the head node that stores a reference to the backend needed to execute the graph, similarly to RLoopManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10560
https://github.com/root-project/root/pull/10560:9,integrability,depend,dependency,9,"Refactor dependency between head node and its backend; This class is not really needed, we can use free functions instead. This removes an implicit inter-dependency between the head node and the backend. Now it's only the head node that stores a reference to the backend needed to execute the graph, similarly to RLoopManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10560
https://github.com/root-project/root/pull/10560:154,integrability,depend,dependency,154,"Refactor dependency between head node and its backend; This class is not really needed, we can use free functions instead. This removes an implicit inter-dependency between the head node and the backend. Now it's only the head node that stores a reference to the backend needed to execute the graph, similarly to RLoopManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10560
https://github.com/root-project/root/pull/10560:0,modifiability,Refact,Refactor,0,"Refactor dependency between head node and its backend; This class is not really needed, we can use free functions instead. This removes an implicit inter-dependency between the head node and the backend. Now it's only the head node that stores a reference to the backend needed to execute the graph, similarly to RLoopManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10560
https://github.com/root-project/root/pull/10560:9,modifiability,depend,dependency,9,"Refactor dependency between head node and its backend; This class is not really needed, we can use free functions instead. This removes an implicit inter-dependency between the head node and the backend. Now it's only the head node that stores a reference to the backend needed to execute the graph, similarly to RLoopManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10560
https://github.com/root-project/root/pull/10560:154,modifiability,depend,dependency,154,"Refactor dependency between head node and its backend; This class is not really needed, we can use free functions instead. This removes an implicit inter-dependency between the head node and the backend. Now it's only the head node that stores a reference to the backend needed to execute the graph, similarly to RLoopManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10560
https://github.com/root-project/root/pull/10560:0,performance,Refactor,Refactor,0,"Refactor dependency between head node and its backend; This class is not really needed, we can use free functions instead. This removes an implicit inter-dependency between the head node and the backend. Now it's only the head node that stores a reference to the backend needed to execute the graph, similarly to RLoopManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10560
https://github.com/root-project/root/pull/10560:9,safety,depend,dependency,9,"Refactor dependency between head node and its backend; This class is not really needed, we can use free functions instead. This removes an implicit inter-dependency between the head node and the backend. Now it's only the head node that stores a reference to the backend needed to execute the graph, similarly to RLoopManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10560
https://github.com/root-project/root/pull/10560:154,safety,depend,dependency,154,"Refactor dependency between head node and its backend; This class is not really needed, we can use free functions instead. This removes an implicit inter-dependency between the head node and the backend. Now it's only the head node that stores a reference to the backend needed to execute the graph, similarly to RLoopManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10560
https://github.com/root-project/root/pull/10560:9,testability,depend,dependency,9,"Refactor dependency between head node and its backend; This class is not really needed, we can use free functions instead. This removes an implicit inter-dependency between the head node and the backend. Now it's only the head node that stores a reference to the backend needed to execute the graph, similarly to RLoopManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10560
https://github.com/root-project/root/pull/10560:154,testability,depend,dependency,154,"Refactor dependency between head node and its backend; This class is not really needed, we can use free functions instead. This removes an implicit inter-dependency between the head node and the backend. Now it's only the head node that stores a reference to the backend needed to execute the graph, similarly to RLoopManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10560
https://github.com/root-project/root/pull/10561:122,usability,Close,Closes,122,[cling] Do not throw CompilationExceptions on Apple M1; See https://github.com/root-project/root/issues/7541 for details. Closes #7744,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10561
https://github.com/root-project/root/pull/10562:697,deployability,configurat,configuration,697,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:944,deployability,configurat,configuration,944,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:1039,deployability,Configurat,Configuration,1039,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:39,energy efficiency,optim,optimization,39,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:262,energy efficiency,model,models,262,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:281,energy efficiency,model,models,281,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:480,energy efficiency,optim,optimization,480,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:783,energy efficiency,measur,measurement,783,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:1150,energy efficiency,measur,measurement,1150,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:216,integrability,event,event,216,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:697,integrability,configur,configuration,697,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:944,integrability,configur,configuration,944,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:1039,integrability,Configur,Configuration,1039,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:697,modifiability,configur,configuration,697,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:944,modifiability,configur,configuration,944,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:1039,modifiability,Configur,Configuration,1039,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:39,performance,optimiz,optimization,39,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:423,performance,time,time,423,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:480,performance,optimiz,optimization,480,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:852,reliability,doe,doesn,852,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:456,safety,test,tested,456,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:262,security,model,models,262,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:281,security,model,models,281,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:697,security,configur,configuration,697,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:944,security,configur,configuration,944,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:1039,security,Configur,Configuration,1039,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:456,testability,test,tested,456,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:371,usability,user,users,371,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:581,usability,command,command,581,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:860,usability,support,support,860,"[RF] Introducing binned likelihood fit optimization in HistFactory; In a binned likelihood fit, it is possible to skip the PDF normalization. when the unnormalized binned PDF can be interpreted directly in terms of. event yields. This is now done by default for models HistFactory models,. which results in great speedups for binned fits with many channels. Some. RooFit users like ATLAS were already using this for a long time, so this. feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,. add the `-disable_binned_fit_optimization` command line argument. Directly in C++, you can also set the `binnedFitOptimization` to `false`. in the HistFactory configuration as follows:. ```C++. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});. ```. If your compiler doesn't support aggregate initialization with designators, you. need to create and edit the configuration struct explicitely:. ```C++. RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;. hfCfg.binnedFitOptimization = false;. RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10563:130,usability,Close,Closes,130,"[cling] Do not throw CompilationExceptions on Apple M1 [v6.26]; See https://github.com/root-project/root/issues/7541 for details. Closes #10548, backport of #10561",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10563
https://github.com/root-project/root/pull/10564:130,usability,Close,Closes,130,"[cling] Do not throw CompilationExceptions on Apple M1 [v6.24]; See https://github.com/root-project/root/issues/7541 for details. Closes #10548, backport of #10561",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10564
https://github.com/root-project/root/pull/10566:536,availability,error,error,536,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:565,availability,error,errors,565,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:741,availability,error,error,741,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:1073,deployability,configurat,configuration,1073,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:580,energy efficiency,estimat,estimated,580,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:875,integrability,pub,public,875,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:882,integrability,interfac,interface,882,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:1024,integrability,interfac,interface,1024,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:1073,integrability,configur,configuration,1073,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:882,interoperability,interfac,interface,882,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:1024,interoperability,interfac,interface,1024,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:882,modifiability,interfac,interface,882,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:1024,modifiability,interfac,interface,1024,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:1073,modifiability,configur,configuration,1073,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:536,performance,error,error,536,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:565,performance,error,errors,565,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:741,performance,error,error,741,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:346,safety,test,test,346,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:536,safety,error,error,536,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:565,safety,error,errors,565,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:741,safety,error,error,741,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:1115,safety,compl,complained,1115,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:1073,security,configur,configuration,1073,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:1115,security,compl,complained,1115,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:346,testability,test,test,346,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:14,usability,command,command,14,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:263,usability,command,command,263,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:497,usability,command,command,497,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:536,usability,error,error,536,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:565,usability,error,errors,565,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:710,usability,command,command,710,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:741,usability,error,error,741,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:833,usability,command,command,833,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:1145,usability,Close,Closes,1145,"[RF] Make non-command arg constructors of `RooChi2Var` private; In the RooChi2Var, there was another case of inconsistency between. constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit. command arguments. However, there were also other constructors used by. the RooFit test statistic implementation details (i.e. in. `RooAbsOptTestStatistic::create`) that when used with default aruments. behave inconsistently with the command arg constructors: the default. error type is different, and errors will be estimated from the pdf and. not from the data. This lead to the confusing situation that when creates a `RooChi2Var`. without any command arguments, the default error mode is suddenly. different. This inconsistency should be removed by having only the. command argument constructors part of the public interface. Making these constructors private should not be a problem. There were. already considered implementaiton details before, and their interface. was already changed anyway to use the configuration structs in 6.26. Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10568:335,deployability,updat,updated,335,[hist][skip-ci] fix typo; . # This Pull request:. ## Changes or fixes:. Fix typo that was introduced somehow in this commit https://github.com/root-project/root/commit/2b2d5b0eeabf16e066afc74977bcdf2d0555ca59#diff-0c661946530c21785a5dc0df61c398cfacd526ab455b2acd7b9dc761e7b99bdfR275. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10568
https://github.com/root-project/root/pull/10568:305,safety,test,tested,305,[hist][skip-ci] fix typo; . # This Pull request:. ## Changes or fixes:. Fix typo that was introduced somehow in this commit https://github.com/root-project/root/commit/2b2d5b0eeabf16e066afc74977bcdf2d0555ca59#diff-0c661946530c21785a5dc0df61c398cfacd526ab455b2acd7b9dc761e7b99bdfR275. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10568
https://github.com/root-project/root/pull/10568:335,safety,updat,updated,335,[hist][skip-ci] fix typo; . # This Pull request:. ## Changes or fixes:. Fix typo that was introduced somehow in this commit https://github.com/root-project/root/commit/2b2d5b0eeabf16e066afc74977bcdf2d0555ca59#diff-0c661946530c21785a5dc0df61c398cfacd526ab455b2acd7b9dc761e7b99bdfR275. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10568
https://github.com/root-project/root/pull/10568:335,security,updat,updated,335,[hist][skip-ci] fix typo; . # This Pull request:. ## Changes or fixes:. Fix typo that was introduced somehow in this commit https://github.com/root-project/root/commit/2b2d5b0eeabf16e066afc74977bcdf2d0555ca59#diff-0c661946530c21785a5dc0df61c398cfacd526ab455b2acd7b9dc761e7b99bdfR275. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10568
https://github.com/root-project/root/pull/10568:305,testability,test,tested,305,[hist][skip-ci] fix typo; . # This Pull request:. ## Changes or fixes:. Fix typo that was introduced somehow in this commit https://github.com/root-project/root/commit/2b2d5b0eeabf16e066afc74977bcdf2d0555ca59#diff-0c661946530c21785a5dc0df61c398cfacd526ab455b2acd7b9dc761e7b99bdfR275. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10568
https://github.com/root-project/root/pull/10571:1,energy efficiency,core,core,1,[core] Avoid deprecated `std::iterator`; Deprecated `std::iterator` since C++17 is substituted in:. * `TViewPubFunctionsIter`. * `TBtreeIter`. * `TListIter`. * `TMapIter`. * `TObjArrayIter`. * `TOrdCollectionIter`. * `TRefArrayIter`. * `RIndexIter`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10571
https://github.com/root-project/root/pull/10571:83,integrability,sub,substituted,83,[core] Avoid deprecated `std::iterator`; Deprecated `std::iterator` since C++17 is substituted in:. * `TViewPubFunctionsIter`. * `TBtreeIter`. * `TListIter`. * `TMapIter`. * `TObjArrayIter`. * `TOrdCollectionIter`. * `TRefArrayIter`. * `RIndexIter`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10571
https://github.com/root-project/root/pull/10571:7,safety,Avoid,Avoid,7,[core] Avoid deprecated `std::iterator`; Deprecated `std::iterator` since C++17 is substituted in:. * `TViewPubFunctionsIter`. * `TBtreeIter`. * `TListIter`. * `TMapIter`. * `TObjArrayIter`. * `TOrdCollectionIter`. * `TRefArrayIter`. * `RIndexIter`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10571
https://github.com/root-project/root/issues/10572:4316,availability,Operat,Operating,4316,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:4391,availability,down,download,4391,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:843,deployability,Toolchain,Toolchains,843,"Compiler warnings on macOS; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:999,deployability,Toolchain,Toolchains,999,"iler warnings on macOS; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1124,deployability,Build,Building,1124,"t/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1384,deployability,Build,Building,1384,"### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1645,deployability,Build,Building,1645,"[-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2103,deployability,Build,Building,2103,"ols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2567,deployability,Build,Building,2567,"ed-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2ol",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2897,deployability,Build,Building,2897,"/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:4208,deployability,build,build,4208,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:4304,deployability,version,version,4304,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:4373,deployability,instal,install,4373,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:567,energy efficiency,core,core,567,"Compiler warnings on macOS; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1269,energy efficiency,cpu,cpuPin,1269," one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1330,energy efficiency,cpu,cpuPin,1330," instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3180,energy efficiency,draw,drawn,3180,"src/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3394,energy efficiency,draw,drawn,3394,"47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary downlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3608,energy efficiency,draw,drawn,3608,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3822,energy efficiency,draw,drawn,3822,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:4430,energy efficiency,Current,Current,4430,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:4304,integrability,version,version,4304,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:921,interoperability,Platform,PlatformWin,921,"Compiler warnings on macOS; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1077,interoperability,Platform,PlatformWin,1077," [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings gen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:522,modifiability,variab,variables,522,"Compiler warnings on macOS; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:615,modifiability,variab,variable,615,"Compiler warnings on macOS; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:667,modifiability,variab,variable,667,"Compiler warnings on macOS; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1259,modifiability,variab,variable,1259," you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not use",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1312,modifiability,variab,variable,1312,"sting report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1531,modifiability,variab,variable,1531,"macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1582,modifiability,variab,variable,1582,"System.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1775,modifiability,variab,variable,1775,"lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1827,modifiability,variab,variable,1827,"s/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1953,modifiability,variab,variable,1953,"Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2005,modifiability,variab,variable,2005,"/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2227,modifiability,variab,variable,2227,"Proof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2283,modifiability,variab,variable,2283,"t used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2410,modifiability,variab,variable,2410,"mage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2465,modifiability,variab,variable,2465,"rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2709,modifiability,variab,variable,2709,"/Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2764,modifiability,variab,variable,2764,"rning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3045,modifiability,variab,variable,3045,"ld,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that tri",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3098,modifiability,variab,variable,3098," Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3259,modifiability,variab,variable,3259,"d [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3312,modifiability,variab,variable,3312,"t, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3473,modifiability,variab,variable,3473,"nt_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3526,modifiability,variab,variable,3526,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3687,modifiability,variab,variable,3687,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3740,modifiability,variab,variable,3740,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:4304,modifiability,version,version,4304,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:824,performance,Content,Contents,824,"Compiler warnings on macOS; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:980,performance,Content,Contents,980,"Compiler warnings on macOS; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1269,performance,cpu,cpuPin,1269," one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1330,performance,cpu,cpuPin,1330," instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3160,safety,reme,remember,3160,".o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3374,safety,reme,remember,3374,"src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf insta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3588,safety,reme,remember,3588,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3802,safety,reme,remember,3802,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:4162,safety,input,input,4162,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:4461,testability,context,context,4461,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:4490,testability,context,context,4490,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:418,usability,clear,clear,418,"Compiler warnings on macOS; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:466,usability,behavi,behavior,466,"Compiler warnings on macOS; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:549,usability,User,Users,549,"Compiler warnings on macOS; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:843,usability,Tool,Toolchains,843,"Compiler warnings on macOS; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:999,usability,Tool,Toolchains,999,"iler warnings on macOS; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1196,usability,User,Users,1196,"s/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1463,usability,User,Users,1463,"behavior is. -->. Number of compiler warnings on unused variables on macOS:. ```. /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]. vm_size_t vsize, vprvt, rsize, size;. ^. 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1714,usability,User,Users,1714,". 1 warning generated. [6852/9530] Linking CXX static library lib/libclingUtils.a. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1892,usability,User,Users,1892,"file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols. [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2169,usability,User,Users,2169,".dir/src/TProof.cxx.o. /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]. Bool_t cpuPin = kFALSE;. ^. 1 warning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2352,usability,User,Users,2352,"rning generated. [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]. Display *disp;. ^. 1 warning generated. [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2626,usability,Menu,MenuLoader,2626,". [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2644,usability,User,Users,2644,"ilding CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2679,usability,Menu,MenuLoader,2679,"les/Gpad.dir/src/TPad.cxx.o. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warnin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2719,usability,menu,menuItem,2719,"/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2787,usability,menu,menuItem,2787," set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2844,usability,Minim,Minimize,2844,"n,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings gener",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2977,usability,User,Users,2977,"t used [-Wunused-but-set-variable]. Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;. ^. 2 warnings generated. [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Rep",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3191,usability,User,Users,3191,"/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3405,usability,User,Users,3405,": variable 'cpywidth' set but not used [-Wunused-but-set-variable]. Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3619,usability,User,Users,3619,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3872,usability,behavi,behavior,3872,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3890,usability,clear,clear,3890,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:4017,usability,behavi,behavior,4017,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:4162,usability,input,input,4162,"h;. ^. 2 warnings generated. [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ^. 1 warning generated. [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]. static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn. ^. 4 warnings generated. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No warnings. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Compile on macOS with Cocoa. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Current master. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/pull/10573:10,modifiability,scal,scaling,10,[TGL] Add scaling factor for TGLViewer axis guides.; Requested for the ANTS simulation toolkit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10573
https://github.com/root-project/root/pull/10573:76,testability,simul,simulation,76,[TGL] Add scaling factor for TGLViewer axis guides.; Requested for the ANTS simulation toolkit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10573
https://github.com/root-project/root/pull/10573:44,usability,guid,guides,44,[TGL] Add scaling factor for TGLViewer axis guides.; Requested for the ANTS simulation toolkit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10573
https://github.com/root-project/root/pull/10573:87,usability,tool,toolkit,87,[TGL] Add scaling factor for TGLViewer axis guides.; Requested for the ANTS simulation toolkit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10573
https://github.com/root-project/root/pull/10574:177,deployability,Build,Building,177,"remove unused variable warnings in macos cocoa; # This Pull request:. ## Changes or fixes:. some unused variables warnings in MacOs cocoa. I not sure how to fix this one:. ```. Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:527,deployability,updat,updated,527,"remove unused variable warnings in macos cocoa; # This Pull request:. ## Changes or fixes:. some unused variables warnings in MacOs cocoa. I not sure how to fix this one:. ```. Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:14,modifiability,variab,variable,14,"remove unused variable warnings in macos cocoa; # This Pull request:. ## Changes or fixes:. some unused variables warnings in MacOs cocoa. I not sure how to fix this one:. ```. Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:104,modifiability,variab,variables,104,"remove unused variable warnings in macos cocoa; # This Pull request:. ## Changes or fixes:. some unused variables warnings in MacOs cocoa. I not sure how to fix this one:. ```. Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:319,modifiability,variab,variable,319,"remove unused variable warnings in macos cocoa; # This Pull request:. ## Changes or fixes:. some unused variables warnings in MacOs cocoa. I not sure how to fix this one:. ```. Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:374,modifiability,variab,variable,374,"remove unused variable warnings in macos cocoa; # This Pull request:. ## Changes or fixes:. some unused variables warnings in MacOs cocoa. I not sure how to fix this one:. ```. Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:497,safety,test,tested,497,"remove unused variable warnings in macos cocoa; # This Pull request:. ## Changes or fixes:. some unused variables warnings in MacOs cocoa. I not sure how to fix this one:. ```. Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:527,safety,updat,updated,527,"remove unused variable warnings in macos cocoa; # This Pull request:. ## Changes or fixes:. some unused variables warnings in MacOs cocoa. I not sure how to fix this one:. ```. Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:527,security,updat,updated,527,"remove unused variable warnings in macos cocoa; # This Pull request:. ## Changes or fixes:. some unused variables warnings in MacOs cocoa. I not sure how to fix this one:. ```. Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:497,testability,test,tested,497,"remove unused variable warnings in macos cocoa; # This Pull request:. ## Changes or fixes:. some unused variables warnings in MacOs cocoa. I not sure how to fix this one:. ```. Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:236,usability,Menu,MenuLoader,236,"remove unused variable warnings in macos cocoa; # This Pull request:. ## Changes or fixes:. some unused variables warnings in MacOs cocoa. I not sure how to fix this one:. ```. Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:254,usability,User,Users,254,"remove unused variable warnings in macos cocoa; # This Pull request:. ## Changes or fixes:. some unused variables warnings in MacOs cocoa. I not sure how to fix this one:. ```. Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:289,usability,Menu,MenuLoader,289,"remove unused variable warnings in macos cocoa; # This Pull request:. ## Changes or fixes:. some unused variables warnings in MacOs cocoa. I not sure how to fix this one:. ```. Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:329,usability,menu,menuItem,329,"remove unused variable warnings in macos cocoa; # This Pull request:. ## Changes or fixes:. some unused variables warnings in MacOs cocoa. I not sure how to fix this one:. ```. Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:397,usability,menu,menuItem,397,"remove unused variable warnings in macos cocoa; # This Pull request:. ## Changes or fixes:. some unused variables warnings in MacOs cocoa. I not sure how to fix this one:. ```. Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:454,usability,Minim,Minimize,454,"remove unused variable warnings in macos cocoa; # This Pull request:. ## Changes or fixes:. some unused variables warnings in MacOs cocoa. I not sure how to fix this one:. ```. Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o. /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]. NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil). ```. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10576:456,availability,slo,slow,456,Minor Geometry optimization; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. . 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/pull/10576:197,deployability,build,building,197,Minor Geometry optimization; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. . 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/pull/10576:429,deployability,build,building,429,Minor Geometry optimization; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. . 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/pull/10576:683,deployability,updat,updated,683,Minor Geometry optimization; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. . 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/pull/10576:15,energy efficiency,optim,optimization,15,Minor Geometry optimization; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. . 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/pull/10576:178,energy efficiency,Profil,Profiling,178,Minor Geometry optimization; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. . 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/pull/10576:15,performance,optimiz,optimization,15,Minor Geometry optimization; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. . 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/pull/10576:178,performance,Profil,Profiling,178,Minor Geometry optimization; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. . 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/pull/10576:456,reliability,slo,slow,456,Minor Geometry optimization; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. . 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/pull/10576:138,safety,avoid,avoid,138,Minor Geometry optimization; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. . 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/pull/10576:653,safety,test,tested,653,Minor Geometry optimization; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. . 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/pull/10576:683,safety,updat,updated,683,Minor Geometry optimization; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. . 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/pull/10576:683,security,updat,updated,683,Minor Geometry optimization; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. . 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/pull/10576:653,testability,test,tested,653,Minor Geometry optimization; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. . 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/pull/10576:406,usability,navigat,navigation,406,Minor Geometry optimization; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. . 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/issues/10577:1131,availability,operat,operating,1131,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:11,deployability,integr,integral,11,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:250,deployability,integr,integral,250,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:389,deployability,Integr,Integral,389,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:426,deployability,integr,integral,426,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:504,deployability,Integr,Integral,504,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:591,deployability,Integr,Integral,591,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:715,deployability,integr,integral,715,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:793,deployability,integr,integral,793,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:819,deployability,depend,depend,819,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1029,deployability,version,versions,1029,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1053,deployability,fail,fails,1053,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1117,deployability,depend,depend,1117,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1266,deployability,version,versions,1266,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:11,integrability,integr,integral,11,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:250,integrability,integr,integral,250,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:389,integrability,Integr,Integral,389,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:426,integrability,integr,integral,426,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:504,integrability,Integr,Integral,504,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:591,integrability,Integr,Integral,591,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:715,integrability,integr,integral,715,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:793,integrability,integr,integral,793,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:819,integrability,depend,depend,819,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1029,integrability,version,versions,1029,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1117,integrability,depend,depend,1117,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1266,integrability,version,versions,1266,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:11,interoperability,integr,integral,11,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:250,interoperability,integr,integral,250,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:389,interoperability,Integr,Integral,389,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:426,interoperability,integr,integral,426,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:504,interoperability,Integr,Integral,504,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:591,interoperability,Integr,Integral,591,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:715,interoperability,integr,integral,715,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:793,interoperability,integr,integral,793,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:11,modifiability,integr,integral,11,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:250,modifiability,integr,integral,250,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:389,modifiability,Integr,Integral,389,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:426,modifiability,integr,integral,426,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:504,modifiability,Integr,Integral,504,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:591,modifiability,Integr,Integral,591,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:715,modifiability,integr,integral,715,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:793,modifiability,integr,integral,793,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:819,modifiability,depend,depend,819,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1029,modifiability,version,versions,1029,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1117,modifiability,depend,depend,1117,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1266,modifiability,version,versions,1266,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:62,performance,cach,caching,62,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:702,performance,cach,cache,702,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:11,reliability,integr,integral,11,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:250,reliability,integr,integral,250,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:389,reliability,Integr,Integral,389,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:426,reliability,integr,integral,426,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:504,reliability,Integr,Integral,504,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:591,reliability,Integr,Integral,591,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:715,reliability,integr,integral,715,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:793,reliability,integr,integral,793,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1053,reliability,fail,fails,1053,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1109,reliability,doe,doesn,1109,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:284,safety,test,test,284,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:625,safety,test,test,625,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:819,safety,depend,depend,819,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:958,safety,test,test,958,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1008,safety,test,test,1008,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1117,safety,depend,depend,1117,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1199,safety,test,test,1199,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:11,security,integr,integral,11,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:250,security,integr,integral,250,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:389,security,Integr,Integral,389,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:426,security,integr,integral,426,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:504,security,Integr,Integral,504,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:591,security,Integr,Integral,591,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:656,security,sign,signal,656,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:715,security,integr,integral,715,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:793,security,integr,integral,793,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:11,testability,integr,integral,11,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:250,testability,integr,integral,250,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:284,testability,test,test,284,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:389,testability,Integr,Integral,389,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:426,testability,integr,integral,426,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:504,testability,Integr,Integral,504,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:591,testability,Integr,Integral,591,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:625,testability,test,test,625,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:715,testability,integr,integral,715,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:793,testability,integr,integral,793,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:819,testability,depend,depend,819,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:958,testability,test,test,958,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1008,testability,test,test,1008,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1117,testability,depend,depend,1117,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1199,testability,test,test,1199,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1293,testability,context,context,1293,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:348,usability,user,user-created,348,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:779,usability,behavi,behavior,779,"[RF] Wrong integral value, possibly problems with some global caching; - [x] Checked for duplicates. It might be somehow associated with #7182. ### Describe the bug. In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior. The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce. Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup. The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10578:83,availability,error,error,83,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:172,availability,down,download-XROOTD,172,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:255,availability,down,downloaded,255,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:39,deployability,build,building,39,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:240,deployability,version,version,240,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:328,deployability,updat,updated,328,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:240,integrability,version,version,240,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:13,interoperability,Mismatch,Mismatch,13,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:240,modifiability,version,version,240,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:83,performance,error,error,83,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:194,reliability,doe,does,194,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:83,safety,error,error,83,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:328,safety,updat,updated,328,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:8,security,Hash,Hash,8,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:106,security,hash,hash,106,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:213,security,hash,hash,213,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:288,security,hardcod,hardcoded,288,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:298,security,hash,hash,298,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:328,security,updat,updated,328,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:83,usability,error,error,83,"SHA-256 Hash Mismatch for xrootd; When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/pull/10579:51,usability,user,users,51,[NFC][DF] Mention that RDataSource is for advanced users; ...and point to example implementations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10579
https://github.com/root-project/root/pull/10580:115,deployability,version,versions,115,"[ntuple] Remove pre-C++17 header guards; Since `ROOT::Experimental` moved to C++17, header guards for previous C++ versions are not required anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10580
https://github.com/root-project/root/pull/10580:115,integrability,version,versions,115,"[ntuple] Remove pre-C++17 header guards; Since `ROOT::Experimental` moved to C++17, header guards for previous C++ versions are not required anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10580
https://github.com/root-project/root/pull/10580:115,modifiability,version,versions,115,"[ntuple] Remove pre-C++17 header guards; Since `ROOT::Experimental` moved to C++17, header guards for previous C++ versions are not required anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10580
https://github.com/root-project/root/pull/10581:378,availability,Sla,SlaveBegin,378,"[tree] Return `const&` and not TString by value in TTreeDrawArgsParser; When the returned TString is directly a class member of. `TTreeDrawArgsParser`, a const reference can be returned instead of. making a copy. This fixes some warnings I spotted when compiling with gcc 12.1.0:. ```. root/proof/proofplayer/src/TProofDraw.cxx: In member function ‘virtual void TProofDrawHist::SlaveBegin(TTree*)’:. root/proof/proofplayer/src/TProofDraw.cxx:783:51: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {. | ~~~~~~^~~~~~~~~~~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:789:30: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found"". | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 790 | "" or it is not a histogram"", objname);. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:784:60: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));. | ~~~~~~~~~~~~~~~~~~^~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:783:38: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10581
https://github.com/root-project/root/pull/10581:989,availability,Sla,SlaveBegin,989,"[tree] Return `const&` and not TString by value in TTreeDrawArgsParser; When the returned TString is directly a class member of. `TTreeDrawArgsParser`, a const reference can be returned instead of. making a copy. This fixes some warnings I spotted when compiling with gcc 12.1.0:. ```. root/proof/proofplayer/src/TProofDraw.cxx: In member function ‘virtual void TProofDrawHist::SlaveBegin(TTree*)’:. root/proof/proofplayer/src/TProofDraw.cxx:783:51: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {. | ~~~~~~^~~~~~~~~~~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:789:30: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found"". | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 790 | "" or it is not a histogram"", objname);. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:784:60: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));. | ~~~~~~~~~~~~~~~~~~^~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:783:38: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10581
https://github.com/root-project/root/pull/10581:2288,interoperability,convers,conversion,2288,"dangling-pointer=]. 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {. | ~~~~~~^~~~~~~~~~~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:789:30: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found"". | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 790 | "" or it is not a histogram"", objname);. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:784:60: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));. | ~~~~~~~~~~~~~~~~~~^~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:783:38: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {. | ~~~~~~~~~~~~~~~~^~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. ```. Indeed, `GetObjectName()` returns a temporary `TString` here, and with. the implicit `const char*` conversion we get a dangling pointer to the. TString data. If we avoid the copy in `GetObjectName()` and company such that a `const&` is returned, we not only fix the dangling pointer problem but also avoid an unnecessary copy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10581
https://github.com/root-project/root/pull/10581:378,reliability,Sla,SlaveBegin,378,"[tree] Return `const&` and not TString by value in TTreeDrawArgsParser; When the returned TString is directly a class member of. `TTreeDrawArgsParser`, a const reference can be returned instead of. making a copy. This fixes some warnings I spotted when compiling with gcc 12.1.0:. ```. root/proof/proofplayer/src/TProofDraw.cxx: In member function ‘virtual void TProofDrawHist::SlaveBegin(TTree*)’:. root/proof/proofplayer/src/TProofDraw.cxx:783:51: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {. | ~~~~~~^~~~~~~~~~~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:789:30: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found"". | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 790 | "" or it is not a histogram"", objname);. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:784:60: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));. | ~~~~~~~~~~~~~~~~~~^~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:783:38: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10581
https://github.com/root-project/root/pull/10581:989,reliability,Sla,SlaveBegin,989,"[tree] Return `const&` and not TString by value in TTreeDrawArgsParser; When the returned TString is directly a class member of. `TTreeDrawArgsParser`, a const reference can be returned instead of. making a copy. This fixes some warnings I spotted when compiling with gcc 12.1.0:. ```. root/proof/proofplayer/src/TProofDraw.cxx: In member function ‘virtual void TProofDrawHist::SlaveBegin(TTree*)’:. root/proof/proofplayer/src/TProofDraw.cxx:783:51: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {. | ~~~~~~^~~~~~~~~~~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:789:30: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found"". | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 790 | "" or it is not a histogram"", objname);. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:784:60: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));. | ~~~~~~~~~~~~~~~~~~^~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:783:38: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10581
https://github.com/root-project/root/pull/10581:2353,safety,avoid,avoid,2353,"dangling-pointer=]. 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {. | ~~~~~~^~~~~~~~~~~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:789:30: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found"". | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 790 | "" or it is not a histogram"", objname);. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:784:60: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));. | ~~~~~~~~~~~~~~~~~~^~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:783:38: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {. | ~~~~~~~~~~~~~~~~^~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. ```. Indeed, `GetObjectName()` returns a temporary `TString` here, and with. the implicit `const char*` conversion we get a dangling pointer to the. TString data. If we avoid the copy in `GetObjectName()` and company such that a `const&` is returned, we not only fix the dangling pointer problem but also avoid an unnecessary copy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10581
https://github.com/root-project/root/pull/10581:2489,safety,avoid,avoid,2489,"dangling-pointer=]. 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {. | ~~~~~~^~~~~~~~~~~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:789:30: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found"". | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 790 | "" or it is not a histogram"", objname);. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:784:60: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));. | ~~~~~~~~~~~~~~~~~~^~~~~~~~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~. root/proof/proofplayer/src/TProofDraw.cxx:783:38: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]. 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {. | ~~~~~~~~~~~~~~~~^~~. root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here. 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();. ```. Indeed, `GetObjectName()` returns a temporary `TString` here, and with. the implicit `const char*` conversion we get a dangling pointer to the. TString data. If we avoid the copy in `GetObjectName()` and company such that a `const&` is returned, we not only fix the dangling pointer problem but also avoid an unnecessary copy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10581
https://github.com/root-project/root/pull/10582:196,availability,error,errors,196,"[math] Avoid warnings about deleting unallocated objects in `TDecompLU`; The logic in `TDecompLU` where a separate `bool` was tracking if a given. pointer should be ""deleted"" caused some compiler errors warnings like:. ```. root/math/matrix/src/TDecompLU.cxx: In static member function ‘static Bool_t TDecompLU::InvertLU(TMatrixD&, Double_t, Double_t*)’:. root/math/matrix/src/TDecompLU.cxx:883:17: warning: ‘void operator delete [](void*)’ called on unallocated object ‘workd’ [-Wfree-nonheap-object]. 883 | delete [] pWorkd;. | ^~~~~~. root/src/root/math/matrix/src/TDecompLU.cxx:847:13: note: declared here. 847 | Double_t workd[kWorkMax];. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10582
https://github.com/root-project/root/pull/10582:414,availability,operat,operator,414,"[math] Avoid warnings about deleting unallocated objects in `TDecompLU`; The logic in `TDecompLU` where a separate `bool` was tracking if a given. pointer should be ""deleted"" caused some compiler errors warnings like:. ```. root/math/matrix/src/TDecompLU.cxx: In static member function ‘static Bool_t TDecompLU::InvertLU(TMatrixD&, Double_t, Double_t*)’:. root/math/matrix/src/TDecompLU.cxx:883:17: warning: ‘void operator delete [](void*)’ called on unallocated object ‘workd’ [-Wfree-nonheap-object]. 883 | delete [] pWorkd;. | ^~~~~~. root/src/root/math/matrix/src/TDecompLU.cxx:847:13: note: declared here. 847 | Double_t workd[kWorkMax];. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10582
https://github.com/root-project/root/pull/10582:77,deployability,log,logic,77,"[math] Avoid warnings about deleting unallocated objects in `TDecompLU`; The logic in `TDecompLU` where a separate `bool` was tracking if a given. pointer should be ""deleted"" caused some compiler errors warnings like:. ```. root/math/matrix/src/TDecompLU.cxx: In static member function ‘static Bool_t TDecompLU::InvertLU(TMatrixD&, Double_t, Double_t*)’:. root/math/matrix/src/TDecompLU.cxx:883:17: warning: ‘void operator delete [](void*)’ called on unallocated object ‘workd’ [-Wfree-nonheap-object]. 883 | delete [] pWorkd;. | ^~~~~~. root/src/root/math/matrix/src/TDecompLU.cxx:847:13: note: declared here. 847 | Double_t workd[kWorkMax];. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10582
https://github.com/root-project/root/pull/10582:196,performance,error,errors,196,"[math] Avoid warnings about deleting unallocated objects in `TDecompLU`; The logic in `TDecompLU` where a separate `bool` was tracking if a given. pointer should be ""deleted"" caused some compiler errors warnings like:. ```. root/math/matrix/src/TDecompLU.cxx: In static member function ‘static Bool_t TDecompLU::InvertLU(TMatrixD&, Double_t, Double_t*)’:. root/math/matrix/src/TDecompLU.cxx:883:17: warning: ‘void operator delete [](void*)’ called on unallocated object ‘workd’ [-Wfree-nonheap-object]. 883 | delete [] pWorkd;. | ^~~~~~. root/src/root/math/matrix/src/TDecompLU.cxx:847:13: note: declared here. 847 | Double_t workd[kWorkMax];. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10582
https://github.com/root-project/root/pull/10582:7,safety,Avoid,Avoid,7,"[math] Avoid warnings about deleting unallocated objects in `TDecompLU`; The logic in `TDecompLU` where a separate `bool` was tracking if a given. pointer should be ""deleted"" caused some compiler errors warnings like:. ```. root/math/matrix/src/TDecompLU.cxx: In static member function ‘static Bool_t TDecompLU::InvertLU(TMatrixD&, Double_t, Double_t*)’:. root/math/matrix/src/TDecompLU.cxx:883:17: warning: ‘void operator delete [](void*)’ called on unallocated object ‘workd’ [-Wfree-nonheap-object]. 883 | delete [] pWorkd;. | ^~~~~~. root/src/root/math/matrix/src/TDecompLU.cxx:847:13: note: declared here. 847 | Double_t workd[kWorkMax];. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10582
https://github.com/root-project/root/pull/10582:77,safety,log,logic,77,"[math] Avoid warnings about deleting unallocated objects in `TDecompLU`; The logic in `TDecompLU` where a separate `bool` was tracking if a given. pointer should be ""deleted"" caused some compiler errors warnings like:. ```. root/math/matrix/src/TDecompLU.cxx: In static member function ‘static Bool_t TDecompLU::InvertLU(TMatrixD&, Double_t, Double_t*)’:. root/math/matrix/src/TDecompLU.cxx:883:17: warning: ‘void operator delete [](void*)’ called on unallocated object ‘workd’ [-Wfree-nonheap-object]. 883 | delete [] pWorkd;. | ^~~~~~. root/src/root/math/matrix/src/TDecompLU.cxx:847:13: note: declared here. 847 | Double_t workd[kWorkMax];. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10582
https://github.com/root-project/root/pull/10582:196,safety,error,errors,196,"[math] Avoid warnings about deleting unallocated objects in `TDecompLU`; The logic in `TDecompLU` where a separate `bool` was tracking if a given. pointer should be ""deleted"" caused some compiler errors warnings like:. ```. root/math/matrix/src/TDecompLU.cxx: In static member function ‘static Bool_t TDecompLU::InvertLU(TMatrixD&, Double_t, Double_t*)’:. root/math/matrix/src/TDecompLU.cxx:883:17: warning: ‘void operator delete [](void*)’ called on unallocated object ‘workd’ [-Wfree-nonheap-object]. 883 | delete [] pWorkd;. | ^~~~~~. root/src/root/math/matrix/src/TDecompLU.cxx:847:13: note: declared here. 847 | Double_t workd[kWorkMax];. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10582
https://github.com/root-project/root/pull/10582:77,security,log,logic,77,"[math] Avoid warnings about deleting unallocated objects in `TDecompLU`; The logic in `TDecompLU` where a separate `bool` was tracking if a given. pointer should be ""deleted"" caused some compiler errors warnings like:. ```. root/math/matrix/src/TDecompLU.cxx: In static member function ‘static Bool_t TDecompLU::InvertLU(TMatrixD&, Double_t, Double_t*)’:. root/math/matrix/src/TDecompLU.cxx:883:17: warning: ‘void operator delete [](void*)’ called on unallocated object ‘workd’ [-Wfree-nonheap-object]. 883 | delete [] pWorkd;. | ^~~~~~. root/src/root/math/matrix/src/TDecompLU.cxx:847:13: note: declared here. 847 | Double_t workd[kWorkMax];. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10582
https://github.com/root-project/root/pull/10582:77,testability,log,logic,77,"[math] Avoid warnings about deleting unallocated objects in `TDecompLU`; The logic in `TDecompLU` where a separate `bool` was tracking if a given. pointer should be ""deleted"" caused some compiler errors warnings like:. ```. root/math/matrix/src/TDecompLU.cxx: In static member function ‘static Bool_t TDecompLU::InvertLU(TMatrixD&, Double_t, Double_t*)’:. root/math/matrix/src/TDecompLU.cxx:883:17: warning: ‘void operator delete [](void*)’ called on unallocated object ‘workd’ [-Wfree-nonheap-object]. 883 | delete [] pWorkd;. | ^~~~~~. root/src/root/math/matrix/src/TDecompLU.cxx:847:13: note: declared here. 847 | Double_t workd[kWorkMax];. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10582
https://github.com/root-project/root/pull/10582:196,usability,error,errors,196,"[math] Avoid warnings about deleting unallocated objects in `TDecompLU`; The logic in `TDecompLU` where a separate `bool` was tracking if a given. pointer should be ""deleted"" caused some compiler errors warnings like:. ```. root/math/matrix/src/TDecompLU.cxx: In static member function ‘static Bool_t TDecompLU::InvertLU(TMatrixD&, Double_t, Double_t*)’:. root/math/matrix/src/TDecompLU.cxx:883:17: warning: ‘void operator delete [](void*)’ called on unallocated object ‘workd’ [-Wfree-nonheap-object]. 883 | delete [] pWorkd;. | ^~~~~~. root/src/root/math/matrix/src/TDecompLU.cxx:847:13: note: declared here. 847 | Double_t workd[kWorkMax];. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10582
https://github.com/root-project/root/pull/10583:66,safety,compl,complicated,66,"[DF] Fix documentation of two Vary overloads; The git diff looks ""complicated"" but I actually just swapped which. function corresponds to which docstring. This should effectively. be a non-functional change. Fixes the wrong docs at https://root.cern.ch/doc/master/classROOT_1_1RDF_1_1RInterface.html#a18ce8fb41d50fe364abe921d07ab70c1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10583
https://github.com/root-project/root/pull/10583:66,security,compl,complicated,66,"[DF] Fix documentation of two Vary overloads; The git diff looks ""complicated"" but I actually just swapped which. function corresponds to which docstring. This should effectively. be a non-functional change. Fixes the wrong docs at https://root.cern.ch/doc/master/classROOT_1_1RDF_1_1RInterface.html#a18ce8fb41d50fe364abe921d07ab70c1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10583
https://github.com/root-project/root/pull/10583:9,usability,document,documentation,9,"[DF] Fix documentation of two Vary overloads; The git diff looks ""complicated"" but I actually just swapped which. function corresponds to which docstring. This should effectively. be a non-functional change. Fixes the wrong docs at https://root.cern.ch/doc/master/classROOT_1_1RDF_1_1RInterface.html#a18ce8fb41d50fe364abe921d07ab70c1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10583
https://github.com/root-project/root/pull/10583:167,usability,effectiv,effectively,167,"[DF] Fix documentation of two Vary overloads; The git diff looks ""complicated"" but I actually just swapped which. function corresponds to which docstring. This should effectively. be a non-functional change. Fixes the wrong docs at https://root.cern.ch/doc/master/classROOT_1_1RDF_1_1RInterface.html#a18ce8fb41d50fe364abe921d07ab70c1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10583
https://github.com/root-project/root/pull/10584:33,energy efficiency,current,current,33,"Implement the option ""File""; The current file name is painted on the bottom right of each plot if. the option `File` is set on via `gStyle->SetOptFile()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10584
https://github.com/root-project/root/pull/10585:87,availability,down,downloading,87,"[cmake] Use lcgpackages@cern, rather than unstable github:; hashes are not stable when downloading release sources from github, see. https://security.stackexchange.com/a/240209. https://github.com/root-project/root/issues/10503.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10585
https://github.com/root-project/root/pull/10585:99,deployability,releas,release,99,"[cmake] Use lcgpackages@cern, rather than unstable github:; hashes are not stable when downloading release sources from github, see. https://security.stackexchange.com/a/240209. https://github.com/root-project/root/issues/10503.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10585
https://github.com/root-project/root/pull/10585:150,deployability,stack,stackexchange,150,"[cmake] Use lcgpackages@cern, rather than unstable github:; hashes are not stable when downloading release sources from github, see. https://security.stackexchange.com/a/240209. https://github.com/root-project/root/issues/10503.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10585
https://github.com/root-project/root/pull/10585:60,security,hash,hashes,60,"[cmake] Use lcgpackages@cern, rather than unstable github:; hashes are not stable when downloading release sources from github, see. https://security.stackexchange.com/a/240209. https://github.com/root-project/root/issues/10503.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10585
https://github.com/root-project/root/pull/10585:141,security,secur,security,141,"[cmake] Use lcgpackages@cern, rather than unstable github:; hashes are not stable when downloading release sources from github, see. https://security.stackexchange.com/a/240209. https://github.com/root-project/root/issues/10503.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10585
https://github.com/root-project/root/issues/10586:803,availability,Operat,Operating,803,"[TMVA][SOFIE]Generated headers are missing include guards; - [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process. While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce. E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`. 2. Operating system: CentOS7. 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10586
https://github.com/root-project/root/issues/10586:781,deployability,version,version,781,"[TMVA][SOFIE]Generated headers are missing include guards; - [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process. While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce. E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`. 2. Operating system: CentOS7. 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10586
https://github.com/root-project/root/issues/10586:127,energy efficiency,model,models,127,"[TMVA][SOFIE]Generated headers are missing include guards; - [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process. While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce. E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`. 2. Operating system: CentOS7. 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10586
https://github.com/root-project/root/issues/10586:235,energy efficiency,load,loading,235,"[TMVA][SOFIE]Generated headers are missing include guards; - [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process. While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce. E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`. 2. Operating system: CentOS7. 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10586
https://github.com/root-project/root/issues/10586:252,energy efficiency,model,model,252,"[TMVA][SOFIE]Generated headers are missing include guards; - [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process. While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce. E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`. 2. Operating system: CentOS7. 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10586
https://github.com/root-project/root/issues/10586:781,integrability,version,version,781,"[TMVA][SOFIE]Generated headers are missing include guards; - [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process. While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce. E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`. 2. Operating system: CentOS7. 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10586
https://github.com/root-project/root/issues/10586:781,modifiability,version,version,781,"[TMVA][SOFIE]Generated headers are missing include guards; - [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process. While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce. E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`. 2. Operating system: CentOS7. 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10586
https://github.com/root-project/root/issues/10586:235,performance,load,loading,235,"[TMVA][SOFIE]Generated headers are missing include guards; - [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process. While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce. E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`. 2. Operating system: CentOS7. 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10586
https://github.com/root-project/root/issues/10586:127,security,model,models,127,"[TMVA][SOFIE]Generated headers are missing include guards; - [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process. While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce. E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`. 2. Operating system: CentOS7. 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10586
https://github.com/root-project/root/issues/10586:252,security,model,model,252,"[TMVA][SOFIE]Generated headers are missing include guards; - [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process. While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce. E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`. 2. Operating system: CentOS7. 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10586
https://github.com/root-project/root/issues/10586:889,testability,context,context,889,"[TMVA][SOFIE]Generated headers are missing include guards; - [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process. While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce. E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`. 2. Operating system: CentOS7. 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10586
https://github.com/root-project/root/issues/10586:507,usability,user,user-friendly,507,"[TMVA][SOFIE]Generated headers are missing include guards; - [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process. While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce. E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`. 2. Operating system: CentOS7. 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10586
https://github.com/root-project/root/pull/10588:198,deployability,depend,depending,198,"Simple TGraph ctor; - In matplolib one can use the ""Default X-Points"" feature to plot X/Y graphs: If one do not. specify the points in the x-axis, they will get the default values 0, 1, 2, 3, (etc. depending. on the length of the y-points). The matplotlib script will be:. ```. import matplotlib.pyplot as plt. import numpy as np. points = np.array([3, 8, 1, 10, 5, 7]). plt.plot(ypoints). plt. show(). ```. It is now possible to do the same with the ROOt TGraph:. ```. double y[6] = {3, 8, 1, 10, 5, 7};. auto g = new TGraph(6,y);. g->Draw();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10588
https://github.com/root-project/root/pull/10588:536,energy efficiency,Draw,Draw,536,"Simple TGraph ctor; - In matplolib one can use the ""Default X-Points"" feature to plot X/Y graphs: If one do not. specify the points in the x-axis, they will get the default values 0, 1, 2, 3, (etc. depending. on the length of the y-points). The matplotlib script will be:. ```. import matplotlib.pyplot as plt. import numpy as np. points = np.array([3, 8, 1, 10, 5, 7]). plt.plot(ypoints). plt. show(). ```. It is now possible to do the same with the ROOt TGraph:. ```. double y[6] = {3, 8, 1, 10, 5, 7};. auto g = new TGraph(6,y);. g->Draw();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10588
https://github.com/root-project/root/pull/10588:198,integrability,depend,depending,198,"Simple TGraph ctor; - In matplolib one can use the ""Default X-Points"" feature to plot X/Y graphs: If one do not. specify the points in the x-axis, they will get the default values 0, 1, 2, 3, (etc. depending. on the length of the y-points). The matplotlib script will be:. ```. import matplotlib.pyplot as plt. import numpy as np. points = np.array([3, 8, 1, 10, 5, 7]). plt.plot(ypoints). plt. show(). ```. It is now possible to do the same with the ROOt TGraph:. ```. double y[6] = {3, 8, 1, 10, 5, 7};. auto g = new TGraph(6,y);. g->Draw();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10588
https://github.com/root-project/root/pull/10588:113,interoperability,specif,specify,113,"Simple TGraph ctor; - In matplolib one can use the ""Default X-Points"" feature to plot X/Y graphs: If one do not. specify the points in the x-axis, they will get the default values 0, 1, 2, 3, (etc. depending. on the length of the y-points). The matplotlib script will be:. ```. import matplotlib.pyplot as plt. import numpy as np. points = np.array([3, 8, 1, 10, 5, 7]). plt.plot(ypoints). plt. show(). ```. It is now possible to do the same with the ROOt TGraph:. ```. double y[6] = {3, 8, 1, 10, 5, 7};. auto g = new TGraph(6,y);. g->Draw();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10588
https://github.com/root-project/root/pull/10588:198,modifiability,depend,depending,198,"Simple TGraph ctor; - In matplolib one can use the ""Default X-Points"" feature to plot X/Y graphs: If one do not. specify the points in the x-axis, they will get the default values 0, 1, 2, 3, (etc. depending. on the length of the y-points). The matplotlib script will be:. ```. import matplotlib.pyplot as plt. import numpy as np. points = np.array([3, 8, 1, 10, 5, 7]). plt.plot(ypoints). plt. show(). ```. It is now possible to do the same with the ROOt TGraph:. ```. double y[6] = {3, 8, 1, 10, 5, 7};. auto g = new TGraph(6,y);. g->Draw();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10588
https://github.com/root-project/root/pull/10588:198,safety,depend,depending,198,"Simple TGraph ctor; - In matplolib one can use the ""Default X-Points"" feature to plot X/Y graphs: If one do not. specify the points in the x-axis, they will get the default values 0, 1, 2, 3, (etc. depending. on the length of the y-points). The matplotlib script will be:. ```. import matplotlib.pyplot as plt. import numpy as np. points = np.array([3, 8, 1, 10, 5, 7]). plt.plot(ypoints). plt. show(). ```. It is now possible to do the same with the ROOt TGraph:. ```. double y[6] = {3, 8, 1, 10, 5, 7};. auto g = new TGraph(6,y);. g->Draw();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10588
https://github.com/root-project/root/pull/10588:0,testability,Simpl,Simple,0,"Simple TGraph ctor; - In matplolib one can use the ""Default X-Points"" feature to plot X/Y graphs: If one do not. specify the points in the x-axis, they will get the default values 0, 1, 2, 3, (etc. depending. on the length of the y-points). The matplotlib script will be:. ```. import matplotlib.pyplot as plt. import numpy as np. points = np.array([3, 8, 1, 10, 5, 7]). plt.plot(ypoints). plt. show(). ```. It is now possible to do the same with the ROOt TGraph:. ```. double y[6] = {3, 8, 1, 10, 5, 7};. auto g = new TGraph(6,y);. g->Draw();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10588
https://github.com/root-project/root/pull/10588:198,testability,depend,depending,198,"Simple TGraph ctor; - In matplolib one can use the ""Default X-Points"" feature to plot X/Y graphs: If one do not. specify the points in the x-axis, they will get the default values 0, 1, 2, 3, (etc. depending. on the length of the y-points). The matplotlib script will be:. ```. import matplotlib.pyplot as plt. import numpy as np. points = np.array([3, 8, 1, 10, 5, 7]). plt.plot(ypoints). plt. show(). ```. It is now possible to do the same with the ROOt TGraph:. ```. double y[6] = {3, 8, 1, 10, 5, 7};. auto g = new TGraph(6,y);. g->Draw();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10588
https://github.com/root-project/root/pull/10588:0,usability,Simpl,Simple,0,"Simple TGraph ctor; - In matplolib one can use the ""Default X-Points"" feature to plot X/Y graphs: If one do not. specify the points in the x-axis, they will get the default values 0, 1, 2, 3, (etc. depending. on the length of the y-points). The matplotlib script will be:. ```. import matplotlib.pyplot as plt. import numpy as np. points = np.array([3, 8, 1, 10, 5, 7]). plt.plot(ypoints). plt. show(). ```. It is now possible to do the same with the ROOt TGraph:. ```. double y[6] = {3, 8, 1, 10, 5, 7};. auto g = new TGraph(6,y);. g->Draw();. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10588
https://github.com/root-project/root/pull/10590:151,deployability,depend,depend,151,"[RF] Move DataMap handling out of RooBatchCompute; The RooBatchCompute library should not need to know about the data map. implementation. It does not depend on the architecture, and also there. are often incompatibilities when using `std::map` (or. `std::unordered_map`) with nvcc with the standard library headers on the. system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10590
https://github.com/root-project/root/pull/10590:151,integrability,depend,depend,151,"[RF] Move DataMap handling out of RooBatchCompute; The RooBatchCompute library should not need to know about the data map. implementation. It does not depend on the architecture, and also there. are often incompatibilities when using `std::map` (or. `std::unordered_map`) with nvcc with the standard library headers on the. system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10590
https://github.com/root-project/root/pull/10590:165,interoperability,architectur,architecture,165,"[RF] Move DataMap handling out of RooBatchCompute; The RooBatchCompute library should not need to know about the data map. implementation. It does not depend on the architecture, and also there. are often incompatibilities when using `std::map` (or. `std::unordered_map`) with nvcc with the standard library headers on the. system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10590
https://github.com/root-project/root/pull/10590:205,interoperability,incompatib,incompatibilities,205,"[RF] Move DataMap handling out of RooBatchCompute; The RooBatchCompute library should not need to know about the data map. implementation. It does not depend on the architecture, and also there. are often incompatibilities when using `std::map` (or. `std::unordered_map`) with nvcc with the standard library headers on the. system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10590
https://github.com/root-project/root/pull/10590:291,interoperability,standard,standard,291,"[RF] Move DataMap handling out of RooBatchCompute; The RooBatchCompute library should not need to know about the data map. implementation. It does not depend on the architecture, and also there. are often incompatibilities when using `std::map` (or. `std::unordered_map`) with nvcc with the standard library headers on the. system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10590
https://github.com/root-project/root/pull/10590:151,modifiability,depend,depend,151,"[RF] Move DataMap handling out of RooBatchCompute; The RooBatchCompute library should not need to know about the data map. implementation. It does not depend on the architecture, and also there. are often incompatibilities when using `std::map` (or. `std::unordered_map`) with nvcc with the standard library headers on the. system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10590
https://github.com/root-project/root/pull/10590:142,reliability,doe,does,142,"[RF] Move DataMap handling out of RooBatchCompute; The RooBatchCompute library should not need to know about the data map. implementation. It does not depend on the architecture, and also there. are often incompatibilities when using `std::map` (or. `std::unordered_map`) with nvcc with the standard library headers on the. system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10590
https://github.com/root-project/root/pull/10590:151,safety,depend,depend,151,"[RF] Move DataMap handling out of RooBatchCompute; The RooBatchCompute library should not need to know about the data map. implementation. It does not depend on the architecture, and also there. are often incompatibilities when using `std::map` (or. `std::unordered_map`) with nvcc with the standard library headers on the. system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10590
https://github.com/root-project/root/pull/10590:151,testability,depend,depend,151,"[RF] Move DataMap handling out of RooBatchCompute; The RooBatchCompute library should not need to know about the data map. implementation. It does not depend on the architecture, and also there. are often incompatibilities when using `std::map` (or. `std::unordered_map`) with nvcc with the standard library headers on the. system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10590
https://github.com/root-project/root/pull/10591:61,deployability,modul,modules,61,[cxxmodules] Reduce the amount of header duplications in the modules. [v6.26]; This resolves a merging bug with libstdc++12. Fixes root-project/root#10478. Backport includes the following commit:. [cxxmodules] Fix std.modulemap for older GCC (#10529). The header bits/utility.h only exists since libstdc++-12. (cherry picked from commits e88d533f1c79754dae892249818f53d0155e88fa. and 2750395660c5c8c3ae617a18fefd27193587ec79). Backport of PRs #10498 and #10529,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10591
https://github.com/root-project/root/pull/10591:218,deployability,modul,modulemap,218,[cxxmodules] Reduce the amount of header duplications in the modules. [v6.26]; This resolves a merging bug with libstdc++12. Fixes root-project/root#10478. Backport includes the following commit:. [cxxmodules] Fix std.modulemap for older GCC (#10529). The header bits/utility.h only exists since libstdc++-12. (cherry picked from commits e88d533f1c79754dae892249818f53d0155e88fa. and 2750395660c5c8c3ae617a18fefd27193587ec79). Backport of PRs #10498 and #10529,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10591
https://github.com/root-project/root/pull/10591:13,energy efficiency,Reduc,Reduce,13,[cxxmodules] Reduce the amount of header duplications in the modules. [v6.26]; This resolves a merging bug with libstdc++12. Fixes root-project/root#10478. Backport includes the following commit:. [cxxmodules] Fix std.modulemap for older GCC (#10529). The header bits/utility.h only exists since libstdc++-12. (cherry picked from commits e88d533f1c79754dae892249818f53d0155e88fa. and 2750395660c5c8c3ae617a18fefd27193587ec79). Backport of PRs #10498 and #10529,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10591
https://github.com/root-project/root/pull/10591:61,modifiability,modul,modules,61,[cxxmodules] Reduce the amount of header duplications in the modules. [v6.26]; This resolves a merging bug with libstdc++12. Fixes root-project/root#10478. Backport includes the following commit:. [cxxmodules] Fix std.modulemap for older GCC (#10529). The header bits/utility.h only exists since libstdc++-12. (cherry picked from commits e88d533f1c79754dae892249818f53d0155e88fa. and 2750395660c5c8c3ae617a18fefd27193587ec79). Backport of PRs #10498 and #10529,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10591
https://github.com/root-project/root/pull/10591:218,modifiability,modul,modulemap,218,[cxxmodules] Reduce the amount of header duplications in the modules. [v6.26]; This resolves a merging bug with libstdc++12. Fixes root-project/root#10478. Backport includes the following commit:. [cxxmodules] Fix std.modulemap for older GCC (#10529). The header bits/utility.h only exists since libstdc++-12. (cherry picked from commits e88d533f1c79754dae892249818f53d0155e88fa. and 2750395660c5c8c3ae617a18fefd27193587ec79). Backport of PRs #10498 and #10529,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10591
https://github.com/root-project/root/pull/10591:61,safety,modul,modules,61,[cxxmodules] Reduce the amount of header duplications in the modules. [v6.26]; This resolves a merging bug with libstdc++12. Fixes root-project/root#10478. Backport includes the following commit:. [cxxmodules] Fix std.modulemap for older GCC (#10529). The header bits/utility.h only exists since libstdc++-12. (cherry picked from commits e88d533f1c79754dae892249818f53d0155e88fa. and 2750395660c5c8c3ae617a18fefd27193587ec79). Backport of PRs #10498 and #10529,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10591
https://github.com/root-project/root/pull/10591:218,safety,modul,modulemap,218,[cxxmodules] Reduce the amount of header duplications in the modules. [v6.26]; This resolves a merging bug with libstdc++12. Fixes root-project/root#10478. Backport includes the following commit:. [cxxmodules] Fix std.modulemap for older GCC (#10529). The header bits/utility.h only exists since libstdc++-12. (cherry picked from commits e88d533f1c79754dae892249818f53d0155e88fa. and 2750395660c5c8c3ae617a18fefd27193587ec79). Backport of PRs #10498 and #10529,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10591
https://github.com/root-project/root/pull/10592:169,availability,consist,consistency,169,"[RF] Replace `Double_t` with `double` in RooFit; The standard `double` was used in new RooFit code for a few years now,. and it's better to update also the old code for consistency. This helps. also for doxygen, when the a function with one way of specifying the. double is referenced by a signature that uses the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10592
https://github.com/root-project/root/pull/10592:140,deployability,updat,update,140,"[RF] Replace `Double_t` with `double` in RooFit; The standard `double` was used in new RooFit code for a few years now,. and it's better to update also the old code for consistency. This helps. also for doxygen, when the a function with one way of specifying the. double is referenced by a signature that uses the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10592
https://github.com/root-project/root/pull/10592:53,interoperability,standard,standard,53,"[RF] Replace `Double_t` with `double` in RooFit; The standard `double` was used in new RooFit code for a few years now,. and it's better to update also the old code for consistency. This helps. also for doxygen, when the a function with one way of specifying the. double is referenced by a signature that uses the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10592
https://github.com/root-project/root/pull/10592:248,interoperability,specif,specifying,248,"[RF] Replace `Double_t` with `double` in RooFit; The standard `double` was used in new RooFit code for a few years now,. and it's better to update also the old code for consistency. This helps. also for doxygen, when the a function with one way of specifying the. double is referenced by a signature that uses the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10592
https://github.com/root-project/root/pull/10592:140,safety,updat,update,140,"[RF] Replace `Double_t` with `double` in RooFit; The standard `double` was used in new RooFit code for a few years now,. and it's better to update also the old code for consistency. This helps. also for doxygen, when the a function with one way of specifying the. double is referenced by a signature that uses the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10592
https://github.com/root-project/root/pull/10592:140,security,updat,update,140,"[RF] Replace `Double_t` with `double` in RooFit; The standard `double` was used in new RooFit code for a few years now,. and it's better to update also the old code for consistency. This helps. also for doxygen, when the a function with one way of specifying the. double is referenced by a signature that uses the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10592
https://github.com/root-project/root/pull/10592:290,security,sign,signature,290,"[RF] Replace `Double_t` with `double` in RooFit; The standard `double` was used in new RooFit code for a few years now,. and it's better to update also the old code for consistency. This helps. also for doxygen, when the a function with one way of specifying the. double is referenced by a signature that uses the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10592
https://github.com/root-project/root/pull/10592:169,usability,consist,consistency,169,"[RF] Replace `Double_t` with `double` in RooFit; The standard `double` was used in new RooFit code for a few years now,. and it's better to update also the old code for consistency. This helps. also for doxygen, when the a function with one way of specifying the. double is referenced by a signature that uses the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10592
https://github.com/root-project/root/pull/10592:187,usability,help,helps,187,"[RF] Replace `Double_t` with `double` in RooFit; The standard `double` was used in new RooFit code for a few years now,. and it's better to update also the old code for consistency. This helps. also for doxygen, when the a function with one way of specifying the. double is referenced by a signature that uses the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10592
https://github.com/root-project/root/pull/10593:74,availability,error,error,74,"DynamicLibraryManager::loadLibrary if the parameter resolve is false; The error occurs only when `loadLibrary()` is called with the argument `resolved = false`. The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value. type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10593
https://github.com/root-project/root/pull/10593:201,availability,state,statement,201,"DynamicLibraryManager::loadLibrary if the parameter resolve is false; The error occurs only when `loadLibrary()` is called with the argument `resolved = false`. The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value. type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10593
https://github.com/root-project/root/pull/10593:23,energy efficiency,load,loadLibrary,23,"DynamicLibraryManager::loadLibrary if the parameter resolve is false; The error occurs only when `loadLibrary()` is called with the argument `resolved = false`. The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value. type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10593
https://github.com/root-project/root/pull/10593:98,energy efficiency,load,loadLibrary,98,"DynamicLibraryManager::loadLibrary if the parameter resolve is false; The error occurs only when `loadLibrary()` is called with the argument `resolved = false`. The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value. type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10593
https://github.com/root-project/root/pull/10593:201,integrability,state,statement,201,"DynamicLibraryManager::loadLibrary if the parameter resolve is false; The error occurs only when `loadLibrary()` is called with the argument `resolved = false`. The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value. type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10593
https://github.com/root-project/root/pull/10593:42,modifiability,paramet,parameter,42,"DynamicLibraryManager::loadLibrary if the parameter resolve is false; The error occurs only when `loadLibrary()` is called with the argument `resolved = false`. The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value. type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10593
https://github.com/root-project/root/pull/10593:23,performance,load,loadLibrary,23,"DynamicLibraryManager::loadLibrary if the parameter resolve is false; The error occurs only when `loadLibrary()` is called with the argument `resolved = false`. The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value. type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10593
https://github.com/root-project/root/pull/10593:74,performance,error,error,74,"DynamicLibraryManager::loadLibrary if the parameter resolve is false; The error occurs only when `loadLibrary()` is called with the argument `resolved = false`. The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value. type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10593
https://github.com/root-project/root/pull/10593:98,performance,load,loadLibrary,98,"DynamicLibraryManager::loadLibrary if the parameter resolve is false; The error occurs only when `loadLibrary()` is called with the argument `resolved = false`. The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value. type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10593
https://github.com/root-project/root/pull/10593:74,safety,error,error,74,"DynamicLibraryManager::loadLibrary if the parameter resolve is false; The error occurs only when `loadLibrary()` is called with the argument `resolved = false`. The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value. type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10593
https://github.com/root-project/root/pull/10593:508,safety,test,tested,508,"DynamicLibraryManager::loadLibrary if the parameter resolve is false; The error occurs only when `loadLibrary()` is called with the argument `resolved = false`. The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value. type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10593
https://github.com/root-project/root/pull/10593:508,testability,test,tested,508,"DynamicLibraryManager::loadLibrary if the parameter resolve is false; The error occurs only when `loadLibrary()` is called with the argument `resolved = false`. The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value. type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10593
https://github.com/root-project/root/pull/10593:74,usability,error,error,74,"DynamicLibraryManager::loadLibrary if the parameter resolve is false; The error occurs only when `loadLibrary()` is called with the argument `resolved = false`. The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value. type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10593
https://github.com/root-project/root/pull/10594:467,availability,error,error,467,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:753,availability,Error,Error,753,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:76,deployability,build,builddir,76,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:85,deployability,build,build,85,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:91,deployability,BUILD,BUILD,91,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:152,deployability,build,builddir,152,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:161,deployability,build,build,161,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:167,deployability,BUILD,BUILD,167,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:217,deployability,build,builddir,217,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:226,deployability,build,build,226,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:232,deployability,BUILD,BUILD,232,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:389,deployability,build,builddir,389,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:398,deployability,build,build,398,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:404,deployability,BUILD,BUILD,404,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:680,deployability,build,build,680,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:870,deployability,build,build,870,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:467,performance,error,error,467,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:753,performance,Error,Error,753,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:467,safety,error,error,467,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:753,safety,Error,Error,753,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:467,usability,error,error,467,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:753,usability,Error,Error,753,"Add #include <cstring> for std::memcpy [v6.26]; ```. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,. from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':. /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'? 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));. | ^~~~~~. | wmemcpy. gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1. ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10595:31,safety,test,test,31,[ntuple] Fix vector field unit test; Fixes #10466,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10595
https://github.com/root-project/root/pull/10595:26,testability,unit,unit,26,[ntuple] Fix vector field unit test; Fixes #10466,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10595
https://github.com/root-project/root/pull/10595:31,testability,test,test,31,[ntuple] Fix vector field unit test; Fixes #10466,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10595
https://github.com/root-project/root/pull/10596:61,deployability,modul,modules,61,[cxxmodules] Reduce the amount of header duplications in the modules. [v6.24]; This resolves a merging bug with libstdc++12. Fixes root-project/root#10478. Backport includes the following commit:. [cxxmodules] Fix std.modulemap for older GCC (#10529). The header bits/utility.h only exists since libstdc++-12. (cherry picked from commits e88d533f1c79754dae892249818f53d0155e88fa. and 2750395660c5c8c3ae617a18fefd27193587ec79). Backport of PRs https://github.com/root-project/root/pull/10498 and https://github.com/root-project/root/pull/10529,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10596
https://github.com/root-project/root/pull/10596:218,deployability,modul,modulemap,218,[cxxmodules] Reduce the amount of header duplications in the modules. [v6.24]; This resolves a merging bug with libstdc++12. Fixes root-project/root#10478. Backport includes the following commit:. [cxxmodules] Fix std.modulemap for older GCC (#10529). The header bits/utility.h only exists since libstdc++-12. (cherry picked from commits e88d533f1c79754dae892249818f53d0155e88fa. and 2750395660c5c8c3ae617a18fefd27193587ec79). Backport of PRs https://github.com/root-project/root/pull/10498 and https://github.com/root-project/root/pull/10529,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10596
https://github.com/root-project/root/pull/10596:13,energy efficiency,Reduc,Reduce,13,[cxxmodules] Reduce the amount of header duplications in the modules. [v6.24]; This resolves a merging bug with libstdc++12. Fixes root-project/root#10478. Backport includes the following commit:. [cxxmodules] Fix std.modulemap for older GCC (#10529). The header bits/utility.h only exists since libstdc++-12. (cherry picked from commits e88d533f1c79754dae892249818f53d0155e88fa. and 2750395660c5c8c3ae617a18fefd27193587ec79). Backport of PRs https://github.com/root-project/root/pull/10498 and https://github.com/root-project/root/pull/10529,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10596
https://github.com/root-project/root/pull/10596:61,modifiability,modul,modules,61,[cxxmodules] Reduce the amount of header duplications in the modules. [v6.24]; This resolves a merging bug with libstdc++12. Fixes root-project/root#10478. Backport includes the following commit:. [cxxmodules] Fix std.modulemap for older GCC (#10529). The header bits/utility.h only exists since libstdc++-12. (cherry picked from commits e88d533f1c79754dae892249818f53d0155e88fa. and 2750395660c5c8c3ae617a18fefd27193587ec79). Backport of PRs https://github.com/root-project/root/pull/10498 and https://github.com/root-project/root/pull/10529,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10596
https://github.com/root-project/root/pull/10596:218,modifiability,modul,modulemap,218,[cxxmodules] Reduce the amount of header duplications in the modules. [v6.24]; This resolves a merging bug with libstdc++12. Fixes root-project/root#10478. Backport includes the following commit:. [cxxmodules] Fix std.modulemap for older GCC (#10529). The header bits/utility.h only exists since libstdc++-12. (cherry picked from commits e88d533f1c79754dae892249818f53d0155e88fa. and 2750395660c5c8c3ae617a18fefd27193587ec79). Backport of PRs https://github.com/root-project/root/pull/10498 and https://github.com/root-project/root/pull/10529,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10596
https://github.com/root-project/root/pull/10596:61,safety,modul,modules,61,[cxxmodules] Reduce the amount of header duplications in the modules. [v6.24]; This resolves a merging bug with libstdc++12. Fixes root-project/root#10478. Backport includes the following commit:. [cxxmodules] Fix std.modulemap for older GCC (#10529). The header bits/utility.h only exists since libstdc++-12. (cherry picked from commits e88d533f1c79754dae892249818f53d0155e88fa. and 2750395660c5c8c3ae617a18fefd27193587ec79). Backport of PRs https://github.com/root-project/root/pull/10498 and https://github.com/root-project/root/pull/10529,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10596
https://github.com/root-project/root/pull/10596:218,safety,modul,modulemap,218,[cxxmodules] Reduce the amount of header duplications in the modules. [v6.24]; This resolves a merging bug with libstdc++12. Fixes root-project/root#10478. Backport includes the following commit:. [cxxmodules] Fix std.modulemap for older GCC (#10529). The header bits/utility.h only exists since libstdc++-12. (cherry picked from commits e88d533f1c79754dae892249818f53d0155e88fa. and 2750395660c5c8c3ae617a18fefd27193587ec79). Backport of PRs https://github.com/root-project/root/pull/10498 and https://github.com/root-project/root/pull/10529,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10596
https://github.com/root-project/root/pull/10598:311,availability,reliab,reliable,311,"[RF] Introduce separate RooMinimizer evaluation counter variable; The RooAbsMinimizerFcn object is copied by the fitter, so the. `_evalCounter` of the original object will never be increased. Hence,. `RooMinimizer::evalCount()` will always return zero, which is. unexpected. To make `RooMinimizer::evalCount()` reliable again, this commit suggests. to habe a second counter variable that is a member of the `RooMinimizer`. itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10598
https://github.com/root-project/root/pull/10598:56,modifiability,variab,variable,56,"[RF] Introduce separate RooMinimizer evaluation counter variable; The RooAbsMinimizerFcn object is copied by the fitter, so the. `_evalCounter` of the original object will never be increased. Hence,. `RooMinimizer::evalCount()` will always return zero, which is. unexpected. To make `RooMinimizer::evalCount()` reliable again, this commit suggests. to habe a second counter variable that is a member of the `RooMinimizer`. itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10598
https://github.com/root-project/root/pull/10598:374,modifiability,variab,variable,374,"[RF] Introduce separate RooMinimizer evaluation counter variable; The RooAbsMinimizerFcn object is copied by the fitter, so the. `_evalCounter` of the original object will never be increased. Hence,. `RooMinimizer::evalCount()` will always return zero, which is. unexpected. To make `RooMinimizer::evalCount()` reliable again, this commit suggests. to habe a second counter variable that is a member of the `RooMinimizer`. itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10598
https://github.com/root-project/root/pull/10598:311,reliability,reliab,reliable,311,"[RF] Introduce separate RooMinimizer evaluation counter variable; The RooAbsMinimizerFcn object is copied by the fitter, so the. `_evalCounter` of the original object will never be increased. Hence,. `RooMinimizer::evalCount()` will always return zero, which is. unexpected. To make `RooMinimizer::evalCount()` reliable again, this commit suggests. to habe a second counter variable that is a member of the `RooMinimizer`. itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10598
https://github.com/root-project/root/pull/10602:528,availability,avail,available,528,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:73,deployability,patch,patch,73,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:301,deployability,fail,failed,301,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:453,deployability,patch,patch,453,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:37,reliability,doe,does,37,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:301,reliability,fail,failed,301,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:528,reliability,availab,available,528,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:73,safety,patch,patch,73,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:453,safety,patch,patch,453,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:528,safety,avail,available,528,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:584,safety,test,test,584,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:73,security,patch,patch,73,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:453,security,patch,patch,453,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:528,security,availab,available,528,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:92,testability,assert,assert,92,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:584,testability,test,test,584,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:424,usability,user,user-defined,424,"[DF] Do not ask cling a typeid if it does not know the type; Before this patch, in order to assert that the column type. returned by a Vary expression matched the type of the column we. always asked cling to provide a type id for the existing column. via TypeName2TypeID(GetColumnType(colName)). That failed if the. column had a type not known to the interpreter, e.g. because it. was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the. RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/issues/10604:749,availability,Error,Error,749,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:452,deployability,build,build,452,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:654,deployability,version,version,654,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:764,deployability,modul,modules,764,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:893,deployability,instal,installation,893,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:922,deployability,instal,installation,922,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1039,deployability,build,build,1039,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1069,deployability,Stack,Stack,1069,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1227,deployability,version,version,1227,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1432,deployability,version,version,1432,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1517,deployability,modul,modules,1517,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1604,deployability,version,version,1604,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1660,deployability,version,version,1660,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1710,deployability,version,version,1710,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1730,deployability,version,version,1730,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1815,deployability,version,version,1815,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:654,integrability,version,version,654,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:807,integrability,messag,message,807,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1227,integrability,version,version,1227,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1432,integrability,version,version,1432,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1604,integrability,version,version,1604,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1660,integrability,version,version,1660,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1710,integrability,version,version,1710,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1730,integrability,version,version,1730,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1815,integrability,version,version,1815,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:807,interoperability,messag,message,807,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:654,modifiability,version,version,654,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:764,modifiability,modul,modules,764,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:852,modifiability,variab,variable,852,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1227,modifiability,version,version,1227,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1432,modifiability,version,version,1432,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1517,modifiability,modul,modules,1517,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1604,modifiability,version,version,1604,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1660,modifiability,version,version,1660,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1710,modifiability,version,version,1710,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1730,modifiability,version,version,1730,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1815,modifiability,version,version,1815,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:749,performance,Error,Error,749,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:45,safety,detect,detected,45,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:572,safety,compl,complains,572,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:749,safety,Error,Error,749,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:764,safety,modul,modules,764,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1177,safety,detect,detected,1177,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1517,safety,modul,modules,1517,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:45,security,detect,detected,45,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:572,security,compl,complains,572,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1177,security,detect,detected,1177,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1202,testability,context,context,1202,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:749,usability,Error,Error,749,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1150,usability,behavi,behavior,1150,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1687,usability,indicat,indication,1687,"External XrootD built from git commit is not detected; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case). However, ROOT complains that it can't find Xrootd:. ```. -- Looking for XROOTD. -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304). -- Setting OLDPACK TRUE. CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):. XROOTD not found. Set environment variable XRDSYS to point to your XROOTD. installation, or inlcude the installation of XROOTD in the. CMAKE_PREFIX_PATH. Alternatively, you can also enable the option. 'builtin_xrootd' to build XROOTD internally. Call Stack (most recent call first):. CMakeLists.txt:219 (include). ```. ### Expected behavior. XroodD should be detected. ### Additional context. In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/pull/10605:27,deployability,version,version,27,Better detection of XrootD version; # This Pull request:. ## Changes or fixes:. Detection of XrootD built from git commit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #10604.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10605
https://github.com/root-project/root/pull/10605:174,deployability,updat,updated,174,Better detection of XrootD version; # This Pull request:. ## Changes or fixes:. Detection of XrootD built from git commit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #10604.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10605
https://github.com/root-project/root/pull/10605:27,integrability,version,version,27,Better detection of XrootD version; # This Pull request:. ## Changes or fixes:. Detection of XrootD built from git commit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #10604.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10605
https://github.com/root-project/root/pull/10605:27,modifiability,version,version,27,Better detection of XrootD version; # This Pull request:. ## Changes or fixes:. Detection of XrootD built from git commit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #10604.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10605
https://github.com/root-project/root/pull/10605:7,safety,detect,detection,7,Better detection of XrootD version; # This Pull request:. ## Changes or fixes:. Detection of XrootD built from git commit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #10604.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10605
https://github.com/root-project/root/pull/10605:80,safety,Detect,Detection,80,Better detection of XrootD version; # This Pull request:. ## Changes or fixes:. Detection of XrootD built from git commit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #10604.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10605
https://github.com/root-project/root/pull/10605:144,safety,test,tested,144,Better detection of XrootD version; # This Pull request:. ## Changes or fixes:. Detection of XrootD built from git commit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #10604.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10605
https://github.com/root-project/root/pull/10605:174,safety,updat,updated,174,Better detection of XrootD version; # This Pull request:. ## Changes or fixes:. Detection of XrootD built from git commit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #10604.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10605
https://github.com/root-project/root/pull/10605:7,security,detect,detection,7,Better detection of XrootD version; # This Pull request:. ## Changes or fixes:. Detection of XrootD built from git commit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #10604.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10605
https://github.com/root-project/root/pull/10605:80,security,Detect,Detection,80,Better detection of XrootD version; # This Pull request:. ## Changes or fixes:. Detection of XrootD built from git commit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #10604.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10605
https://github.com/root-project/root/pull/10605:174,security,updat,updated,174,Better detection of XrootD version; # This Pull request:. ## Changes or fixes:. Detection of XrootD built from git commit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #10604.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10605
https://github.com/root-project/root/pull/10605:144,testability,test,tested,144,Better detection of XrootD version; # This Pull request:. ## Changes or fixes:. Detection of XrootD built from git commit. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #10604.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10605
https://github.com/root-project/root/pull/10606:165,safety,test,tested,165,[ntuple] Replace old uses of `std::runtime_error` by `RException`; This pull request replaces old uses of `std::runtime_error` by `RException`. ## Checklist:. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10606
https://github.com/root-project/root/pull/10606:165,testability,test,tested,165,[ntuple] Replace old uses of `std::runtime_error` by `RException`; This pull request replaces old uses of `std::runtime_error` by `RException`. ## Checklist:. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10606
https://github.com/root-project/root/pull/10607:14,safety,test,tests,14,[DF] Add more tests for Vary; With many thanks to @ikabadzhov who did the bulk of the work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10607
https://github.com/root-project/root/pull/10607:14,testability,test,tests,14,[DF] Add more tests for Vary; With many thanks to @ikabadzhov who did the bulk of the work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10607
https://github.com/root-project/root/issues/10608:45,deployability,Continu,Continuing,45,"Scatter plot combining Color Size and Alpha; Continuing the matplotib investigation, I found out there is a kind of scatter plot ROOT cannot do in a straight forward way. The matplotlib script is:. ```. import matplotlib.pyplot as plt. import numpy as np. x = np.random.randint(100, size=(100)). y = np.random.randint(100, size=(100)). colors = np.random.randint(100, size=(100)). sizes = 10 * np.random.randint(100, size=(100)). plt.scatter(x, y, c=colors, s=sizes, alpha=0.5, cmap='nipy_spectral'). plt.colorbar(). plt.show(). ```. And it gives this plot:. <img width=""538"" alt=""Screenshot 2022-05-18 at 17 19 17"" src=""https://user-images.githubusercontent.com/4697738/169078428-c311e8b2-3dd5-46ee-b079-74529cb2fc6d.png"">. With ROOT it can be done with an ad-hoc macro but that's quite some programming. Therefore I made a prototype of a new class inheriting from TGraph: TScatter. The script is:. ```. void scatter(). {. const int n = 100;. double x[n];. double y[n];. double c[n];. double s[n];. // Define four random data set. auto r = new TRandom();. for (int i=0; i<n; i++) {. x[i] = 100*r->Rndm(i);. y[i] = 100*r->Rndm(i);. c[i] = 900*r->Rndm(i);. s[i] = 1000*r->Rndm(i);. }. auto scat = new TScatter(n, x, y, c, s);. scat->Draw();. }. ```. And it gives:. <img width=""693"" alt=""Screenshot 2022-05-18 at 17 21 53"" src=""https://user-images.githubusercontent.com/4697738/169079349-e0958d09-1091-4049-8cf3-6cdb4dec6e82.png"">. Do you think that might be interesting to have ? @ferdymercury ? @lmoneta ? @linev ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10608
https://github.com/root-project/root/issues/10608:1232,energy efficiency,Draw,Draw,1232,"Scatter plot combining Color Size and Alpha; Continuing the matplotib investigation, I found out there is a kind of scatter plot ROOT cannot do in a straight forward way. The matplotlib script is:. ```. import matplotlib.pyplot as plt. import numpy as np. x = np.random.randint(100, size=(100)). y = np.random.randint(100, size=(100)). colors = np.random.randint(100, size=(100)). sizes = 10 * np.random.randint(100, size=(100)). plt.scatter(x, y, c=colors, s=sizes, alpha=0.5, cmap='nipy_spectral'). plt.colorbar(). plt.show(). ```. And it gives this plot:. <img width=""538"" alt=""Screenshot 2022-05-18 at 17 19 17"" src=""https://user-images.githubusercontent.com/4697738/169078428-c311e8b2-3dd5-46ee-b079-74529cb2fc6d.png"">. With ROOT it can be done with an ad-hoc macro but that's quite some programming. Therefore I made a prototype of a new class inheriting from TGraph: TScatter. The script is:. ```. void scatter(). {. const int n = 100;. double x[n];. double y[n];. double c[n];. double s[n];. // Define four random data set. auto r = new TRandom();. for (int i=0; i<n; i++) {. x[i] = 100*r->Rndm(i);. y[i] = 100*r->Rndm(i);. c[i] = 900*r->Rndm(i);. s[i] = 1000*r->Rndm(i);. }. auto scat = new TScatter(n, x, y, c, s);. scat->Draw();. }. ```. And it gives:. <img width=""693"" alt=""Screenshot 2022-05-18 at 17 21 53"" src=""https://user-images.githubusercontent.com/4697738/169079349-e0958d09-1091-4049-8cf3-6cdb4dec6e82.png"">. Do you think that might be interesting to have ? @ferdymercury ? @lmoneta ? @linev ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10608
https://github.com/root-project/root/issues/10608:850,modifiability,inherit,inheriting,850,"Scatter plot combining Color Size and Alpha; Continuing the matplotib investigation, I found out there is a kind of scatter plot ROOT cannot do in a straight forward way. The matplotlib script is:. ```. import matplotlib.pyplot as plt. import numpy as np. x = np.random.randint(100, size=(100)). y = np.random.randint(100, size=(100)). colors = np.random.randint(100, size=(100)). sizes = 10 * np.random.randint(100, size=(100)). plt.scatter(x, y, c=colors, s=sizes, alpha=0.5, cmap='nipy_spectral'). plt.colorbar(). plt.show(). ```. And it gives this plot:. <img width=""538"" alt=""Screenshot 2022-05-18 at 17 19 17"" src=""https://user-images.githubusercontent.com/4697738/169078428-c311e8b2-3dd5-46ee-b079-74529cb2fc6d.png"">. With ROOT it can be done with an ad-hoc macro but that's quite some programming. Therefore I made a prototype of a new class inheriting from TGraph: TScatter. The script is:. ```. void scatter(). {. const int n = 100;. double x[n];. double y[n];. double c[n];. double s[n];. // Define four random data set. auto r = new TRandom();. for (int i=0; i<n; i++) {. x[i] = 100*r->Rndm(i);. y[i] = 100*r->Rndm(i);. c[i] = 900*r->Rndm(i);. s[i] = 1000*r->Rndm(i);. }. auto scat = new TScatter(n, x, y, c, s);. scat->Draw();. }. ```. And it gives:. <img width=""693"" alt=""Screenshot 2022-05-18 at 17 21 53"" src=""https://user-images.githubusercontent.com/4697738/169079349-e0958d09-1091-4049-8cf3-6cdb4dec6e82.png"">. Do you think that might be interesting to have ? @ferdymercury ? @lmoneta ? @linev ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10608
https://github.com/root-project/root/issues/10608:629,usability,user,user-images,629,"Scatter plot combining Color Size and Alpha; Continuing the matplotib investigation, I found out there is a kind of scatter plot ROOT cannot do in a straight forward way. The matplotlib script is:. ```. import matplotlib.pyplot as plt. import numpy as np. x = np.random.randint(100, size=(100)). y = np.random.randint(100, size=(100)). colors = np.random.randint(100, size=(100)). sizes = 10 * np.random.randint(100, size=(100)). plt.scatter(x, y, c=colors, s=sizes, alpha=0.5, cmap='nipy_spectral'). plt.colorbar(). plt.show(). ```. And it gives this plot:. <img width=""538"" alt=""Screenshot 2022-05-18 at 17 19 17"" src=""https://user-images.githubusercontent.com/4697738/169078428-c311e8b2-3dd5-46ee-b079-74529cb2fc6d.png"">. With ROOT it can be done with an ad-hoc macro but that's quite some programming. Therefore I made a prototype of a new class inheriting from TGraph: TScatter. The script is:. ```. void scatter(). {. const int n = 100;. double x[n];. double y[n];. double c[n];. double s[n];. // Define four random data set. auto r = new TRandom();. for (int i=0; i<n; i++) {. x[i] = 100*r->Rndm(i);. y[i] = 100*r->Rndm(i);. c[i] = 900*r->Rndm(i);. s[i] = 1000*r->Rndm(i);. }. auto scat = new TScatter(n, x, y, c, s);. scat->Draw();. }. ```. And it gives:. <img width=""693"" alt=""Screenshot 2022-05-18 at 17 21 53"" src=""https://user-images.githubusercontent.com/4697738/169079349-e0958d09-1091-4049-8cf3-6cdb4dec6e82.png"">. Do you think that might be interesting to have ? @ferdymercury ? @lmoneta ? @linev ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10608
https://github.com/root-project/root/issues/10608:825,usability,prototyp,prototype,825,"Scatter plot combining Color Size and Alpha; Continuing the matplotib investigation, I found out there is a kind of scatter plot ROOT cannot do in a straight forward way. The matplotlib script is:. ```. import matplotlib.pyplot as plt. import numpy as np. x = np.random.randint(100, size=(100)). y = np.random.randint(100, size=(100)). colors = np.random.randint(100, size=(100)). sizes = 10 * np.random.randint(100, size=(100)). plt.scatter(x, y, c=colors, s=sizes, alpha=0.5, cmap='nipy_spectral'). plt.colorbar(). plt.show(). ```. And it gives this plot:. <img width=""538"" alt=""Screenshot 2022-05-18 at 17 19 17"" src=""https://user-images.githubusercontent.com/4697738/169078428-c311e8b2-3dd5-46ee-b079-74529cb2fc6d.png"">. With ROOT it can be done with an ad-hoc macro but that's quite some programming. Therefore I made a prototype of a new class inheriting from TGraph: TScatter. The script is:. ```. void scatter(). {. const int n = 100;. double x[n];. double y[n];. double c[n];. double s[n];. // Define four random data set. auto r = new TRandom();. for (int i=0; i<n; i++) {. x[i] = 100*r->Rndm(i);. y[i] = 100*r->Rndm(i);. c[i] = 900*r->Rndm(i);. s[i] = 1000*r->Rndm(i);. }. auto scat = new TScatter(n, x, y, c, s);. scat->Draw();. }. ```. And it gives:. <img width=""693"" alt=""Screenshot 2022-05-18 at 17 21 53"" src=""https://user-images.githubusercontent.com/4697738/169079349-e0958d09-1091-4049-8cf3-6cdb4dec6e82.png"">. Do you think that might be interesting to have ? @ferdymercury ? @lmoneta ? @linev ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10608
https://github.com/root-project/root/issues/10608:1334,usability,user,user-images,1334,"Scatter plot combining Color Size and Alpha; Continuing the matplotib investigation, I found out there is a kind of scatter plot ROOT cannot do in a straight forward way. The matplotlib script is:. ```. import matplotlib.pyplot as plt. import numpy as np. x = np.random.randint(100, size=(100)). y = np.random.randint(100, size=(100)). colors = np.random.randint(100, size=(100)). sizes = 10 * np.random.randint(100, size=(100)). plt.scatter(x, y, c=colors, s=sizes, alpha=0.5, cmap='nipy_spectral'). plt.colorbar(). plt.show(). ```. And it gives this plot:. <img width=""538"" alt=""Screenshot 2022-05-18 at 17 19 17"" src=""https://user-images.githubusercontent.com/4697738/169078428-c311e8b2-3dd5-46ee-b079-74529cb2fc6d.png"">. With ROOT it can be done with an ad-hoc macro but that's quite some programming. Therefore I made a prototype of a new class inheriting from TGraph: TScatter. The script is:. ```. void scatter(). {. const int n = 100;. double x[n];. double y[n];. double c[n];. double s[n];. // Define four random data set. auto r = new TRandom();. for (int i=0; i<n; i++) {. x[i] = 100*r->Rndm(i);. y[i] = 100*r->Rndm(i);. c[i] = 900*r->Rndm(i);. s[i] = 1000*r->Rndm(i);. }. auto scat = new TScatter(n, x, y, c, s);. scat->Draw();. }. ```. And it gives:. <img width=""693"" alt=""Screenshot 2022-05-18 at 17 21 53"" src=""https://user-images.githubusercontent.com/4697738/169079349-e0958d09-1091-4049-8cf3-6cdb4dec6e82.png"">. Do you think that might be interesting to have ? @ferdymercury ? @lmoneta ? @linev ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10608
https://github.com/root-project/root/pull/10609:180,availability,consist,consistent,180,[RF] Add logging to dataset feature in RooMinimizer; Add the possibility to get the parameter values for each function. evaluation during the minimization. This is useful to get a consistent. minimization path for benchmarking.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10609
https://github.com/root-project/root/pull/10609:9,deployability,log,logging,9,[RF] Add logging to dataset feature in RooMinimizer; Add the possibility to get the parameter values for each function. evaluation during the minimization. This is useful to get a consistent. minimization path for benchmarking.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10609
https://github.com/root-project/root/pull/10609:84,modifiability,paramet,parameter,84,[RF] Add logging to dataset feature in RooMinimizer; Add the possibility to get the parameter values for each function. evaluation during the minimization. This is useful to get a consistent. minimization path for benchmarking.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10609
https://github.com/root-project/root/pull/10609:9,safety,log,logging,9,[RF] Add logging to dataset feature in RooMinimizer; Add the possibility to get the parameter values for each function. evaluation during the minimization. This is useful to get a consistent. minimization path for benchmarking.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10609
https://github.com/root-project/root/pull/10609:9,security,log,logging,9,[RF] Add logging to dataset feature in RooMinimizer; Add the possibility to get the parameter values for each function. evaluation during the minimization. This is useful to get a consistent. minimization path for benchmarking.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10609
https://github.com/root-project/root/pull/10609:9,testability,log,logging,9,[RF] Add logging to dataset feature in RooMinimizer; Add the possibility to get the parameter values for each function. evaluation during the minimization. This is useful to get a consistent. minimization path for benchmarking.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10609
https://github.com/root-project/root/pull/10609:142,usability,minim,minimization,142,[RF] Add logging to dataset feature in RooMinimizer; Add the possibility to get the parameter values for each function. evaluation during the minimization. This is useful to get a consistent. minimization path for benchmarking.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10609
https://github.com/root-project/root/pull/10609:180,usability,consist,consistent,180,[RF] Add logging to dataset feature in RooMinimizer; Add the possibility to get the parameter values for each function. evaluation during the minimization. This is useful to get a consistent. minimization path for benchmarking.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10609
https://github.com/root-project/root/pull/10609:192,usability,minim,minimization,192,[RF] Add logging to dataset feature in RooMinimizer; Add the possibility to get the parameter values for each function. evaluation during the minimization. This is useful to get a consistent. minimization path for benchmarking.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10609
https://github.com/root-project/root/pull/10610:158,integrability,configur,configurable,158,[RF] Avoid using test statistics constructors directly in user code; The direct creation of RooFit test statistics instances is discouraged. because the more configurable `createNLL` and `createChi2` should be. prefered.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10610
https://github.com/root-project/root/pull/10610:158,modifiability,configur,configurable,158,[RF] Avoid using test statistics constructors directly in user code; The direct creation of RooFit test statistics instances is discouraged. because the more configurable `createNLL` and `createChi2` should be. prefered.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10610
https://github.com/root-project/root/pull/10610:5,safety,Avoid,Avoid,5,[RF] Avoid using test statistics constructors directly in user code; The direct creation of RooFit test statistics instances is discouraged. because the more configurable `createNLL` and `createChi2` should be. prefered.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10610
https://github.com/root-project/root/pull/10610:17,safety,test,test,17,[RF] Avoid using test statistics constructors directly in user code; The direct creation of RooFit test statistics instances is discouraged. because the more configurable `createNLL` and `createChi2` should be. prefered.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10610
https://github.com/root-project/root/pull/10610:99,safety,test,test,99,[RF] Avoid using test statistics constructors directly in user code; The direct creation of RooFit test statistics instances is discouraged. because the more configurable `createNLL` and `createChi2` should be. prefered.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10610
https://github.com/root-project/root/pull/10610:158,security,configur,configurable,158,[RF] Avoid using test statistics constructors directly in user code; The direct creation of RooFit test statistics instances is discouraged. because the more configurable `createNLL` and `createChi2` should be. prefered.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10610
https://github.com/root-project/root/pull/10610:17,testability,test,test,17,[RF] Avoid using test statistics constructors directly in user code; The direct creation of RooFit test statistics instances is discouraged. because the more configurable `createNLL` and `createChi2` should be. prefered.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10610
https://github.com/root-project/root/pull/10610:99,testability,test,test,99,[RF] Avoid using test statistics constructors directly in user code; The direct creation of RooFit test statistics instances is discouraged. because the more configurable `createNLL` and `createChi2` should be. prefered.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10610
https://github.com/root-project/root/pull/10610:58,usability,user,user,58,[RF] Avoid using test statistics constructors directly in user code; The direct creation of RooFit test statistics instances is discouraged. because the more configurable `createNLL` and `createChi2` should be. prefered.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10610
https://github.com/root-project/root/pull/10610:211,usability,prefer,prefered,211,[RF] Avoid using test statistics constructors directly in user code; The direct creation of RooFit test statistics instances is discouraged. because the more configurable `createNLL` and `createChi2` should be. prefered.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10610
https://github.com/root-project/root/issues/10611:349,availability,restor,restore,349,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:757,deployability,log,logic,757,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:836,deployability,log,logic,836,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:267,integrability,sub,substr,267,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:313,integrability,sub,substr,313,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:1061,interoperability,specif,specify,1061,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:349,reliability,restor,restore,349,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:757,safety,log,logic,757,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:836,safety,log,logic,836,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:936,safety,compl,complicated,936,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:757,security,log,logic,757,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:836,security,log,logic,836,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:936,security,compl,complicated,936,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:757,testability,log,logic,757,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:836,testability,log,logic,836,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:1053,usability,user,user,1053,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:1219,usability,user,user,1219,"TTreeReaderArray and TDynamicArrayReader parsing bug; This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: . `parent = parent.substr(0, posLastDot);`. to. `parent = parent.substr(0, posLastDotParent);`. will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.). For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:. `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/pull/10612:231,availability,down,down,231,"[RF] Speed up RooFit BatchMode by avoiding to set oper mode to `Auto` in RooAbsReal::computeBatch; More detail in the commit descriptions. This PR results in a big speedup for the batch mode, bringing the. runitme for stressRooFit down from 8 to 7 seconds for the CPU mode. (without the BatchMode, the stressRooFit suite takes 7.7 seconds to. run).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10612
https://github.com/root-project/root/pull/10612:264,energy efficiency,CPU,CPU,264,"[RF] Speed up RooFit BatchMode by avoiding to set oper mode to `Auto` in RooAbsReal::computeBatch; More detail in the commit descriptions. This PR results in a big speedup for the batch mode, bringing the. runitme for stressRooFit down from 8 to 7 seconds for the CPU mode. (without the BatchMode, the stressRooFit suite takes 7.7 seconds to. run).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10612
https://github.com/root-project/root/pull/10612:21,integrability,Batch,BatchMode,21,"[RF] Speed up RooFit BatchMode by avoiding to set oper mode to `Auto` in RooAbsReal::computeBatch; More detail in the commit descriptions. This PR results in a big speedup for the batch mode, bringing the. runitme for stressRooFit down from 8 to 7 seconds for the CPU mode. (without the BatchMode, the stressRooFit suite takes 7.7 seconds to. run).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10612
https://github.com/root-project/root/pull/10612:180,integrability,batch,batch,180,"[RF] Speed up RooFit BatchMode by avoiding to set oper mode to `Auto` in RooAbsReal::computeBatch; More detail in the commit descriptions. This PR results in a big speedup for the batch mode, bringing the. runitme for stressRooFit down from 8 to 7 seconds for the CPU mode. (without the BatchMode, the stressRooFit suite takes 7.7 seconds to. run).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10612
https://github.com/root-project/root/pull/10612:287,integrability,Batch,BatchMode,287,"[RF] Speed up RooFit BatchMode by avoiding to set oper mode to `Auto` in RooAbsReal::computeBatch; More detail in the commit descriptions. This PR results in a big speedup for the batch mode, bringing the. runitme for stressRooFit down from 8 to 7 seconds for the CPU mode. (without the BatchMode, the stressRooFit suite takes 7.7 seconds to. run).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10612
https://github.com/root-project/root/pull/10612:21,performance,Batch,BatchMode,21,"[RF] Speed up RooFit BatchMode by avoiding to set oper mode to `Auto` in RooAbsReal::computeBatch; More detail in the commit descriptions. This PR results in a big speedup for the batch mode, bringing the. runitme for stressRooFit down from 8 to 7 seconds for the CPU mode. (without the BatchMode, the stressRooFit suite takes 7.7 seconds to. run).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10612
https://github.com/root-project/root/pull/10612:180,performance,batch,batch,180,"[RF] Speed up RooFit BatchMode by avoiding to set oper mode to `Auto` in RooAbsReal::computeBatch; More detail in the commit descriptions. This PR results in a big speedup for the batch mode, bringing the. runitme for stressRooFit down from 8 to 7 seconds for the CPU mode. (without the BatchMode, the stressRooFit suite takes 7.7 seconds to. run).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10612
https://github.com/root-project/root/pull/10612:264,performance,CPU,CPU,264,"[RF] Speed up RooFit BatchMode by avoiding to set oper mode to `Auto` in RooAbsReal::computeBatch; More detail in the commit descriptions. This PR results in a big speedup for the batch mode, bringing the. runitme for stressRooFit down from 8 to 7 seconds for the CPU mode. (without the BatchMode, the stressRooFit suite takes 7.7 seconds to. run).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10612
https://github.com/root-project/root/pull/10612:287,performance,Batch,BatchMode,287,"[RF] Speed up RooFit BatchMode by avoiding to set oper mode to `Auto` in RooAbsReal::computeBatch; More detail in the commit descriptions. This PR results in a big speedup for the batch mode, bringing the. runitme for stressRooFit down from 8 to 7 seconds for the CPU mode. (without the BatchMode, the stressRooFit suite takes 7.7 seconds to. run).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10612
https://github.com/root-project/root/pull/10612:34,safety,avoid,avoiding,34,"[RF] Speed up RooFit BatchMode by avoiding to set oper mode to `Auto` in RooAbsReal::computeBatch; More detail in the commit descriptions. This PR results in a big speedup for the batch mode, bringing the. runitme for stressRooFit down from 8 to 7 seconds for the CPU mode. (without the BatchMode, the stressRooFit suite takes 7.7 seconds to. run).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10612
https://github.com/root-project/root/pull/10613:48,deployability,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 14; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9956. 2. https://github.com/root-project/root/pull/10590. 3. https://github.com/root-project/root/pull/10612.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10613
https://github.com/root-project/root/pull/10613:150,deployability,patch,patches,150,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 14; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9956. 2. https://github.com/root-project/root/pull/10590. 3. https://github.com/root-project/root/pull/10612.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10613
https://github.com/root-project/root/pull/10613:48,safety,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 14; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9956. 2. https://github.com/root-project/root/pull/10590. 3. https://github.com/root-project/root/pull/10612.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10613
https://github.com/root-project/root/pull/10613:150,safety,patch,patches,150,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 14; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9956. 2. https://github.com/root-project/root/pull/10590. 3. https://github.com/root-project/root/pull/10612.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10613
https://github.com/root-project/root/pull/10613:48,security,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 14; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9956. 2. https://github.com/root-project/root/pull/10590. 3. https://github.com/root-project/root/pull/10612.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10613
https://github.com/root-project/root/pull/10613:150,security,patch,patches,150,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 14; This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9956. 2. https://github.com/root-project/root/pull/10590. 3. https://github.com/root-project/root/pull/10612.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10613
https://github.com/root-project/root/pull/10617:280,deployability,upgrad,upgrade,280,"[math] Define specializations of TDataPointN in library; By having the explicit template instantiation of `kDimension` with a definition in the header, the compiler emits the symbol in every translation unit that includes this header. This will be complained about by the ongoing upgrade to LLVM 13, but can already be seen today in regular compilation of two translation units. Instead move the template specializations to the library. FIXME: Works for GCC, but not for Clang!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10617
https://github.com/root-project/root/pull/10617:191,integrability,translat,translation,191,"[math] Define specializations of TDataPointN in library; By having the explicit template instantiation of `kDimension` with a definition in the header, the compiler emits the symbol in every translation unit that includes this header. This will be complained about by the ongoing upgrade to LLVM 13, but can already be seen today in regular compilation of two translation units. Instead move the template specializations to the library. FIXME: Works for GCC, but not for Clang!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10617
https://github.com/root-project/root/pull/10617:360,integrability,translat,translation,360,"[math] Define specializations of TDataPointN in library; By having the explicit template instantiation of `kDimension` with a definition in the header, the compiler emits the symbol in every translation unit that includes this header. This will be complained about by the ongoing upgrade to LLVM 13, but can already be seen today in regular compilation of two translation units. Instead move the template specializations to the library. FIXME: Works for GCC, but not for Clang!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10617
https://github.com/root-project/root/pull/10617:191,interoperability,translat,translation,191,"[math] Define specializations of TDataPointN in library; By having the explicit template instantiation of `kDimension` with a definition in the header, the compiler emits the symbol in every translation unit that includes this header. This will be complained about by the ongoing upgrade to LLVM 13, but can already be seen today in regular compilation of two translation units. Instead move the template specializations to the library. FIXME: Works for GCC, but not for Clang!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10617
https://github.com/root-project/root/pull/10617:360,interoperability,translat,translation,360,"[math] Define specializations of TDataPointN in library; By having the explicit template instantiation of `kDimension` with a definition in the header, the compiler emits the symbol in every translation unit that includes this header. This will be complained about by the ongoing upgrade to LLVM 13, but can already be seen today in regular compilation of two translation units. Instead move the template specializations to the library. FIXME: Works for GCC, but not for Clang!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10617
https://github.com/root-project/root/pull/10617:280,modifiability,upgrad,upgrade,280,"[math] Define specializations of TDataPointN in library; By having the explicit template instantiation of `kDimension` with a definition in the header, the compiler emits the symbol in every translation unit that includes this header. This will be complained about by the ongoing upgrade to LLVM 13, but can already be seen today in regular compilation of two translation units. Instead move the template specializations to the library. FIXME: Works for GCC, but not for Clang!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10617
https://github.com/root-project/root/pull/10617:248,safety,compl,complained,248,"[math] Define specializations of TDataPointN in library; By having the explicit template instantiation of `kDimension` with a definition in the header, the compiler emits the symbol in every translation unit that includes this header. This will be complained about by the ongoing upgrade to LLVM 13, but can already be seen today in regular compilation of two translation units. Instead move the template specializations to the library. FIXME: Works for GCC, but not for Clang!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10617
https://github.com/root-project/root/pull/10617:248,security,compl,complained,248,"[math] Define specializations of TDataPointN in library; By having the explicit template instantiation of `kDimension` with a definition in the header, the compiler emits the symbol in every translation unit that includes this header. This will be complained about by the ongoing upgrade to LLVM 13, but can already be seen today in regular compilation of two translation units. Instead move the template specializations to the library. FIXME: Works for GCC, but not for Clang!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10617
https://github.com/root-project/root/pull/10617:203,testability,unit,unit,203,"[math] Define specializations of TDataPointN in library; By having the explicit template instantiation of `kDimension` with a definition in the header, the compiler emits the symbol in every translation unit that includes this header. This will be complained about by the ongoing upgrade to LLVM 13, but can already be seen today in regular compilation of two translation units. Instead move the template specializations to the library. FIXME: Works for GCC, but not for Clang!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10617
https://github.com/root-project/root/pull/10617:372,testability,unit,units,372,"[math] Define specializations of TDataPointN in library; By having the explicit template instantiation of `kDimension` with a definition in the header, the compiler emits the symbol in every translation unit that includes this header. This will be complained about by the ongoing upgrade to LLVM 13, but can already be seen today in regular compilation of two translation units. Instead move the template specializations to the library. FIXME: Works for GCC, but not for Clang!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10617
https://github.com/root-project/root/issues/10618:247,availability,error,erroring,247,"[ntuple] Use `assert` instead of `R__ASSERT` where appropriate; Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:235,modifiability,paramet,parameters,235,"[ntuple] Use `assert` instead of `R__ASSERT` where appropriate; Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:247,performance,error,erroring,247,"[ntuple] Use `assert` instead of `R__ASSERT` where appropriate; Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:505,performance,perform,performance,505,"[ntuple] Use `assert` instead of `R__ASSERT` where appropriate; Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:215,safety,valid,validation,215,"[ntuple] Use `assert` instead of `R__ASSERT` where appropriate; Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:229,safety,input,input,229,"[ntuple] Use `assert` instead of `R__ASSERT` where appropriate; Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:247,safety,error,erroring,247,"[ntuple] Use `assert` instead of `R__ASSERT` where appropriate; Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:215,security,validat,validation,215,"[ntuple] Use `assert` instead of `R__ASSERT` where appropriate; Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:14,testability,assert,assert,14,"[ntuple] Use `assert` instead of `R__ASSERT` where appropriate; Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:370,testability,assert,assert,370,"[ntuple] Use `assert` instead of `R__ASSERT` where appropriate; Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:229,usability,input,input,229,"[ntuple] Use `assert` instead of `R__ASSERT` where appropriate; Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:247,usability,error,erroring,247,"[ntuple] Use `assert` instead of `R__ASSERT` where appropriate; Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:505,usability,perform,performance,505,"[ntuple] Use `assert` instead of `R__ASSERT` where appropriate; Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:554,usability,clear,clear,554,"[ntuple] Use `assert` instead of `R__ASSERT` where appropriate; Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10620:886,availability,consist,consists,886,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:187,integrability,event,event,187,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:286,integrability,Filter,Filter,286,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:384,integrability,Filter,Filter,384,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:898,integrability,event,events,898,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:920,integrability,filter,filters,920,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:1095,integrability,Filter,Filter,1095,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:1268,integrability,Filter,Filter,1268,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:1304,integrability,Filter,Filter,1304,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:1340,integrability,Filter,Filter,1340,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:1397,integrability,filter,filters,1397,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:1515,integrability,event,events,1515,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:1625,integrability,event,events,1625,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:230,modifiability,variab,variables,230,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:1438,performance,time,times,1438,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:937,security,access,access,937,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:886,usability,consist,consists,886,"RDataframe merging branches in the computation graph; ### Is your feature request related to a problem? Please describe. I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example. ```cxx. truth = df.Filter(has_truth, ...). Define(""truth_computation"", expensive_computation_truth, ...);. reco = df.Filter(has_reco, ...). Define(""reco_computation"", expensive_computation_reco, ...);. ```. I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like. Ideally, one could then write something like. ```cxx. both = ROOT::RDF::Intersection(truth, reco);. both.Histo2D(..., {""truth_computation"", ""reco_computation""});. ```. Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered. I can calculate both quantities in the beginning. ```cxx. pre = df.Filter(has_truth || has_reco, ...). Define(""truth_computation"", expensive_computation_truth, ...). Define(""reco_computation"", expensive_computation_reco, ...);. truth = pre.Filter(has_truth, ...);. reco = pre.Filter(has_reco, ...);. both = reco.Filter(has_truth, ...);. ```. but this will. 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive. 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/pull/10621:66,deployability,fail,fail,66,[DF] Add tests for RNTupleDS + RVecs; These tests are expected to fail at the moment. RNTupleDS needs a little tweak to use RRVecField instead of RVectorField to read collections. Re-test and merge after #10623 is in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10621
https://github.com/root-project/root/pull/10621:66,reliability,fail,fail,66,[DF] Add tests for RNTupleDS + RVecs; These tests are expected to fail at the moment. RNTupleDS needs a little tweak to use RRVecField instead of RVectorField to read collections. Re-test and merge after #10623 is in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10621
https://github.com/root-project/root/pull/10621:9,safety,test,tests,9,[DF] Add tests for RNTupleDS + RVecs; These tests are expected to fail at the moment. RNTupleDS needs a little tweak to use RRVecField instead of RVectorField to read collections. Re-test and merge after #10623 is in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10621
https://github.com/root-project/root/pull/10621:44,safety,test,tests,44,[DF] Add tests for RNTupleDS + RVecs; These tests are expected to fail at the moment. RNTupleDS needs a little tweak to use RRVecField instead of RVectorField to read collections. Re-test and merge after #10623 is in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10621
https://github.com/root-project/root/pull/10621:183,safety,test,test,183,[DF] Add tests for RNTupleDS + RVecs; These tests are expected to fail at the moment. RNTupleDS needs a little tweak to use RRVecField instead of RVectorField to read collections. Re-test and merge after #10623 is in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10621
https://github.com/root-project/root/pull/10621:9,testability,test,tests,9,[DF] Add tests for RNTupleDS + RVecs; These tests are expected to fail at the moment. RNTupleDS needs a little tweak to use RRVecField instead of RVectorField to read collections. Re-test and merge after #10623 is in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10621
https://github.com/root-project/root/pull/10621:44,testability,test,tests,44,[DF] Add tests for RNTupleDS + RVecs; These tests are expected to fail at the moment. RNTupleDS needs a little tweak to use RRVecField instead of RVectorField to read collections. Re-test and merge after #10623 is in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10621
https://github.com/root-project/root/pull/10621:183,testability,test,test,183,[DF] Add tests for RNTupleDS + RVecs; These tests are expected to fail at the moment. RNTupleDS needs a little tweak to use RRVecField instead of RVectorField to read collections. Re-test and merge after #10623 is in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10621
https://github.com/root-project/root/pull/10622:53,availability,fault,faulty,53,"[DF] Reuse nominal Defines whenever possible; Due to faulty logic, we were using different RDefine objects for. each systematic variation even if the define itself did not depend. on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10622:60,deployability,log,logic,60,"[DF] Reuse nominal Defines whenever possible; Due to faulty logic, we were using different RDefine objects for. each systematic variation even if the define itself did not depend. on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10622:172,deployability,depend,depend,172,"[DF] Reuse nominal Defines whenever possible; Due to faulty logic, we were using different RDefine objects for. each systematic variation even if the define itself did not depend. on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10622:53,energy efficiency,fault,faulty,53,"[DF] Reuse nominal Defines whenever possible; Due to faulty logic, we were using different RDefine objects for. each systematic variation even if the define itself did not depend. on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10622:172,integrability,depend,depend,172,"[DF] Reuse nominal Defines whenever possible; Due to faulty logic, we were using different RDefine objects for. each systematic variation even if the define itself did not depend. on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10622:5,modifiability,Reu,Reuse,5,"[DF] Reuse nominal Defines whenever possible; Due to faulty logic, we were using different RDefine objects for. each systematic variation even if the define itself did not depend. on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10622:172,modifiability,depend,depend,172,"[DF] Reuse nominal Defines whenever possible; Due to faulty logic, we were using different RDefine objects for. each systematic variation even if the define itself did not depend. on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10622:53,performance,fault,faulty,53,"[DF] Reuse nominal Defines whenever possible; Due to faulty logic, we were using different RDefine objects for. each systematic variation even if the define itself did not depend. on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10622:53,reliability,fault,faulty,53,"[DF] Reuse nominal Defines whenever possible; Due to faulty logic, we were using different RDefine objects for. each systematic variation even if the define itself did not depend. on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10622:53,safety,fault,faulty,53,"[DF] Reuse nominal Defines whenever possible; Due to faulty logic, we were using different RDefine objects for. each systematic variation even if the define itself did not depend. on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10622:60,safety,log,logic,60,"[DF] Reuse nominal Defines whenever possible; Due to faulty logic, we were using different RDefine objects for. each systematic variation even if the define itself did not depend. on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10622:172,safety,depend,depend,172,"[DF] Reuse nominal Defines whenever possible; Due to faulty logic, we were using different RDefine objects for. each systematic variation even if the define itself did not depend. on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10622:60,security,log,logic,60,"[DF] Reuse nominal Defines whenever possible; Due to faulty logic, we were using different RDefine objects for. each systematic variation even if the define itself did not depend. on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10622:60,testability,log,logic,60,"[DF] Reuse nominal Defines whenever possible; Due to faulty logic, we were using different RDefine objects for. each systematic variation even if the define itself did not depend. on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10622:172,testability,depend,depend,172,"[DF] Reuse nominal Defines whenever possible; Due to faulty logic, we were using different RDefine objects for. each systematic variation even if the define itself did not depend. on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10625:77,deployability,observ,observed,77,[math] Backport of Disable a warning compiling Unuran code.; The warning was observed on fedora32 with gcc 10.3.1. Warning:. root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=]. 886 | GEN->etable = malloc( size * sizeof(E_TABLE*) );. It can be fixed by casting to an int the input to malloc or checking if it is not larger than 2^63-1. This warning could be probably disabled in the code by casting from size_t to int the input to malloc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10625
https://github.com/root-project/root/pull/10625:387,safety,input,input,387,[math] Backport of Disable a warning compiling Unuran code.; The warning was observed on fedora32 with gcc 10.3.1. Warning:. root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=]. 886 | GEN->etable = malloc( size * sizeof(E_TABLE*) );. It can be fixed by casting to an int the input to malloc or checking if it is not larger than 2^63-1. This warning could be probably disabled in the code by casting from size_t to int the input to malloc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10625
https://github.com/root-project/root/pull/10625:534,safety,input,input,534,[math] Backport of Disable a warning compiling Unuran code.; The warning was observed on fedora32 with gcc 10.3.1. Warning:. root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=]. 886 | GEN->etable = malloc( size * sizeof(E_TABLE*) );. It can be fixed by casting to an int the input to malloc or checking if it is not larger than 2^63-1. This warning could be probably disabled in the code by casting from size_t to int the input to malloc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10625
https://github.com/root-project/root/pull/10625:77,testability,observ,observed,77,[math] Backport of Disable a warning compiling Unuran code.; The warning was observed on fedora32 with gcc 10.3.1. Warning:. root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=]. 886 | GEN->etable = malloc( size * sizeof(E_TABLE*) );. It can be fixed by casting to an int the input to malloc or checking if it is not larger than 2^63-1. This warning could be probably disabled in the code by casting from size_t to int the input to malloc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10625
https://github.com/root-project/root/pull/10625:387,usability,input,input,387,[math] Backport of Disable a warning compiling Unuran code.; The warning was observed on fedora32 with gcc 10.3.1. Warning:. root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=]. 886 | GEN->etable = malloc( size * sizeof(E_TABLE*) );. It can be fixed by casting to an int the input to malloc or checking if it is not larger than 2^63-1. This warning could be probably disabled in the code by casting from size_t to int the input to malloc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10625
https://github.com/root-project/root/pull/10625:534,usability,input,input,534,[math] Backport of Disable a warning compiling Unuran code.; The warning was observed on fedora32 with gcc 10.3.1. Warning:. root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=]. 886 | GEN->etable = malloc( size * sizeof(E_TABLE*) );. It can be fixed by casting to an int the input to malloc or checking if it is not larger than 2^63-1. This warning could be probably disabled in the code by casting from size_t to int the input to malloc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10625
https://github.com/root-project/root/pull/10626:158,availability,avail,available,158,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:548,deployability,patch,patch,548,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:766,deployability,Build,BuildLambdaString,766,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:1795,deployability,updat,updated,1795,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:269,integrability,filter,filters,269,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:583,modifiability,variab,variables,583,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:158,reliability,availab,available,158,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:158,safety,avail,available,158,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:548,safety,patch,patch,548,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:1765,safety,test,tested,1765,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:1795,safety,updat,updated,1795,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:158,security,availab,available,158,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:548,security,patch,patch,548,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:1795,security,updat,updated,1795,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:1765,testability,test,tested,1765,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:9,usability,help,helper,9,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:37,usability,help,helper,37,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:150,usability,support,support,150,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:247,usability,help,helper,247,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:452,usability,help,help,452,"[DF] Jit helper functions instead of helper lambdas; TL;DR:. Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions. with auto return types instead of lambda expressions as helper. functions for filters and defines. Functions might compile a bit. faster (it might matter when we have thousands) and make our. jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,. the only functional change is:. ```diff. --- a/tree/dataframe/src/RDFInterfaceUtils.cxx. +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx. @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu. };. std::stringstream ss;. - ss << ""[]("";. + ss << ""("";. for (auto i = 0u; i < vars.size(); ++i) {. std::string fullType;. const auto &type = varTypes[i];. @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v. - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());. + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());. const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +. + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +. lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +. lambdaBaseName + "")>::ret_type;\n}"";. ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10627:24,integrability,Batch,BatchMode,24,[RF] Bugfixes in RooFit BatchMode to enable also the passing of RooMCStudy tests in stressRooFit and support extended fits in subrange; More details in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10627
https://github.com/root-project/root/pull/10627:126,integrability,sub,subrange,126,[RF] Bugfixes in RooFit BatchMode to enable also the passing of RooMCStudy tests in stressRooFit and support extended fits in subrange; More details in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10627
https://github.com/root-project/root/pull/10627:109,modifiability,exten,extended,109,[RF] Bugfixes in RooFit BatchMode to enable also the passing of RooMCStudy tests in stressRooFit and support extended fits in subrange; More details in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10627
https://github.com/root-project/root/pull/10627:24,performance,Batch,BatchMode,24,[RF] Bugfixes in RooFit BatchMode to enable also the passing of RooMCStudy tests in stressRooFit and support extended fits in subrange; More details in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10627
https://github.com/root-project/root/pull/10627:75,safety,test,tests,75,[RF] Bugfixes in RooFit BatchMode to enable also the passing of RooMCStudy tests in stressRooFit and support extended fits in subrange; More details in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10627
https://github.com/root-project/root/pull/10627:75,testability,test,tests,75,[RF] Bugfixes in RooFit BatchMode to enable also the passing of RooMCStudy tests in stressRooFit and support extended fits in subrange; More details in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10627
https://github.com/root-project/root/pull/10627:101,usability,support,support,101,[RF] Bugfixes in RooFit BatchMode to enable also the passing of RooMCStudy tests in stressRooFit and support extended fits in subrange; More details in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10627
https://github.com/root-project/root/pull/10631:359,modifiability,reu,reuse,359,"[ntuple] Requirements in `RRecordField` for supporting `std::pair` and `std::tuple` fields; This pull request applies some changes (see below) in the implementation of RRecordField in order to support `std::pair` and `std::tuple` fields (as follow-up PRs). ## Changes or fixes:. - Compute once the offset for each member in the `RRecordField` constructor and reuse this information in other member functions. - Provide a constructor that takes the list of member offsets and corresponding C++ type. This is required for the implementation of `std::pair` and `std::tuple` fields. Make the private members protected. - Given that `RRecordField` takes the ownership of the child fields passed in the `std::vector<std::unique_ptr<Detail::RFieldBase>> &itemFields`, provide also a constructor that takes a rvalue reference. ## Checklist:. - [X] tested changes locally. Follow-up PRs: support for `std::pair`; support for `std::tuple` fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10631
https://github.com/root-project/root/pull/10631:840,safety,test,tested,840,"[ntuple] Requirements in `RRecordField` for supporting `std::pair` and `std::tuple` fields; This pull request applies some changes (see below) in the implementation of RRecordField in order to support `std::pair` and `std::tuple` fields (as follow-up PRs). ## Changes or fixes:. - Compute once the offset for each member in the `RRecordField` constructor and reuse this information in other member functions. - Provide a constructor that takes the list of member offsets and corresponding C++ type. This is required for the implementation of `std::pair` and `std::tuple` fields. Make the private members protected. - Given that `RRecordField` takes the ownership of the child fields passed in the `std::vector<std::unique_ptr<Detail::RFieldBase>> &itemFields`, provide also a constructor that takes a rvalue reference. ## Checklist:. - [X] tested changes locally. Follow-up PRs: support for `std::pair`; support for `std::tuple` fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10631
https://github.com/root-project/root/pull/10631:840,testability,test,tested,840,"[ntuple] Requirements in `RRecordField` for supporting `std::pair` and `std::tuple` fields; This pull request applies some changes (see below) in the implementation of RRecordField in order to support `std::pair` and `std::tuple` fields (as follow-up PRs). ## Changes or fixes:. - Compute once the offset for each member in the `RRecordField` constructor and reuse this information in other member functions. - Provide a constructor that takes the list of member offsets and corresponding C++ type. This is required for the implementation of `std::pair` and `std::tuple` fields. Make the private members protected. - Given that `RRecordField` takes the ownership of the child fields passed in the `std::vector<std::unique_ptr<Detail::RFieldBase>> &itemFields`, provide also a constructor that takes a rvalue reference. ## Checklist:. - [X] tested changes locally. Follow-up PRs: support for `std::pair`; support for `std::tuple` fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10631
https://github.com/root-project/root/pull/10631:44,usability,support,supporting,44,"[ntuple] Requirements in `RRecordField` for supporting `std::pair` and `std::tuple` fields; This pull request applies some changes (see below) in the implementation of RRecordField in order to support `std::pair` and `std::tuple` fields (as follow-up PRs). ## Changes or fixes:. - Compute once the offset for each member in the `RRecordField` constructor and reuse this information in other member functions. - Provide a constructor that takes the list of member offsets and corresponding C++ type. This is required for the implementation of `std::pair` and `std::tuple` fields. Make the private members protected. - Given that `RRecordField` takes the ownership of the child fields passed in the `std::vector<std::unique_ptr<Detail::RFieldBase>> &itemFields`, provide also a constructor that takes a rvalue reference. ## Checklist:. - [X] tested changes locally. Follow-up PRs: support for `std::pair`; support for `std::tuple` fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10631
https://github.com/root-project/root/pull/10631:193,usability,support,support,193,"[ntuple] Requirements in `RRecordField` for supporting `std::pair` and `std::tuple` fields; This pull request applies some changes (see below) in the implementation of RRecordField in order to support `std::pair` and `std::tuple` fields (as follow-up PRs). ## Changes or fixes:. - Compute once the offset for each member in the `RRecordField` constructor and reuse this information in other member functions. - Provide a constructor that takes the list of member offsets and corresponding C++ type. This is required for the implementation of `std::pair` and `std::tuple` fields. Make the private members protected. - Given that `RRecordField` takes the ownership of the child fields passed in the `std::vector<std::unique_ptr<Detail::RFieldBase>> &itemFields`, provide also a constructor that takes a rvalue reference. ## Checklist:. - [X] tested changes locally. Follow-up PRs: support for `std::pair`; support for `std::tuple` fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10631
https://github.com/root-project/root/pull/10631:879,usability,support,support,879,"[ntuple] Requirements in `RRecordField` for supporting `std::pair` and `std::tuple` fields; This pull request applies some changes (see below) in the implementation of RRecordField in order to support `std::pair` and `std::tuple` fields (as follow-up PRs). ## Changes or fixes:. - Compute once the offset for each member in the `RRecordField` constructor and reuse this information in other member functions. - Provide a constructor that takes the list of member offsets and corresponding C++ type. This is required for the implementation of `std::pair` and `std::tuple` fields. Make the private members protected. - Given that `RRecordField` takes the ownership of the child fields passed in the `std::vector<std::unique_ptr<Detail::RFieldBase>> &itemFields`, provide also a constructor that takes a rvalue reference. ## Checklist:. - [X] tested changes locally. Follow-up PRs: support for `std::pair`; support for `std::tuple` fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10631
https://github.com/root-project/root/pull/10631:904,usability,support,support,904,"[ntuple] Requirements in `RRecordField` for supporting `std::pair` and `std::tuple` fields; This pull request applies some changes (see below) in the implementation of RRecordField in order to support `std::pair` and `std::tuple` fields (as follow-up PRs). ## Changes or fixes:. - Compute once the offset for each member in the `RRecordField` constructor and reuse this information in other member functions. - Provide a constructor that takes the list of member offsets and corresponding C++ type. This is required for the implementation of `std::pair` and `std::tuple` fields. Make the private members protected. - Given that `RRecordField` takes the ownership of the child fields passed in the `std::vector<std::unique_ptr<Detail::RFieldBase>> &itemFields`, provide also a constructor that takes a rvalue reference. ## Checklist:. - [X] tested changes locally. Follow-up PRs: support for `std::pair`; support for `std::tuple` fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10631
https://github.com/root-project/root/issues/10632:284,interoperability,standard,standard,284,"[ntuple] Add I/O support for `std::tuple`; The foundations laid by the support of `std::pair<T1, T2>` fields (issue #10324) make now possible to also support `std::tuple<...>` fields. As in the case of `std::pair<T1, T2>`, the memory layout of `std::tuple<...>` is not defined by the standard. Therefore, the type-erased RTupleField should make use of TClass to construct objects of such type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10632
https://github.com/root-project/root/issues/10632:13,performance,I/O,I/O,13,"[ntuple] Add I/O support for `std::tuple`; The foundations laid by the support of `std::pair<T1, T2>` fields (issue #10324) make now possible to also support `std::tuple<...>` fields. As in the case of `std::pair<T1, T2>`, the memory layout of `std::tuple<...>` is not defined by the standard. Therefore, the type-erased RTupleField should make use of TClass to construct objects of such type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10632
https://github.com/root-project/root/issues/10632:227,performance,memor,memory,227,"[ntuple] Add I/O support for `std::tuple`; The foundations laid by the support of `std::pair<T1, T2>` fields (issue #10324) make now possible to also support `std::tuple<...>` fields. As in the case of `std::pair<T1, T2>`, the memory layout of `std::tuple<...>` is not defined by the standard. Therefore, the type-erased RTupleField should make use of TClass to construct objects of such type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10632
https://github.com/root-project/root/issues/10632:17,usability,support,support,17,"[ntuple] Add I/O support for `std::tuple`; The foundations laid by the support of `std::pair<T1, T2>` fields (issue #10324) make now possible to also support `std::tuple<...>` fields. As in the case of `std::pair<T1, T2>`, the memory layout of `std::tuple<...>` is not defined by the standard. Therefore, the type-erased RTupleField should make use of TClass to construct objects of such type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10632
https://github.com/root-project/root/issues/10632:71,usability,support,support,71,"[ntuple] Add I/O support for `std::tuple`; The foundations laid by the support of `std::pair<T1, T2>` fields (issue #10324) make now possible to also support `std::tuple<...>` fields. As in the case of `std::pair<T1, T2>`, the memory layout of `std::tuple<...>` is not defined by the standard. Therefore, the type-erased RTupleField should make use of TClass to construct objects of such type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10632
https://github.com/root-project/root/issues/10632:150,usability,support,support,150,"[ntuple] Add I/O support for `std::tuple`; The foundations laid by the support of `std::pair<T1, T2>` fields (issue #10324) make now possible to also support `std::tuple<...>` fields. As in the case of `std::pair<T1, T2>`, the memory layout of `std::tuple<...>` is not defined by the standard. Therefore, the type-erased RTupleField should make use of TClass to construct objects of such type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10632
https://github.com/root-project/root/issues/10632:227,usability,memor,memory,227,"[ntuple] Add I/O support for `std::tuple`; The foundations laid by the support of `std::pair<T1, T2>` fields (issue #10324) make now possible to also support `std::tuple<...>` fields. As in the case of `std::pair<T1, T2>`, the memory layout of `std::tuple<...>` is not defined by the standard. Therefore, the type-erased RTupleField should make use of TClass to construct objects of such type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10632
https://github.com/root-project/root/pull/10633:111,deployability,patch,patch,111,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:238,deployability,Modul,Modules,238,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:246,deployability,modul,module-file-modified,246,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:272,deployability,Modul,Modules,272,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:289,deployability,build,build-missing-files,289,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:238,modifiability,Modul,Modules,238,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:246,modifiability,modul,module-file-modified,246,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:272,modifiability,Modul,Modules,272,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:0,safety,Compl,Complain,0,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:111,safety,patch,patch,111,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:222,safety,test,tests,222,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:238,safety,Modul,Modules,238,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:246,safety,modul,module-file-modified,246,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:272,safety,Modul,Modules,272,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:0,security,Compl,Complain,0,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:111,security,patch,patch,111,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:258,security,modif,modified,258,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:222,testability,test,tests,222,"Complain about invalid sources again; This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but. when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c. * Modules/explicit-build-missing-files.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/issues/10634:147,deployability,observ,observables,147,"[RF] Support global obserables in generation of toy datasets; After https://github.com/root-project/root/pull/8878, it is possible to store global observables in RooFit datasets via `RooAbsData::setGlobalObservables()` and `getGlobalObservables()`. Global observables should also be considered in toy dataset generation via `RooAbsPdf::generate()` as follows:. 1. Add a global observable with the value directly taken from the `RooAbsReal` to the dataset:. `model.generate(x, 1000, GlobalObservables(g))`. 2. Also sample global observable value from the model when generating a toy dataset:. `model.generate({x, g}, 1000, GlobalObservables(g))`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10634
https://github.com/root-project/root/issues/10634:256,deployability,observ,observables,256,"[RF] Support global obserables in generation of toy datasets; After https://github.com/root-project/root/pull/8878, it is possible to store global observables in RooFit datasets via `RooAbsData::setGlobalObservables()` and `getGlobalObservables()`. Global observables should also be considered in toy dataset generation via `RooAbsPdf::generate()` as follows:. 1. Add a global observable with the value directly taken from the `RooAbsReal` to the dataset:. `model.generate(x, 1000, GlobalObservables(g))`. 2. Also sample global observable value from the model when generating a toy dataset:. `model.generate({x, g}, 1000, GlobalObservables(g))`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10634
https://github.com/root-project/root/issues/10634:377,deployability,observ,observable,377,"[RF] Support global obserables in generation of toy datasets; After https://github.com/root-project/root/pull/8878, it is possible to store global observables in RooFit datasets via `RooAbsData::setGlobalObservables()` and `getGlobalObservables()`. Global observables should also be considered in toy dataset generation via `RooAbsPdf::generate()` as follows:. 1. Add a global observable with the value directly taken from the `RooAbsReal` to the dataset:. `model.generate(x, 1000, GlobalObservables(g))`. 2. Also sample global observable value from the model when generating a toy dataset:. `model.generate({x, g}, 1000, GlobalObservables(g))`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10634
https://github.com/root-project/root/issues/10634:528,deployability,observ,observable,528,"[RF] Support global obserables in generation of toy datasets; After https://github.com/root-project/root/pull/8878, it is possible to store global observables in RooFit datasets via `RooAbsData::setGlobalObservables()` and `getGlobalObservables()`. Global observables should also be considered in toy dataset generation via `RooAbsPdf::generate()` as follows:. 1. Add a global observable with the value directly taken from the `RooAbsReal` to the dataset:. `model.generate(x, 1000, GlobalObservables(g))`. 2. Also sample global observable value from the model when generating a toy dataset:. `model.generate({x, g}, 1000, GlobalObservables(g))`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10634
https://github.com/root-project/root/issues/10634:458,energy efficiency,model,model,458,"[RF] Support global obserables in generation of toy datasets; After https://github.com/root-project/root/pull/8878, it is possible to store global observables in RooFit datasets via `RooAbsData::setGlobalObservables()` and `getGlobalObservables()`. Global observables should also be considered in toy dataset generation via `RooAbsPdf::generate()` as follows:. 1. Add a global observable with the value directly taken from the `RooAbsReal` to the dataset:. `model.generate(x, 1000, GlobalObservables(g))`. 2. Also sample global observable value from the model when generating a toy dataset:. `model.generate({x, g}, 1000, GlobalObservables(g))`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10634
https://github.com/root-project/root/issues/10634:554,energy efficiency,model,model,554,"[RF] Support global obserables in generation of toy datasets; After https://github.com/root-project/root/pull/8878, it is possible to store global observables in RooFit datasets via `RooAbsData::setGlobalObservables()` and `getGlobalObservables()`. Global observables should also be considered in toy dataset generation via `RooAbsPdf::generate()` as follows:. 1. Add a global observable with the value directly taken from the `RooAbsReal` to the dataset:. `model.generate(x, 1000, GlobalObservables(g))`. 2. Also sample global observable value from the model when generating a toy dataset:. `model.generate({x, g}, 1000, GlobalObservables(g))`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10634
https://github.com/root-project/root/issues/10634:593,energy efficiency,model,model,593,"[RF] Support global obserables in generation of toy datasets; After https://github.com/root-project/root/pull/8878, it is possible to store global observables in RooFit datasets via `RooAbsData::setGlobalObservables()` and `getGlobalObservables()`. Global observables should also be considered in toy dataset generation via `RooAbsPdf::generate()` as follows:. 1. Add a global observable with the value directly taken from the `RooAbsReal` to the dataset:. `model.generate(x, 1000, GlobalObservables(g))`. 2. Also sample global observable value from the model when generating a toy dataset:. `model.generate({x, g}, 1000, GlobalObservables(g))`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10634
https://github.com/root-project/root/issues/10634:458,security,model,model,458,"[RF] Support global obserables in generation of toy datasets; After https://github.com/root-project/root/pull/8878, it is possible to store global observables in RooFit datasets via `RooAbsData::setGlobalObservables()` and `getGlobalObservables()`. Global observables should also be considered in toy dataset generation via `RooAbsPdf::generate()` as follows:. 1. Add a global observable with the value directly taken from the `RooAbsReal` to the dataset:. `model.generate(x, 1000, GlobalObservables(g))`. 2. Also sample global observable value from the model when generating a toy dataset:. `model.generate({x, g}, 1000, GlobalObservables(g))`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10634
https://github.com/root-project/root/issues/10634:554,security,model,model,554,"[RF] Support global obserables in generation of toy datasets; After https://github.com/root-project/root/pull/8878, it is possible to store global observables in RooFit datasets via `RooAbsData::setGlobalObservables()` and `getGlobalObservables()`. Global observables should also be considered in toy dataset generation via `RooAbsPdf::generate()` as follows:. 1. Add a global observable with the value directly taken from the `RooAbsReal` to the dataset:. `model.generate(x, 1000, GlobalObservables(g))`. 2. Also sample global observable value from the model when generating a toy dataset:. `model.generate({x, g}, 1000, GlobalObservables(g))`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10634
https://github.com/root-project/root/issues/10634:593,security,model,model,593,"[RF] Support global obserables in generation of toy datasets; After https://github.com/root-project/root/pull/8878, it is possible to store global observables in RooFit datasets via `RooAbsData::setGlobalObservables()` and `getGlobalObservables()`. Global observables should also be considered in toy dataset generation via `RooAbsPdf::generate()` as follows:. 1. Add a global observable with the value directly taken from the `RooAbsReal` to the dataset:. `model.generate(x, 1000, GlobalObservables(g))`. 2. Also sample global observable value from the model when generating a toy dataset:. `model.generate({x, g}, 1000, GlobalObservables(g))`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10634
https://github.com/root-project/root/issues/10634:147,testability,observ,observables,147,"[RF] Support global obserables in generation of toy datasets; After https://github.com/root-project/root/pull/8878, it is possible to store global observables in RooFit datasets via `RooAbsData::setGlobalObservables()` and `getGlobalObservables()`. Global observables should also be considered in toy dataset generation via `RooAbsPdf::generate()` as follows:. 1. Add a global observable with the value directly taken from the `RooAbsReal` to the dataset:. `model.generate(x, 1000, GlobalObservables(g))`. 2. Also sample global observable value from the model when generating a toy dataset:. `model.generate({x, g}, 1000, GlobalObservables(g))`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10634
https://github.com/root-project/root/issues/10634:256,testability,observ,observables,256,"[RF] Support global obserables in generation of toy datasets; After https://github.com/root-project/root/pull/8878, it is possible to store global observables in RooFit datasets via `RooAbsData::setGlobalObservables()` and `getGlobalObservables()`. Global observables should also be considered in toy dataset generation via `RooAbsPdf::generate()` as follows:. 1. Add a global observable with the value directly taken from the `RooAbsReal` to the dataset:. `model.generate(x, 1000, GlobalObservables(g))`. 2. Also sample global observable value from the model when generating a toy dataset:. `model.generate({x, g}, 1000, GlobalObservables(g))`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10634
https://github.com/root-project/root/issues/10634:377,testability,observ,observable,377,"[RF] Support global obserables in generation of toy datasets; After https://github.com/root-project/root/pull/8878, it is possible to store global observables in RooFit datasets via `RooAbsData::setGlobalObservables()` and `getGlobalObservables()`. Global observables should also be considered in toy dataset generation via `RooAbsPdf::generate()` as follows:. 1. Add a global observable with the value directly taken from the `RooAbsReal` to the dataset:. `model.generate(x, 1000, GlobalObservables(g))`. 2. Also sample global observable value from the model when generating a toy dataset:. `model.generate({x, g}, 1000, GlobalObservables(g))`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10634
https://github.com/root-project/root/issues/10634:528,testability,observ,observable,528,"[RF] Support global obserables in generation of toy datasets; After https://github.com/root-project/root/pull/8878, it is possible to store global observables in RooFit datasets via `RooAbsData::setGlobalObservables()` and `getGlobalObservables()`. Global observables should also be considered in toy dataset generation via `RooAbsPdf::generate()` as follows:. 1. Add a global observable with the value directly taken from the `RooAbsReal` to the dataset:. `model.generate(x, 1000, GlobalObservables(g))`. 2. Also sample global observable value from the model when generating a toy dataset:. `model.generate({x, g}, 1000, GlobalObservables(g))`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10634
https://github.com/root-project/root/issues/10634:5,usability,Support,Support,5,"[RF] Support global obserables in generation of toy datasets; After https://github.com/root-project/root/pull/8878, it is possible to store global observables in RooFit datasets via `RooAbsData::setGlobalObservables()` and `getGlobalObservables()`. Global observables should also be considered in toy dataset generation via `RooAbsPdf::generate()` as follows:. 1. Add a global observable with the value directly taken from the `RooAbsReal` to the dataset:. `model.generate(x, 1000, GlobalObservables(g))`. 2. Also sample global observable value from the model when generating a toy dataset:. `model.generate({x, g}, 1000, GlobalObservables(g))`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10634
https://github.com/root-project/root/pull/10635:530,deployability,Updat,Update,530,"[ntuple] `std::pair` RField support; This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:. - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`. Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`. - Update `doc/specifications.md`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10635:613,deployability,updat,updated,613,"[ntuple] `std::pair` RField support; This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:. - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`. Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`. - Update `doc/specifications.md`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10635:399,interoperability,specif,specified,399,"[ntuple] `std::pair` RField support; This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:. - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`. Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`. - Update `doc/specifications.md`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10635:542,interoperability,specif,specifications,542,"[ntuple] `std::pair` RField support; This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:. - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`. Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`. - Update `doc/specifications.md`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10635:321,modifiability,inherit,inherits,321,"[ntuple] `std::pair` RField support; This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:. - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`. Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`. - Update `doc/specifications.md`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10635:530,safety,Updat,Update,530,"[ntuple] `std::pair` RField support; This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:. - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`. Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`. - Update `doc/specifications.md`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10635:583,safety,test,tested,583,"[ntuple] `std::pair` RField support; This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:. - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`. Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`. - Update `doc/specifications.md`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10635:613,safety,updat,updated,613,"[ntuple] `std::pair` RField support; This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:. - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`. Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`. - Update `doc/specifications.md`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10635:530,security,Updat,Update,530,"[ntuple] `std::pair` RField support; This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:. - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`. Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`. - Update `doc/specifications.md`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10635:613,security,updat,updated,613,"[ntuple] `std::pair` RField support; This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:. - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`. Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`. - Update `doc/specifications.md`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10635:583,testability,test,tested,583,"[ntuple] `std::pair` RField support; This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:. - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`. Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`. - Update `doc/specifications.md`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10635:28,usability,support,support,28,"[ntuple] `std::pair` RField support; This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:. - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`. Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`. - Update `doc/specifications.md`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10635:67,usability,support,support,67,"[ntuple] `std::pair` RField support; This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:. - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`. Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`. - Update `doc/specifications.md`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10635:175,usability,prototyp,prototype,175,"[ntuple] `std::pair` RField support; This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:. - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`. Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`. - Update `doc/specifications.md`. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10636:66,deployability,version,version,66,"RBrowser show last cycle, better TCanvas support; 1. Support full version of TCanvas in RBrowser (via gEnv settings). 2. Support TAxis context menus in RCanvas. 3. Let change ""LastCycle"" flag to in settings menu to let display only last TKey cycles. 4. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10636
https://github.com/root-project/root/pull/10636:253,deployability,Updat,Update,253,"RBrowser show last cycle, better TCanvas support; 1. Support full version of TCanvas in RBrowser (via gEnv settings). 2. Support TAxis context menus in RCanvas. 3. Let change ""LastCycle"" flag to in settings menu to let display only last TKey cycles. 4. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10636
https://github.com/root-project/root/pull/10636:66,integrability,version,version,66,"RBrowser show last cycle, better TCanvas support; 1. Support full version of TCanvas in RBrowser (via gEnv settings). 2. Support TAxis context menus in RCanvas. 3. Let change ""LastCycle"" flag to in settings menu to let display only last TKey cycles. 4. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10636
https://github.com/root-project/root/pull/10636:66,modifiability,version,version,66,"RBrowser show last cycle, better TCanvas support; 1. Support full version of TCanvas in RBrowser (via gEnv settings). 2. Support TAxis context menus in RCanvas. 3. Let change ""LastCycle"" flag to in settings menu to let display only last TKey cycles. 4. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10636
https://github.com/root-project/root/pull/10636:152,reliability,RCa,RCanvas,152,"RBrowser show last cycle, better TCanvas support; 1. Support full version of TCanvas in RBrowser (via gEnv settings). 2. Support TAxis context menus in RCanvas. 3. Let change ""LastCycle"" flag to in settings menu to let display only last TKey cycles. 4. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10636
https://github.com/root-project/root/pull/10636:253,safety,Updat,Update,253,"RBrowser show last cycle, better TCanvas support; 1. Support full version of TCanvas in RBrowser (via gEnv settings). 2. Support TAxis context menus in RCanvas. 3. Let change ""LastCycle"" flag to in settings menu to let display only last TKey cycles. 4. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10636
https://github.com/root-project/root/pull/10636:253,security,Updat,Update,253,"RBrowser show last cycle, better TCanvas support; 1. Support full version of TCanvas in RBrowser (via gEnv settings). 2. Support TAxis context menus in RCanvas. 3. Let change ""LastCycle"" flag to in settings menu to let display only last TKey cycles. 4. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10636
https://github.com/root-project/root/pull/10636:135,testability,context,context,135,"RBrowser show last cycle, better TCanvas support; 1. Support full version of TCanvas in RBrowser (via gEnv settings). 2. Support TAxis context menus in RCanvas. 3. Let change ""LastCycle"" flag to in settings menu to let display only last TKey cycles. 4. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10636
https://github.com/root-project/root/pull/10636:41,usability,support,support,41,"RBrowser show last cycle, better TCanvas support; 1. Support full version of TCanvas in RBrowser (via gEnv settings). 2. Support TAxis context menus in RCanvas. 3. Let change ""LastCycle"" flag to in settings menu to let display only last TKey cycles. 4. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10636
https://github.com/root-project/root/pull/10636:53,usability,Support,Support,53,"RBrowser show last cycle, better TCanvas support; 1. Support full version of TCanvas in RBrowser (via gEnv settings). 2. Support TAxis context menus in RCanvas. 3. Let change ""LastCycle"" flag to in settings menu to let display only last TKey cycles. 4. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10636
https://github.com/root-project/root/pull/10636:121,usability,Support,Support,121,"RBrowser show last cycle, better TCanvas support; 1. Support full version of TCanvas in RBrowser (via gEnv settings). 2. Support TAxis context menus in RCanvas. 3. Let change ""LastCycle"" flag to in settings menu to let display only last TKey cycles. 4. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10636
https://github.com/root-project/root/pull/10636:143,usability,menu,menus,143,"RBrowser show last cycle, better TCanvas support; 1. Support full version of TCanvas in RBrowser (via gEnv settings). 2. Support TAxis context menus in RCanvas. 3. Let change ""LastCycle"" flag to in settings menu to let display only last TKey cycles. 4. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10636
https://github.com/root-project/root/pull/10636:207,usability,menu,menu,207,"RBrowser show last cycle, better TCanvas support; 1. Support full version of TCanvas in RBrowser (via gEnv settings). 2. Support TAxis context menus in RCanvas. 3. Let change ""LastCycle"" flag to in settings menu to let display only last TKey cycles. 4. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10636
https://github.com/root-project/root/pull/10637:89,usability,tool,tooltip,89,[jsroot] correctly cleanup canvas painter 6.26 [skip-ci]; Also add TGraph point index to tooltip.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10637
https://github.com/root-project/root/issues/10640:1406,availability,error,error,1406,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1437,availability,Error,Error,1437,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1743,availability,error,error,1743,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:23,deployability,fail,fails,23,"`gSystem.CompileMacro` fails if unrelated file is removed from directory; ### Describe the bug. Suppose the following directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:486,deployability,artifact,artifacts,486,"`gSystem.CompileMacro` fails if unrelated file is removed from directory; ### Describe the bug. Suppose the following directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1712,deployability,fail,failed,1712,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:2053,deployability,artifact,artifacts,2053,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:504,interoperability,share,shared,504,"`gSystem.CompileMacro` fails if unrelated file is removed from directory; ### Describe the bug. Suppose the following directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:931,interoperability,share,shared,931,"`gSystem.CompileMacro` fails if unrelated file is removed from directory; ### Describe the bug. Suppose the following directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1237,interoperability,share,shared,1237,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1789,interoperability,share,shared,1789,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1956,interoperability,share,shared,1956,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:681,modifiability,pac,packaged,681,"`gSystem.CompileMacro` fails if unrelated file is removed from directory; ### Describe the bug. Suppose the following directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1406,performance,error,error,1406,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1437,performance,Error,Error,1437,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1743,performance,error,error,1743,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:23,reliability,fail,fails,23,"`gSystem.CompileMacro` fails if unrelated file is removed from directory; ### Describe the bug. Suppose the following directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1712,reliability,fail,failed,1712,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1406,safety,error,error,1406,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1437,safety,Error,Error,1437,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1743,safety,error,error,1743,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1920,safety,compl,completely,1920,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:412,security,session,session,412,"`gSystem.CompileMacro` fails if unrelated file is removed from directory; ### Describe the bug. Suppose the following directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:564,security,session,session,564,"`gSystem.CompileMacro` fails if unrelated file is removed from directory; ### Describe the bug. Suppose the following directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1827,security,hardcod,hardcoded,1827,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1920,security,compl,completely,1920,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:766,usability,help,help,766,"`gSystem.CompileMacro` fails if unrelated file is removed from directory; ### Describe the bug. Suppose the following directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1406,usability,error,error,1406,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1437,usability,Error,Error,1437,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1743,usability,error,error,1743,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1850,usability,command,command,1850,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1892,usability,behavi,behavior,1892,"llowing directory. ```. : ls. file1.cxx file2.cxx. ```. With. ```cpp. // file1.cxx. namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx. namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE. ```. If I do the following:. 1. Open Python session. 2. Run gSystem.CompileMacro on the first file. 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open. 4. Run gSystem.CompileMacro on the second file. Then the following happens. ```python. Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.gSystem.CompileMacro(""file1.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so. 1. >>> for filename in os.listdir():. ... if filename.startswith(""file1""):. ... os.remove(filename). ... . >>> os.listdir(). ['file2.cxx']. >>> ROOT.gSystem.CompileMacro(""file2.cxx""). Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so. sh: -c: line 1: unexpected EOF while looking for matching `""'. sh: -c: line 2: syntax error: unexpected end of file. Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;. [... a lot of compilation flags here ...]. ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed! 0. ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup. ROOT 6.26.02 from conda. Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/pull/10641:479,availability,slo,slow,479,Minor Geometry optimization [v6-24]; # This Pull request:. Returns the newly added node from call to TGeoVolume::AddNode. Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10641:222,deployability,build,building,222,Minor Geometry optimization [v6-24]; # This Pull request:. Returns the newly added node from call to TGeoVolume::AddNode. Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10641:452,deployability,build,building,452,Minor Geometry optimization [v6-24]; # This Pull request:. Returns the newly added node from call to TGeoVolume::AddNode. Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10641:704,deployability,updat,updated,704,Minor Geometry optimization [v6-24]; # This Pull request:. Returns the newly added node from call to TGeoVolume::AddNode. Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10641:15,energy efficiency,optim,optimization,15,Minor Geometry optimization [v6-24]; # This Pull request:. Returns the newly added node from call to TGeoVolume::AddNode. Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10641:203,energy efficiency,Profil,Profiling,203,Minor Geometry optimization [v6-24]; # This Pull request:. Returns the newly added node from call to TGeoVolume::AddNode. Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10641:15,performance,optimiz,optimization,15,Minor Geometry optimization [v6-24]; # This Pull request:. Returns the newly added node from call to TGeoVolume::AddNode. Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10641:203,performance,Profil,Profiling,203,Minor Geometry optimization [v6-24]; # This Pull request:. Returns the newly added node from call to TGeoVolume::AddNode. Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10641:479,reliability,slo,slow,479,Minor Geometry optimization [v6-24]; # This Pull request:. Returns the newly added node from call to TGeoVolume::AddNode. Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10641:142,safety,avoid,avoid,142,Minor Geometry optimization [v6-24]; # This Pull request:. Returns the newly added node from call to TGeoVolume::AddNode. Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10641:674,safety,test,tested,674,Minor Geometry optimization [v6-24]; # This Pull request:. Returns the newly added node from call to TGeoVolume::AddNode. Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10641:704,safety,updat,updated,704,Minor Geometry optimization [v6-24]; # This Pull request:. Returns the newly added node from call to TGeoVolume::AddNode. Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10641:704,security,updat,updated,704,Minor Geometry optimization [v6-24]; # This Pull request:. Returns the newly added node from call to TGeoVolume::AddNode. Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10641:674,testability,test,tested,674,Minor Geometry optimization [v6-24]; # This Pull request:. Returns the newly added node from call to TGeoVolume::AddNode. Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10641:429,usability,navigat,navigation,429,Minor Geometry optimization [v6-24]; # This Pull request:. Returns the newly added node from call to TGeoVolume::AddNode. Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10642:483,availability,slo,slow,483,Minor Geometry optimization [v6-26]; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10642:226,deployability,build,building,226,Minor Geometry optimization [v6-26]; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10642:456,deployability,build,building,456,Minor Geometry optimization [v6-26]; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10642:708,deployability,updat,updated,708,Minor Geometry optimization [v6-26]; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10642:15,energy efficiency,optim,optimization,15,Minor Geometry optimization [v6-26]; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10642:207,energy efficiency,Profil,Profiling,207,Minor Geometry optimization [v6-26]; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10642:15,performance,optimiz,optimization,15,Minor Geometry optimization [v6-26]; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10642:207,performance,Profil,Profiling,207,Minor Geometry optimization [v6-26]; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10642:483,reliability,slo,slow,483,Minor Geometry optimization [v6-26]; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10642:146,safety,avoid,avoid,146,Minor Geometry optimization [v6-26]; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10642:678,safety,test,tested,678,Minor Geometry optimization [v6-26]; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10642:708,safety,updat,updated,708,Minor Geometry optimization [v6-26]; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10642:708,security,updat,updated,708,Minor Geometry optimization [v6-26]; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10642:678,testability,test,tested,678,Minor Geometry optimization [v6-26]; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10642:433,usability,navigat,navigation,433,Minor Geometry optimization [v6-26]; # This Pull request:. - Returns the newly added node from call to TGeoVolume::AddNode. - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10643:203,integrability,rout,routines,203,[RF] Synchronize param settings in RooMinimizer when returning function; Some users get the `RooMinimizer::getMultiGenFcn()` to get a pointer to. the fit function object passed to minuit to do their own routines before. doing the actual Minimization. The parameters settings should better be. synchronized before returning. @cburgard,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10643
https://github.com/root-project/root/pull/10643:255,modifiability,paramet,parameters,255,[RF] Synchronize param settings in RooMinimizer when returning function; Some users get the `RooMinimizer::getMultiGenFcn()` to get a pointer to. the fit function object passed to minuit to do their own routines before. doing the actual Minimization. The parameters settings should better be. synchronized before returning. @cburgard,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10643
https://github.com/root-project/root/pull/10643:5,performance,Synch,Synchronize,5,[RF] Synchronize param settings in RooMinimizer when returning function; Some users get the `RooMinimizer::getMultiGenFcn()` to get a pointer to. the fit function object passed to minuit to do their own routines before. doing the actual Minimization. The parameters settings should better be. synchronized before returning. @cburgard,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10643
https://github.com/root-project/root/pull/10643:293,performance,synch,synchronized,293,[RF] Synchronize param settings in RooMinimizer when returning function; Some users get the `RooMinimizer::getMultiGenFcn()` to get a pointer to. the fit function object passed to minuit to do their own routines before. doing the actual Minimization. The parameters settings should better be. synchronized before returning. @cburgard,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10643
https://github.com/root-project/root/pull/10643:78,usability,user,users,78,[RF] Synchronize param settings in RooMinimizer when returning function; Some users get the `RooMinimizer::getMultiGenFcn()` to get a pointer to. the fit function object passed to minuit to do their own routines before. doing the actual Minimization. The parameters settings should better be. synchronized before returning. @cburgard,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10643
https://github.com/root-project/root/pull/10643:237,usability,Minim,Minimization,237,[RF] Synchronize param settings in RooMinimizer when returning function; Some users get the `RooMinimizer::getMultiGenFcn()` to get a pointer to. the fit function object passed to minuit to do their own routines before. doing the actual Minimization. The parameters settings should better be. synchronized before returning. @cburgard,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10643
https://github.com/root-project/root/pull/10644:227,deployability,updat,updated,227,Revert assertion check in Declbase.cpp; # This Pull request:. Revert https://github.com/vgvassilev/clang/commit/1c6cc386f62f9a5a87cf268b4d35199721aec0f4. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10644
https://github.com/root-project/root/pull/10644:197,safety,test,tested,197,Revert assertion check in Declbase.cpp; # This Pull request:. Revert https://github.com/vgvassilev/clang/commit/1c6cc386f62f9a5a87cf268b4d35199721aec0f4. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10644
https://github.com/root-project/root/pull/10644:227,safety,updat,updated,227,Revert assertion check in Declbase.cpp; # This Pull request:. Revert https://github.com/vgvassilev/clang/commit/1c6cc386f62f9a5a87cf268b4d35199721aec0f4. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10644
https://github.com/root-project/root/pull/10644:227,security,updat,updated,227,Revert assertion check in Declbase.cpp; # This Pull request:. Revert https://github.com/vgvassilev/clang/commit/1c6cc386f62f9a5a87cf268b4d35199721aec0f4. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10644
https://github.com/root-project/root/pull/10644:7,testability,assert,assertion,7,Revert assertion check in Declbase.cpp; # This Pull request:. Revert https://github.com/vgvassilev/clang/commit/1c6cc386f62f9a5a87cf268b4d35199721aec0f4. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10644
https://github.com/root-project/root/pull/10644:197,testability,test,tested,197,Revert assertion check in Declbase.cpp; # This Pull request:. Revert https://github.com/vgvassilev/clang/commit/1c6cc386f62f9a5a87cf268b4d35199721aec0f4. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10644
https://github.com/root-project/root/issues/10645:380,availability,Error,Error,380,"[TTreeReader] Cannot read Float16_t branch; Reproducer:. ```cpp. #include <TFile.h>. #include <TTreeReader.h>. int main() {. {. TFile f(""f16.root"", ""recreate"");. TTree t(""t"", ""t"");. float x = 42.f;. t.Branch(""x"", &x, ""x/f"");. t.Fill();. f.Write();. }. {. TFile f(""f16.root"");. TTreeReader r(""t"", &f);. TTreeReaderValue<Float16_t> rv(r, ""x"");. r.Next();. }. }. ```. produces. ```. Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type Float16_t, which does not have a dictionary. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10645
https://github.com/root-project/root/issues/10645:441,deployability,contain,contains,441,"[TTreeReader] Cannot read Float16_t branch; Reproducer:. ```cpp. #include <TFile.h>. #include <TTreeReader.h>. int main() {. {. TFile f(""f16.root"", ""recreate"");. TTree t(""t"", ""t"");. float x = 42.f;. t.Branch(""x"", &x, ""x/f"");. t.Fill();. f.Write();. }. {. TFile f(""f16.root"");. TTreeReader r(""t"", &f);. TTreeReaderValue<Float16_t> rv(r, ""x"");. r.Next();. }. }. ```. produces. ```. Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type Float16_t, which does not have a dictionary. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10645
https://github.com/root-project/root/issues/10645:380,performance,Error,Error,380,"[TTreeReader] Cannot read Float16_t branch; Reproducer:. ```cpp. #include <TFile.h>. #include <TTreeReader.h>. int main() {. {. TFile f(""f16.root"", ""recreate"");. TTree t(""t"", ""t"");. float x = 42.f;. t.Branch(""x"", &x, ""x/f"");. t.Fill();. f.Write();. }. {. TFile f(""f16.root"");. TTreeReader r(""t"", &f);. TTreeReaderValue<Float16_t> rv(r, ""x"");. r.Next();. }. }. ```. produces. ```. Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type Float16_t, which does not have a dictionary. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10645
https://github.com/root-project/root/issues/10645:480,reliability,doe,does,480,"[TTreeReader] Cannot read Float16_t branch; Reproducer:. ```cpp. #include <TFile.h>. #include <TTreeReader.h>. int main() {. {. TFile f(""f16.root"", ""recreate"");. TTree t(""t"", ""t"");. float x = 42.f;. t.Branch(""x"", &x, ""x/f"");. t.Fill();. f.Write();. }. {. TFile f(""f16.root"");. TTreeReader r(""t"", &f);. TTreeReaderValue<Float16_t> rv(r, ""x"");. r.Next();. }. }. ```. produces. ```. Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type Float16_t, which does not have a dictionary. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10645
https://github.com/root-project/root/issues/10645:380,safety,Error,Error,380,"[TTreeReader] Cannot read Float16_t branch; Reproducer:. ```cpp. #include <TFile.h>. #include <TTreeReader.h>. int main() {. {. TFile f(""f16.root"", ""recreate"");. TTree t(""t"", ""t"");. float x = 42.f;. t.Branch(""x"", &x, ""x/f"");. t.Fill();. f.Write();. }. {. TFile f(""f16.root"");. TTreeReader r(""t"", &f);. TTreeReaderValue<Float16_t> rv(r, ""x"");. r.Next();. }. }. ```. produces. ```. Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type Float16_t, which does not have a dictionary. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10645
https://github.com/root-project/root/issues/10645:380,usability,Error,Error,380,"[TTreeReader] Cannot read Float16_t branch; Reproducer:. ```cpp. #include <TFile.h>. #include <TTreeReader.h>. int main() {. {. TFile f(""f16.root"", ""recreate"");. TTree t(""t"", ""t"");. float x = 42.f;. t.Branch(""x"", &x, ""x/f"");. t.Fill();. f.Write();. }. {. TFile f(""f16.root"");. TTreeReader r(""t"", &f);. TTreeReaderValue<Float16_t> rv(r, ""x"");. r.Next();. }. }. ```. produces. ```. Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type Float16_t, which does not have a dictionary. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10645
https://github.com/root-project/root/pull/10647:19,modifiability,Exten,Extended,19,Fix use of RooFit::Extended in createNLL; Avoid using a deprecated function in RooAbsData::createHistogram.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10647
https://github.com/root-project/root/pull/10647:42,safety,Avoid,Avoid,42,Fix use of RooFit::Extended in createNLL; Avoid using a deprecated function in RooAbsData::createHistogram.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10647
https://github.com/root-project/root/pull/10648:326,availability,cluster,cluster,326,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:417,availability,cluster,cluster,417,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:511,availability,cluster,cluster,511,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:733,availability,operat,operations,733,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:326,deployability,cluster,cluster,326,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:417,deployability,cluster,cluster,417,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:511,deployability,cluster,cluster,511,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:282,energy efficiency,optim,optimized,282,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:863,integrability,Filter,Filter,863,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:78,interoperability,distribut,distributed,78,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:219,interoperability,Distribut,Distributed,219,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:270,interoperability,Distribut,Distributed,270,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:5,modifiability,Refact,Refactor,5,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:5,performance,Refactor,Refactor,5,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:282,performance,optimiz,optimized,282,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:44,safety,Test,Tested,44,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:1039,safety,Test,Test,1039,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:1100,safety,Test,Test,1100,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:1204,safety,input,inputfiles,1204,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:44,testability,Test,Tested,44,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:501,testability,mock,mock,501,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:1039,testability,Test,Test,1039,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:1100,testability,Test,Test,1100,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:36,usability,statu,status,36,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:1204,usability,input,inputfiles,1204,"[DF] Refactor CppWorkflow to latest status; Tested with. ```python. from dask.distributed import LocalCluster, Client. import ROOT. # Point RDataFrame calls to Dask RDataFrame object. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():. cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True). client = Client(cluster). return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine. connection = create_connection(). # Create an RDataFrame that will use Dask as a backend for computations. df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations. def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""). def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""). c1 = def1.Count(). c2 = def2.Count(). print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count. c3 = df.Count(). print(""\n\n"", c3.GetValue()). # Test AsNumpy. print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot. snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""). print(snap._headnode.inputfiles). print(snap.Count().GetValue()). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10650:286,availability,state,state,286,"[Math] Avoid cloning before fitting the user provided FCN; In case of an objective funciton (FCN) given by the user, like in case of RooMinimizer, we don't clone the FCN before fitting, but we do after fitting or after running Hesse/Minos. In this way the user can have the correct FCN state information updated during the fit. For example, with this Pull request, the correct number of function call can be returned by `RooMinimizer::evalCounter()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10650
https://github.com/root-project/root/pull/10650:304,deployability,updat,updated,304,"[Math] Avoid cloning before fitting the user provided FCN; In case of an objective funciton (FCN) given by the user, like in case of RooMinimizer, we don't clone the FCN before fitting, but we do after fitting or after running Hesse/Minos. In this way the user can have the correct FCN state information updated during the fit. For example, with this Pull request, the correct number of function call can be returned by `RooMinimizer::evalCounter()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10650
https://github.com/root-project/root/pull/10650:286,integrability,state,state,286,"[Math] Avoid cloning before fitting the user provided FCN; In case of an objective funciton (FCN) given by the user, like in case of RooMinimizer, we don't clone the FCN before fitting, but we do after fitting or after running Hesse/Minos. In this way the user can have the correct FCN state information updated during the fit. For example, with this Pull request, the correct number of function call can be returned by `RooMinimizer::evalCounter()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10650
https://github.com/root-project/root/pull/10650:7,safety,Avoid,Avoid,7,"[Math] Avoid cloning before fitting the user provided FCN; In case of an objective funciton (FCN) given by the user, like in case of RooMinimizer, we don't clone the FCN before fitting, but we do after fitting or after running Hesse/Minos. In this way the user can have the correct FCN state information updated during the fit. For example, with this Pull request, the correct number of function call can be returned by `RooMinimizer::evalCounter()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10650
https://github.com/root-project/root/pull/10650:304,safety,updat,updated,304,"[Math] Avoid cloning before fitting the user provided FCN; In case of an objective funciton (FCN) given by the user, like in case of RooMinimizer, we don't clone the FCN before fitting, but we do after fitting or after running Hesse/Minos. In this way the user can have the correct FCN state information updated during the fit. For example, with this Pull request, the correct number of function call can be returned by `RooMinimizer::evalCounter()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10650
https://github.com/root-project/root/pull/10650:304,security,updat,updated,304,"[Math] Avoid cloning before fitting the user provided FCN; In case of an objective funciton (FCN) given by the user, like in case of RooMinimizer, we don't clone the FCN before fitting, but we do after fitting or after running Hesse/Minos. In this way the user can have the correct FCN state information updated during the fit. For example, with this Pull request, the correct number of function call can be returned by `RooMinimizer::evalCounter()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10650
https://github.com/root-project/root/pull/10650:40,usability,user,user,40,"[Math] Avoid cloning before fitting the user provided FCN; In case of an objective funciton (FCN) given by the user, like in case of RooMinimizer, we don't clone the FCN before fitting, but we do after fitting or after running Hesse/Minos. In this way the user can have the correct FCN state information updated during the fit. For example, with this Pull request, the correct number of function call can be returned by `RooMinimizer::evalCounter()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10650
https://github.com/root-project/root/pull/10650:111,usability,user,user,111,"[Math] Avoid cloning before fitting the user provided FCN; In case of an objective funciton (FCN) given by the user, like in case of RooMinimizer, we don't clone the FCN before fitting, but we do after fitting or after running Hesse/Minos. In this way the user can have the correct FCN state information updated during the fit. For example, with this Pull request, the correct number of function call can be returned by `RooMinimizer::evalCounter()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10650
https://github.com/root-project/root/pull/10650:256,usability,user,user,256,"[Math] Avoid cloning before fitting the user provided FCN; In case of an objective funciton (FCN) given by the user, like in case of RooMinimizer, we don't clone the FCN before fitting, but we do after fitting or after running Hesse/Minos. In this way the user can have the correct FCN state information updated during the fit. For example, with this Pull request, the correct number of function call can be returned by `RooMinimizer::evalCounter()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10650
https://github.com/root-project/root/pull/10651:15,availability,restor,restore,15,"[RF] Correctly restore the error definition in the Minimizer class after contour(); This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the . values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10651
https://github.com/root-project/root/pull/10651:27,availability,error,error,27,"[RF] Correctly restore the error definition in the Minimizer class after contour(); This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the . values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10651
https://github.com/root-project/root/pull/10651:132,availability,error,error,132,"[RF] Correctly restore the error definition in the Minimizer class after contour(); This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the . values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10651
https://github.com/root-project/root/pull/10651:27,performance,error,error,27,"[RF] Correctly restore the error definition in the Minimizer class after contour(); This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the . values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10651
https://github.com/root-project/root/pull/10651:132,performance,error,error,132,"[RF] Correctly restore the error definition in the Minimizer class after contour(); This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the . values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10651
https://github.com/root-project/root/pull/10651:209,performance,time,times,209,"[RF] Correctly restore the error definition in the Minimizer class after contour(); This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the . values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10651
https://github.com/root-project/root/pull/10651:15,reliability,restor,restore,15,"[RF] Correctly restore the error definition in the Minimizer class after contour(); This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the . values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10651
https://github.com/root-project/root/pull/10651:321,reliability,doe,does,321,"[RF] Correctly restore the error definition in the Minimizer class after contour(); This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the . values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10651
https://github.com/root-project/root/pull/10651:27,safety,error,error,27,"[RF] Correctly restore the error definition in the Minimizer class after contour(); This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the . values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10651
https://github.com/root-project/root/pull/10651:132,safety,error,error,132,"[RF] Correctly restore the error definition in the Minimizer class after contour(); This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the . values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10651
https://github.com/root-project/root/pull/10651:27,usability,error,error,27,"[RF] Correctly restore the error definition in the Minimizer class after contour(); This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the . values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10651
https://github.com/root-project/root/pull/10651:51,usability,Minim,Minimizer,51,"[RF] Correctly restore the error definition in the Minimizer class after contour(); This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the . values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10651
https://github.com/root-project/root/pull/10651:132,usability,error,error,132,"[RF] Correctly restore the error definition in the Minimizer class after contour(); This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the . values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10651
https://github.com/root-project/root/pull/10651:156,usability,Minim,Minimizer,156,"[RF] Correctly restore the error definition in the Minimizer class after contour(); This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the . values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10651
https://github.com/root-project/root/pull/10651:395,usability,Minim,Minimizer,395,"[RF] Correctly restore the error definition in the Minimizer class after contour(); This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the . values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10651
https://github.com/root-project/root/pull/10652:689,deployability,configurat,configurations,689,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1047,deployability,fail,fail,1047,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1156,deployability,fail,failing,1156,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1179,deployability,Updat,Update,1179,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1270,deployability,updat,updated,1270,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:689,integrability,configur,configurations,689,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:376,interoperability,specif,specific,376,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:543,interoperability,standard,standard-layout,543,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1187,interoperability,specif,specifications,1187,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:689,modifiability,configur,configurations,689,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:349,reliability,doe,does,349,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:999,reliability,doe,does,999,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1047,reliability,fail,fail,1047,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1156,reliability,fail,failing,1156,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:254,safety,compl,comply,254,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:610,safety,test,test,610,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1164,safety,test,test,1164,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1179,safety,Updat,Update,1179,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1240,safety,test,tested,1240,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1270,safety,updat,updated,1270,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:254,security,compl,comply,254,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:341,security,ISO,ISO,341,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:689,security,configur,configurations,689,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1179,security,Updat,Update,1179,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1270,security,updat,updated,1270,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:610,testability,test,test,610,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1032,testability,assert,assertion,1032,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1164,testability,test,test,1164,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1240,testability,test,tested,1240,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:29,usability,support,support,29,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:86,usability,support,support,86,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:332,usability,support,support,332,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:657,usability,usab,usable,657,"[ntuple] `std::tuple` RField support; This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:. - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type. - Add `std::tuple` RField support. ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`. Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). . **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list. Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail. This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below). - Update `specifications.md` accordingly. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10653:1451,availability,redund,redundant,1451,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:338,deployability,log,logic,338,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:406,deployability,patch,patch,406,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:511,deployability,log,logic,511,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:1451,deployability,redundan,redundant,1451,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:834,integrability,event,event,834,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:952,integrability,filter,filters,952,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:993,integrability,event,event,993,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:1027,integrability,filter,filters,1027,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:1321,integrability,filter,filter,1321,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:1568,integrability,sub,subsequent,1568,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:413,interoperability,registr,registration,413,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:1438,interoperability,registr,registration,1438,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:857,performance,time,time,857,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:1214,performance,time,time,1214,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:571,reliability,doe,does,571,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:1451,reliability,redundan,redundant,1451,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:154,safety,reme,remember,154,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:338,safety,log,logic,338,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:406,safety,patch,patch,406,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:511,safety,log,logic,511,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:590,safety,reme,remember,590,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:908,safety,except,exception,908,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:1451,safety,redund,redundant,1451,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:1469,safety,review,reviewers,1469,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:338,security,log,logic,338,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:406,security,patch,patch,406,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:511,security,log,logic,511,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:5,testability,Simpl,Simplify,5,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:338,testability,log,logic,338,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:511,testability,log,logic,511,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:1469,testability,review,reviewers,1469,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:5,usability,Simpl,Simplify,5,"[DF] Simplify reg-/deregistration with RLoopManager; Before this commit, whenever a function was constructing a node. of the computation graph it had to ""remember"" to also register. that node with the RLoopManager, which needs to know which nodes. are around so it can tell them e.g. to execute task initialization. and task finalization logic. Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and. deregistration in the destructor of a node, i.e. this logic is. where a reader might expect it to be and new code does not have. to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,. RJittedDefine) don't need to register themselves with the. RLoopManager: the _concrete_ nodes will be registered right. before the event loop, at jitting time, and that is good enough. RJittedFilter is an exception: RLoopManager needs to know what. filters have been booked even before the event loop (i.e. before. concrete filters are instantiated by jitted code) in order to. return a correct list from RLoopManager::GetFiltersNames(). So RJittedFilters register themselves with RLoopManager at. construction time and deregister themselves in. RJittedFilter::SetFilter, i.e. when they can be sure that the. concrete filter has been instantiated in jitted code and it has. been registered with RLoopManager, making the RJittedFilter. registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/issues/10654:87,energy efficiency,alloc,allocator,87,"RAdoptAllocator uses deprecated type aliases; `RAdoptAllocator` uses a number of `std::allocator` member type aliases which are [deprecated in C++ 17](https://en.cppreference.com/w/cpp/memory/allocator) and removed in C++ 20, namely. - `pointer`. - `const_pointer`. - `reference`. - `const_reference`. #8150 which migrated other parts of the implementation to `std::allocator_traits` didn't include these.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10654
https://github.com/root-project/root/issues/10654:192,energy efficiency,alloc,allocator,192,"RAdoptAllocator uses deprecated type aliases; `RAdoptAllocator` uses a number of `std::allocator` member type aliases which are [deprecated in C++ 17](https://en.cppreference.com/w/cpp/memory/allocator) and removed in C++ 20, namely. - `pointer`. - `const_pointer`. - `reference`. - `const_reference`. #8150 which migrated other parts of the implementation to `std::allocator_traits` didn't include these.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10654
https://github.com/root-project/root/issues/10654:185,performance,memor,memory,185,"RAdoptAllocator uses deprecated type aliases; `RAdoptAllocator` uses a number of `std::allocator` member type aliases which are [deprecated in C++ 17](https://en.cppreference.com/w/cpp/memory/allocator) and removed in C++ 20, namely. - `pointer`. - `const_pointer`. - `reference`. - `const_reference`. #8150 which migrated other parts of the implementation to `std::allocator_traits` didn't include these.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10654
https://github.com/root-project/root/issues/10654:185,usability,memor,memory,185,"RAdoptAllocator uses deprecated type aliases; `RAdoptAllocator` uses a number of `std::allocator` member type aliases which are [deprecated in C++ 17](https://en.cppreference.com/w/cpp/memory/allocator) and removed in C++ 20, namely. - `pointer`. - `const_pointer`. - `reference`. - `const_reference`. #8150 which migrated other parts of the implementation to `std::allocator_traits` didn't include these.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10654
https://github.com/root-project/root/pull/10655:160,availability,error,error,160,REve - Show only item idx in the first column of REveTable controller; # This Pull request:. Minor change in a table controller. ## Changes or fixes:. Possible error on reloads of a page when elements are highlighted. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10655
https://github.com/root-project/root/pull/10655:160,performance,error,error,160,REve - Show only item idx in the first column of REveTable controller; # This Pull request:. Minor change in a table controller. ## Changes or fixes:. Possible error on reloads of a page when elements are highlighted. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10655
https://github.com/root-project/root/pull/10655:160,safety,error,error,160,REve - Show only item idx in the first column of REveTable controller; # This Pull request:. Minor change in a table controller. ## Changes or fixes:. Possible error on reloads of a page when elements are highlighted. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10655
https://github.com/root-project/root/pull/10655:59,security,control,controller,59,REve - Show only item idx in the first column of REveTable controller; # This Pull request:. Minor change in a table controller. ## Changes or fixes:. Possible error on reloads of a page when elements are highlighted. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10655
https://github.com/root-project/root/pull/10655:117,security,control,controller,117,REve - Show only item idx in the first column of REveTable controller; # This Pull request:. Minor change in a table controller. ## Changes or fixes:. Possible error on reloads of a page when elements are highlighted. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10655
https://github.com/root-project/root/pull/10655:59,testability,control,controller,59,REve - Show only item idx in the first column of REveTable controller; # This Pull request:. Minor change in a table controller. ## Changes or fixes:. Possible error on reloads of a page when elements are highlighted. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10655
https://github.com/root-project/root/pull/10655:117,testability,control,controller,117,REve - Show only item idx in the first column of REveTable controller; # This Pull request:. Minor change in a table controller. ## Changes or fixes:. Possible error on reloads of a page when elements are highlighted. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10655
https://github.com/root-project/root/pull/10655:160,usability,error,error,160,REve - Show only item idx in the first column of REveTable controller; # This Pull request:. Minor change in a table controller. ## Changes or fixes:. Possible error on reloads of a page when elements are highlighted. This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10655
https://github.com/root-project/root/pull/10656:11,availability,Error,Error,11,Made TFile Error message more accurate; # This Pull request:. ## Changes or fixes:. This issue: #10039 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10039 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10656
https://github.com/root-project/root/pull/10656:156,deployability,updat,updated,156,Made TFile Error message more accurate; # This Pull request:. ## Changes or fixes:. This issue: #10039 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10039 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10656
https://github.com/root-project/root/pull/10656:17,integrability,messag,message,17,Made TFile Error message more accurate; # This Pull request:. ## Changes or fixes:. This issue: #10039 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10039 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10656
https://github.com/root-project/root/pull/10656:17,interoperability,messag,message,17,Made TFile Error message more accurate; # This Pull request:. ## Changes or fixes:. This issue: #10039 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10039 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10656
https://github.com/root-project/root/pull/10656:11,performance,Error,Error,11,Made TFile Error message more accurate; # This Pull request:. ## Changes or fixes:. This issue: #10039 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10039 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10656
https://github.com/root-project/root/pull/10656:11,safety,Error,Error,11,Made TFile Error message more accurate; # This Pull request:. ## Changes or fixes:. This issue: #10039 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10039 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10656
https://github.com/root-project/root/pull/10656:126,safety,test,tested,126,Made TFile Error message more accurate; # This Pull request:. ## Changes or fixes:. This issue: #10039 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10039 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10656
https://github.com/root-project/root/pull/10656:156,safety,updat,updated,156,Made TFile Error message more accurate; # This Pull request:. ## Changes or fixes:. This issue: #10039 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10039 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10656
https://github.com/root-project/root/pull/10656:156,security,updat,updated,156,Made TFile Error message more accurate; # This Pull request:. ## Changes or fixes:. This issue: #10039 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10039 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10656
https://github.com/root-project/root/pull/10656:126,testability,test,tested,126,Made TFile Error message more accurate; # This Pull request:. ## Changes or fixes:. This issue: #10039 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10039 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10656
https://github.com/root-project/root/pull/10656:11,usability,Error,Error,11,Made TFile Error message more accurate; # This Pull request:. ## Changes or fixes:. This issue: #10039 . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #10039 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10656
https://github.com/root-project/root/issues/10657:519,reliability,Doe,Does,519,"[TCanvas] How to set the size for Canvas to show more histograms clearly when using THttpServer?; Hi, everyone. Recently, when I used THttpServer to show a Canvas, I met a problem. Referring to [this example](https://root.cern/doc/master/canvas2_8C.html), I want to show this Canvas on the webpage. It works very well. But when I want to show more histograms, it looks too small to see clearly. I hope that the scroll bar will be added to the canvas when I want to show more histograms on the webpage. How should I do? Does anyone have ideas? Thanks in advance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10657
https://github.com/root-project/root/issues/10657:65,usability,clear,clearly,65,"[TCanvas] How to set the size for Canvas to show more histograms clearly when using THttpServer?; Hi, everyone. Recently, when I used THttpServer to show a Canvas, I met a problem. Referring to [this example](https://root.cern/doc/master/canvas2_8C.html), I want to show this Canvas on the webpage. It works very well. But when I want to show more histograms, it looks too small to see clearly. I hope that the scroll bar will be added to the canvas when I want to show more histograms on the webpage. How should I do? Does anyone have ideas? Thanks in advance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10657
https://github.com/root-project/root/issues/10657:386,usability,clear,clearly,386,"[TCanvas] How to set the size for Canvas to show more histograms clearly when using THttpServer?; Hi, everyone. Recently, when I used THttpServer to show a Canvas, I met a problem. Referring to [this example](https://root.cern/doc/master/canvas2_8C.html), I want to show this Canvas on the webpage. It works very well. But when I want to show more histograms, it looks too small to see clearly. I hope that the scroll bar will be added to the canvas when I want to show more histograms on the webpage. How should I do? Does anyone have ideas? Thanks in advance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10657
https://github.com/root-project/root/pull/10658:83,deployability,patch,patch,83,"[DF] Do not duplicate work for nominal case when variations are present; With this patch, RResultMap points to the one and only nominal. result and we do not duplicate work for the nominal value (i.e. we don't handle the nominal case in RVariedAction anymore). Vincenzo please check whether things make sense for RMergeableValues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10658
https://github.com/root-project/root/pull/10658:83,safety,patch,patch,83,"[DF] Do not duplicate work for nominal case when variations are present; With this patch, RResultMap points to the one and only nominal. result and we do not duplicate work for the nominal value (i.e. we don't handle the nominal case in RVariedAction anymore). Vincenzo please check whether things make sense for RMergeableValues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10658
https://github.com/root-project/root/pull/10658:83,security,patch,patch,83,"[DF] Do not duplicate work for nominal case when variations are present; With this patch, RResultMap points to the one and only nominal. result and we do not duplicate work for the nominal value (i.e. we don't handle the nominal case in RVariedAction anymore). Vincenzo please check whether things make sense for RMergeableValues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10658
https://github.com/root-project/root/pull/10659:214,availability,avail,available,214,"Fix crash, if cling is started with the arguments `-xcuda -fsyntax-only`; The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:. ```. cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:305,deployability,build,build,305,"Fix crash, if cling is started with the arguments `-xcuda -fsyntax-only`; The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:. ```. cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:558,deployability,fail,failed,558,"Fix crash, if cling is started with the arguments `-xcuda -fsyntax-only`; The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:. ```. cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:154,energy efficiency,load,loaded,154,"Fix crash, if cling is started with the arguments `-xcuda -fsyntax-only`; The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:. ```. cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:162,energy efficiency,Load,Loading,162,"Fix crash, if cling is started with the arguments `-xcuda -fsyntax-only`; The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:. ```. cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:154,performance,load,loaded,154,"Fix crash, if cling is started with the arguments `-xcuda -fsyntax-only`; The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:. ```. cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:162,performance,Load,Loading,162,"Fix crash, if cling is started with the arguments `-xcuda -fsyntax-only`; The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:. ```. cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:214,reliability,availab,available,214,"Fix crash, if cling is started with the arguments `-xcuda -fsyntax-only`; The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:. ```. cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:558,reliability,fail,failed,558,"Fix crash, if cling is started with the arguments `-xcuda -fsyntax-only`; The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:. ```. cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:119,safety,prevent,prevents,119,"Fix crash, if cling is started with the arguments `-xcuda -fsyntax-only`; The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:. ```. cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:214,safety,avail,available,214,"Fix crash, if cling is started with the arguments `-xcuda -fsyntax-only`; The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:. ```. cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:119,security,preven,prevents,119,"Fix crash, if cling is started with the arguments `-xcuda -fsyntax-only`; The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:. ```. cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:214,security,availab,available,214,"Fix crash, if cling is started with the arguments `-xcuda -fsyntax-only`; The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:. ```. cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:274,testability,assert,assert,274,"Fix crash, if cling is started with the arguments `-xcuda -fsyntax-only`; The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:. ```. cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:499,testability,Assert,Assertion,499,"Fix crash, if cling is started with the arguments `-xcuda -fsyntax-only`; The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:. ```. cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:359,usability,tool,tools,359,"Fix crash, if cling is started with the arguments `-xcuda -fsyntax-only`; The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:. ```. cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/issues/10660:1005,deployability,stack,stackoverflow,1005,"TH2::SetShowProjectionXY; ### Is your feature request related to a problem? Please describe. When working with TH2 histograms, it is very common to right-click on the canvas and use SetShowProjectionX or SetShowProjectionY. There are cases where one needs to see both of these at the same time. ### Describe the solution you'd like. A function which plots the two projections at the same time, once a rectangular window has been defined. Ideally, one should be able to add more (gdirectory-open) TH2s to the 'buffer' via a Combo, as it is very useful to compare several 2D images by looking at their 1D projections. one of the projections could be rotated by 90deg, if needed, to make it fit with 2D axis orientation. ### Describe alternatives you've considered. I programmed back then this tool: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335. but it would be nice if it were adopted by ROOT, and be accesible by the context menu of the TCanvas. ### Additional context. https://stackoverflow.com/questions/40641895/plot-aligned-x-y-1d-histograms-from-projected-2d-histogram. https://www.astrobetter.com/blog/2014/02/10/visualization-fun-with-python-2d-histogram-with-1d-histograms-on-axes/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10660
https://github.com/root-project/root/issues/10660:509,integrability,buffer,buffer,509,"TH2::SetShowProjectionXY; ### Is your feature request related to a problem? Please describe. When working with TH2 histograms, it is very common to right-click on the canvas and use SetShowProjectionX or SetShowProjectionY. There are cases where one needs to see both of these at the same time. ### Describe the solution you'd like. A function which plots the two projections at the same time, once a rectangular window has been defined. Ideally, one should be able to add more (gdirectory-open) TH2s to the 'buffer' via a Combo, as it is very useful to compare several 2D images by looking at their 1D projections. one of the projections could be rotated by 90deg, if needed, to make it fit with 2D axis orientation. ### Describe alternatives you've considered. I programmed back then this tool: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335. but it would be nice if it were adopted by ROOT, and be accesible by the context menu of the TCanvas. ### Additional context. https://stackoverflow.com/questions/40641895/plot-aligned-x-y-1d-histograms-from-projected-2d-histogram. https://www.astrobetter.com/blog/2014/02/10/visualization-fun-with-python-2d-histogram-with-1d-histograms-on-axes/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10660
https://github.com/root-project/root/issues/10660:289,performance,time,time,289,"TH2::SetShowProjectionXY; ### Is your feature request related to a problem? Please describe. When working with TH2 histograms, it is very common to right-click on the canvas and use SetShowProjectionX or SetShowProjectionY. There are cases where one needs to see both of these at the same time. ### Describe the solution you'd like. A function which plots the two projections at the same time, once a rectangular window has been defined. Ideally, one should be able to add more (gdirectory-open) TH2s to the 'buffer' via a Combo, as it is very useful to compare several 2D images by looking at their 1D projections. one of the projections could be rotated by 90deg, if needed, to make it fit with 2D axis orientation. ### Describe alternatives you've considered. I programmed back then this tool: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335. but it would be nice if it were adopted by ROOT, and be accesible by the context menu of the TCanvas. ### Additional context. https://stackoverflow.com/questions/40641895/plot-aligned-x-y-1d-histograms-from-projected-2d-histogram. https://www.astrobetter.com/blog/2014/02/10/visualization-fun-with-python-2d-histogram-with-1d-histograms-on-axes/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10660
https://github.com/root-project/root/issues/10660:388,performance,time,time,388,"TH2::SetShowProjectionXY; ### Is your feature request related to a problem? Please describe. When working with TH2 histograms, it is very common to right-click on the canvas and use SetShowProjectionX or SetShowProjectionY. There are cases where one needs to see both of these at the same time. ### Describe the solution you'd like. A function which plots the two projections at the same time, once a rectangular window has been defined. Ideally, one should be able to add more (gdirectory-open) TH2s to the 'buffer' via a Combo, as it is very useful to compare several 2D images by looking at their 1D projections. one of the projections could be rotated by 90deg, if needed, to make it fit with 2D axis orientation. ### Describe alternatives you've considered. I programmed back then this tool: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335. but it would be nice if it were adopted by ROOT, and be accesible by the context menu of the TCanvas. ### Additional context. https://stackoverflow.com/questions/40641895/plot-aligned-x-y-1d-histograms-from-projected-2d-histogram. https://www.astrobetter.com/blog/2014/02/10/visualization-fun-with-python-2d-histogram-with-1d-histograms-on-axes/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10660
https://github.com/root-project/root/issues/10660:648,security,rotat,rotated,648,"TH2::SetShowProjectionXY; ### Is your feature request related to a problem? Please describe. When working with TH2 histograms, it is very common to right-click on the canvas and use SetShowProjectionX or SetShowProjectionY. There are cases where one needs to see both of these at the same time. ### Describe the solution you'd like. A function which plots the two projections at the same time, once a rectangular window has been defined. Ideally, one should be able to add more (gdirectory-open) TH2s to the 'buffer' via a Combo, as it is very useful to compare several 2D images by looking at their 1D projections. one of the projections could be rotated by 90deg, if needed, to make it fit with 2D axis orientation. ### Describe alternatives you've considered. I programmed back then this tool: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335. but it would be nice if it were adopted by ROOT, and be accesible by the context menu of the TCanvas. ### Additional context. https://stackoverflow.com/questions/40641895/plot-aligned-x-y-1d-histograms-from-projected-2d-histogram. https://www.astrobetter.com/blog/2014/02/10/visualization-fun-with-python-2d-histogram-with-1d-histograms-on-axes/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10660
https://github.com/root-project/root/issues/10660:944,testability,context,context,944,"TH2::SetShowProjectionXY; ### Is your feature request related to a problem? Please describe. When working with TH2 histograms, it is very common to right-click on the canvas and use SetShowProjectionX or SetShowProjectionY. There are cases where one needs to see both of these at the same time. ### Describe the solution you'd like. A function which plots the two projections at the same time, once a rectangular window has been defined. Ideally, one should be able to add more (gdirectory-open) TH2s to the 'buffer' via a Combo, as it is very useful to compare several 2D images by looking at their 1D projections. one of the projections could be rotated by 90deg, if needed, to make it fit with 2D axis orientation. ### Describe alternatives you've considered. I programmed back then this tool: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335. but it would be nice if it were adopted by ROOT, and be accesible by the context menu of the TCanvas. ### Additional context. https://stackoverflow.com/questions/40641895/plot-aligned-x-y-1d-histograms-from-projected-2d-histogram. https://www.astrobetter.com/blog/2014/02/10/visualization-fun-with-python-2d-histogram-with-1d-histograms-on-axes/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10660
https://github.com/root-project/root/issues/10660:988,testability,context,context,988,"TH2::SetShowProjectionXY; ### Is your feature request related to a problem? Please describe. When working with TH2 histograms, it is very common to right-click on the canvas and use SetShowProjectionX or SetShowProjectionY. There are cases where one needs to see both of these at the same time. ### Describe the solution you'd like. A function which plots the two projections at the same time, once a rectangular window has been defined. Ideally, one should be able to add more (gdirectory-open) TH2s to the 'buffer' via a Combo, as it is very useful to compare several 2D images by looking at their 1D projections. one of the projections could be rotated by 90deg, if needed, to make it fit with 2D axis orientation. ### Describe alternatives you've considered. I programmed back then this tool: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335. but it would be nice if it were adopted by ROOT, and be accesible by the context menu of the TCanvas. ### Additional context. https://stackoverflow.com/questions/40641895/plot-aligned-x-y-1d-histograms-from-projected-2d-histogram. https://www.astrobetter.com/blog/2014/02/10/visualization-fun-with-python-2d-histogram-with-1d-histograms-on-axes/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10660
https://github.com/root-project/root/issues/10660:791,usability,tool,tool,791,"TH2::SetShowProjectionXY; ### Is your feature request related to a problem? Please describe. When working with TH2 histograms, it is very common to right-click on the canvas and use SetShowProjectionX or SetShowProjectionY. There are cases where one needs to see both of these at the same time. ### Describe the solution you'd like. A function which plots the two projections at the same time, once a rectangular window has been defined. Ideally, one should be able to add more (gdirectory-open) TH2s to the 'buffer' via a Combo, as it is very useful to compare several 2D images by looking at their 1D projections. one of the projections could be rotated by 90deg, if needed, to make it fit with 2D axis orientation. ### Describe alternatives you've considered. I programmed back then this tool: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335. but it would be nice if it were adopted by ROOT, and be accesible by the context menu of the TCanvas. ### Additional context. https://stackoverflow.com/questions/40641895/plot-aligned-x-y-1d-histograms-from-projected-2d-histogram. https://www.astrobetter.com/blog/2014/02/10/visualization-fun-with-python-2d-histogram-with-1d-histograms-on-axes/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10660
https://github.com/root-project/root/issues/10660:845,usability,interact,interactive-viewer,845,"TH2::SetShowProjectionXY; ### Is your feature request related to a problem? Please describe. When working with TH2 histograms, it is very common to right-click on the canvas and use SetShowProjectionX or SetShowProjectionY. There are cases where one needs to see both of these at the same time. ### Describe the solution you'd like. A function which plots the two projections at the same time, once a rectangular window has been defined. Ideally, one should be able to add more (gdirectory-open) TH2s to the 'buffer' via a Combo, as it is very useful to compare several 2D images by looking at their 1D projections. one of the projections could be rotated by 90deg, if needed, to make it fit with 2D axis orientation. ### Describe alternatives you've considered. I programmed back then this tool: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335. but it would be nice if it were adopted by ROOT, and be accesible by the context menu of the TCanvas. ### Additional context. https://stackoverflow.com/questions/40641895/plot-aligned-x-y-1d-histograms-from-projected-2d-histogram. https://www.astrobetter.com/blog/2014/02/10/visualization-fun-with-python-2d-histogram-with-1d-histograms-on-axes/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10660
https://github.com/root-project/root/issues/10660:952,usability,menu,menu,952,"TH2::SetShowProjectionXY; ### Is your feature request related to a problem? Please describe. When working with TH2 histograms, it is very common to right-click on the canvas and use SetShowProjectionX or SetShowProjectionY. There are cases where one needs to see both of these at the same time. ### Describe the solution you'd like. A function which plots the two projections at the same time, once a rectangular window has been defined. Ideally, one should be able to add more (gdirectory-open) TH2s to the 'buffer' via a Combo, as it is very useful to compare several 2D images by looking at their 1D projections. one of the projections could be rotated by 90deg, if needed, to make it fit with 2D axis orientation. ### Describe alternatives you've considered. I programmed back then this tool: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335. but it would be nice if it were adopted by ROOT, and be accesible by the context menu of the TCanvas. ### Additional context. https://stackoverflow.com/questions/40641895/plot-aligned-x-y-1d-histograms-from-projected-2d-histogram. https://www.astrobetter.com/blog/2014/02/10/visualization-fun-with-python-2d-histogram-with-1d-histograms-on-axes/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10660
https://github.com/root-project/root/issues/10660:1146,usability,visual,visualization-fun-with-python-,1146,"TH2::SetShowProjectionXY; ### Is your feature request related to a problem? Please describe. When working with TH2 histograms, it is very common to right-click on the canvas and use SetShowProjectionX or SetShowProjectionY. There are cases where one needs to see both of these at the same time. ### Describe the solution you'd like. A function which plots the two projections at the same time, once a rectangular window has been defined. Ideally, one should be able to add more (gdirectory-open) TH2s to the 'buffer' via a Combo, as it is very useful to compare several 2D images by looking at their 1D projections. one of the projections could be rotated by 90deg, if needed, to make it fit with 2D axis orientation. ### Describe alternatives you've considered. I programmed back then this tool: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335. but it would be nice if it were adopted by ROOT, and be accesible by the context menu of the TCanvas. ### Additional context. https://stackoverflow.com/questions/40641895/plot-aligned-x-y-1d-histograms-from-projected-2d-histogram. https://www.astrobetter.com/blog/2014/02/10/visualization-fun-with-python-2d-histogram-with-1d-histograms-on-axes/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10660
https://github.com/root-project/root/pull/10662:91,deployability,patch,patch,91,"[DF] Do not duplicate work for nominal case when variations are present (v6.26); With this patch, RResultMap points to the one and only nominal. result and we do not duplicate work for the nominal value (i.e. we don't handle the nominal case in RVariedAction anymore).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10662
https://github.com/root-project/root/pull/10662:91,safety,patch,patch,91,"[DF] Do not duplicate work for nominal case when variations are present (v6.26); With this patch, RResultMap points to the one and only nominal. result and we do not duplicate work for the nominal value (i.e. we don't handle the nominal case in RVariedAction anymore).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10662
https://github.com/root-project/root/pull/10662:91,security,patch,patch,91,"[DF] Do not duplicate work for nominal case when variations are present (v6.26); With this patch, RResultMap points to the one and only nominal. result and we do not duplicate work for the nominal value (i.e. we don't handle the nominal case in RVariedAction anymore).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10662
https://github.com/root-project/root/pull/10663:54,deployability,updat,update,54,"[RF] RooAbsData code modernization and docmumentation update; One of the overloads of `RooAbsData::createHistogram` was deprecated. because it behaved inconsistently with another more frequently used. overload (see https://github.com/root-project/root/pull/10411). However, I forgot to mention the deprecation in the documentation and. pointed it out only in the source code with the deprecated macro. This. commit adds the corresponding `\deprecated` note to the reference guide. Also, some code modernizations were applied to the source file while at it:. * replace `TString` with `std::string`. * replace `0` with `nullptr`. * replace iterator loops with range-based loops. * memory management with `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10663
https://github.com/root-project/root/pull/10663:686,deployability,manag,management,686,"[RF] RooAbsData code modernization and docmumentation update; One of the overloads of `RooAbsData::createHistogram` was deprecated. because it behaved inconsistently with another more frequently used. overload (see https://github.com/root-project/root/pull/10411). However, I forgot to mention the deprecation in the documentation and. pointed it out only in the source code with the deprecated macro. This. commit adds the corresponding `\deprecated` note to the reference guide. Also, some code modernizations were applied to the source file while at it:. * replace `TString` with `std::string`. * replace `0` with `nullptr`. * replace iterator loops with range-based loops. * memory management with `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10663
https://github.com/root-project/root/pull/10663:686,energy efficiency,manag,management,686,"[RF] RooAbsData code modernization and docmumentation update; One of the overloads of `RooAbsData::createHistogram` was deprecated. because it behaved inconsistently with another more frequently used. overload (see https://github.com/root-project/root/pull/10411). However, I forgot to mention the deprecation in the documentation and. pointed it out only in the source code with the deprecated macro. This. commit adds the corresponding `\deprecated` note to the reference guide. Also, some code modernizations were applied to the source file while at it:. * replace `TString` with `std::string`. * replace `0` with `nullptr`. * replace iterator loops with range-based loops. * memory management with `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10663
https://github.com/root-project/root/pull/10663:679,performance,memor,memory,679,"[RF] RooAbsData code modernization and docmumentation update; One of the overloads of `RooAbsData::createHistogram` was deprecated. because it behaved inconsistently with another more frequently used. overload (see https://github.com/root-project/root/pull/10411). However, I forgot to mention the deprecation in the documentation and. pointed it out only in the source code with the deprecated macro. This. commit adds the corresponding `\deprecated` note to the reference guide. Also, some code modernizations were applied to the source file while at it:. * replace `TString` with `std::string`. * replace `0` with `nullptr`. * replace iterator loops with range-based loops. * memory management with `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10663
https://github.com/root-project/root/pull/10663:54,safety,updat,update,54,"[RF] RooAbsData code modernization and docmumentation update; One of the overloads of `RooAbsData::createHistogram` was deprecated. because it behaved inconsistently with another more frequently used. overload (see https://github.com/root-project/root/pull/10411). However, I forgot to mention the deprecation in the documentation and. pointed it out only in the source code with the deprecated macro. This. commit adds the corresponding `\deprecated` note to the reference guide. Also, some code modernizations were applied to the source file while at it:. * replace `TString` with `std::string`. * replace `0` with `nullptr`. * replace iterator loops with range-based loops. * memory management with `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10663
https://github.com/root-project/root/pull/10663:686,safety,manag,management,686,"[RF] RooAbsData code modernization and docmumentation update; One of the overloads of `RooAbsData::createHistogram` was deprecated. because it behaved inconsistently with another more frequently used. overload (see https://github.com/root-project/root/pull/10411). However, I forgot to mention the deprecation in the documentation and. pointed it out only in the source code with the deprecated macro. This. commit adds the corresponding `\deprecated` note to the reference guide. Also, some code modernizations were applied to the source file while at it:. * replace `TString` with `std::string`. * replace `0` with `nullptr`. * replace iterator loops with range-based loops. * memory management with `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10663
https://github.com/root-project/root/pull/10663:54,security,updat,update,54,"[RF] RooAbsData code modernization and docmumentation update; One of the overloads of `RooAbsData::createHistogram` was deprecated. because it behaved inconsistently with another more frequently used. overload (see https://github.com/root-project/root/pull/10411). However, I forgot to mention the deprecation in the documentation and. pointed it out only in the source code with the deprecated macro. This. commit adds the corresponding `\deprecated` note to the reference guide. Also, some code modernizations were applied to the source file while at it:. * replace `TString` with `std::string`. * replace `0` with `nullptr`. * replace iterator loops with range-based loops. * memory management with `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10663
https://github.com/root-project/root/pull/10663:317,usability,document,documentation,317,"[RF] RooAbsData code modernization and docmumentation update; One of the overloads of `RooAbsData::createHistogram` was deprecated. because it behaved inconsistently with another more frequently used. overload (see https://github.com/root-project/root/pull/10411). However, I forgot to mention the deprecation in the documentation and. pointed it out only in the source code with the deprecated macro. This. commit adds the corresponding `\deprecated` note to the reference guide. Also, some code modernizations were applied to the source file while at it:. * replace `TString` with `std::string`. * replace `0` with `nullptr`. * replace iterator loops with range-based loops. * memory management with `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10663
https://github.com/root-project/root/pull/10663:474,usability,guid,guide,474,"[RF] RooAbsData code modernization and docmumentation update; One of the overloads of `RooAbsData::createHistogram` was deprecated. because it behaved inconsistently with another more frequently used. overload (see https://github.com/root-project/root/pull/10411). However, I forgot to mention the deprecation in the documentation and. pointed it out only in the source code with the deprecated macro. This. commit adds the corresponding `\deprecated` note to the reference guide. Also, some code modernizations were applied to the source file while at it:. * replace `TString` with `std::string`. * replace `0` with `nullptr`. * replace iterator loops with range-based loops. * memory management with `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10663
https://github.com/root-project/root/pull/10663:679,usability,memor,memory,679,"[RF] RooAbsData code modernization and docmumentation update; One of the overloads of `RooAbsData::createHistogram` was deprecated. because it behaved inconsistently with another more frequently used. overload (see https://github.com/root-project/root/pull/10411). However, I forgot to mention the deprecation in the documentation and. pointed it out only in the source code with the deprecated macro. This. commit adds the corresponding `\deprecated` note to the reference guide. Also, some code modernizations were applied to the source file while at it:. * replace `TString` with `std::string`. * replace `0` with `nullptr`. * replace iterator loops with range-based loops. * memory management with `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10663
https://github.com/root-project/root/issues/10664:89,energy efficiency,current,currently,89,[ntuple] Expose fixed-size arrays as RVecs in RDF datasource; The RNTuple RDF datasource currently presents fixed-size arrays `std::array` to RDF. It should instead provide an `RField` that is an `RVec` in memory for a fixed-size array on disk.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10664
https://github.com/root-project/root/issues/10664:206,performance,memor,memory,206,[ntuple] Expose fixed-size arrays as RVecs in RDF datasource; The RNTuple RDF datasource currently presents fixed-size arrays `std::array` to RDF. It should instead provide an `RField` that is an `RVec` in memory for a fixed-size array on disk.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10664
https://github.com/root-project/root/issues/10664:239,performance,disk,disk,239,[ntuple] Expose fixed-size arrays as RVecs in RDF datasource; The RNTuple RDF datasource currently presents fixed-size arrays `std::array` to RDF. It should instead provide an `RField` that is an `RVec` in memory for a fixed-size array on disk.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10664
https://github.com/root-project/root/issues/10664:9,security,Expos,Expose,9,[ntuple] Expose fixed-size arrays as RVecs in RDF datasource; The RNTuple RDF datasource currently presents fixed-size arrays `std::array` to RDF. It should instead provide an `RField` that is an `RVec` in memory for a fixed-size array on disk.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10664
https://github.com/root-project/root/issues/10664:206,usability,memor,memory,206,[ntuple] Expose fixed-size arrays as RVecs in RDF datasource; The RNTuple RDF datasource currently presents fixed-size arrays `std::array` to RDF. It should instead provide an `RField` that is an `RVec` in memory for a fixed-size array on disk.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10664
https://github.com/root-project/root/pull/10665:333,performance,time,times,333,"[ntuple] Add more test coverage for RNTuple+RVec; This PR brings coverage of RNTuple+RVec almost on par with RNTuple+std::vector, e.g. by templating some existing std::vector tests over the collection type. There is one issue: in `RNTuple.ComplexRVec`, the element type's constructor and destructor gets called a different number of times for RVec than for std::vector, but I _think_ RVec is right and std::vector is wrong because of https://github.com/root-project/root/issues/10520 . I'd like to hear what Jakob thinks though :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10665
https://github.com/root-project/root/pull/10665:18,safety,test,test,18,"[ntuple] Add more test coverage for RNTuple+RVec; This PR brings coverage of RNTuple+RVec almost on par with RNTuple+std::vector, e.g. by templating some existing std::vector tests over the collection type. There is one issue: in `RNTuple.ComplexRVec`, the element type's constructor and destructor gets called a different number of times for RVec than for std::vector, but I _think_ RVec is right and std::vector is wrong because of https://github.com/root-project/root/issues/10520 . I'd like to hear what Jakob thinks though :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10665
https://github.com/root-project/root/pull/10665:175,safety,test,tests,175,"[ntuple] Add more test coverage for RNTuple+RVec; This PR brings coverage of RNTuple+RVec almost on par with RNTuple+std::vector, e.g. by templating some existing std::vector tests over the collection type. There is one issue: in `RNTuple.ComplexRVec`, the element type's constructor and destructor gets called a different number of times for RVec than for std::vector, but I _think_ RVec is right and std::vector is wrong because of https://github.com/root-project/root/issues/10520 . I'd like to hear what Jakob thinks though :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10665
https://github.com/root-project/root/pull/10665:239,safety,Compl,ComplexRVec,239,"[ntuple] Add more test coverage for RNTuple+RVec; This PR brings coverage of RNTuple+RVec almost on par with RNTuple+std::vector, e.g. by templating some existing std::vector tests over the collection type. There is one issue: in `RNTuple.ComplexRVec`, the element type's constructor and destructor gets called a different number of times for RVec than for std::vector, but I _think_ RVec is right and std::vector is wrong because of https://github.com/root-project/root/issues/10520 . I'd like to hear what Jakob thinks though :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10665
https://github.com/root-project/root/pull/10665:239,security,Compl,ComplexRVec,239,"[ntuple] Add more test coverage for RNTuple+RVec; This PR brings coverage of RNTuple+RVec almost on par with RNTuple+std::vector, e.g. by templating some existing std::vector tests over the collection type. There is one issue: in `RNTuple.ComplexRVec`, the element type's constructor and destructor gets called a different number of times for RVec than for std::vector, but I _think_ RVec is right and std::vector is wrong because of https://github.com/root-project/root/issues/10520 . I'd like to hear what Jakob thinks though :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10665
https://github.com/root-project/root/pull/10665:18,testability,test,test,18,"[ntuple] Add more test coverage for RNTuple+RVec; This PR brings coverage of RNTuple+RVec almost on par with RNTuple+std::vector, e.g. by templating some existing std::vector tests over the collection type. There is one issue: in `RNTuple.ComplexRVec`, the element type's constructor and destructor gets called a different number of times for RVec than for std::vector, but I _think_ RVec is right and std::vector is wrong because of https://github.com/root-project/root/issues/10520 . I'd like to hear what Jakob thinks though :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10665
https://github.com/root-project/root/pull/10665:23,testability,coverag,coverage,23,"[ntuple] Add more test coverage for RNTuple+RVec; This PR brings coverage of RNTuple+RVec almost on par with RNTuple+std::vector, e.g. by templating some existing std::vector tests over the collection type. There is one issue: in `RNTuple.ComplexRVec`, the element type's constructor and destructor gets called a different number of times for RVec than for std::vector, but I _think_ RVec is right and std::vector is wrong because of https://github.com/root-project/root/issues/10520 . I'd like to hear what Jakob thinks though :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10665
https://github.com/root-project/root/pull/10665:65,testability,coverag,coverage,65,"[ntuple] Add more test coverage for RNTuple+RVec; This PR brings coverage of RNTuple+RVec almost on par with RNTuple+std::vector, e.g. by templating some existing std::vector tests over the collection type. There is one issue: in `RNTuple.ComplexRVec`, the element type's constructor and destructor gets called a different number of times for RVec than for std::vector, but I _think_ RVec is right and std::vector is wrong because of https://github.com/root-project/root/issues/10520 . I'd like to hear what Jakob thinks though :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10665
https://github.com/root-project/root/pull/10665:175,testability,test,tests,175,"[ntuple] Add more test coverage for RNTuple+RVec; This PR brings coverage of RNTuple+RVec almost on par with RNTuple+std::vector, e.g. by templating some existing std::vector tests over the collection type. There is one issue: in `RNTuple.ComplexRVec`, the element type's constructor and destructor gets called a different number of times for RVec than for std::vector, but I _think_ RVec is right and std::vector is wrong because of https://github.com/root-project/root/issues/10520 . I'd like to hear what Jakob thinks though :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10665
https://github.com/root-project/root/issues/10666:485,availability,replic,replicated,485,"[DF] SaveGraph output is wrong for varied Filters; Reproducer:. ```python. import ROOT. df = ROOT.RDataFrame(1). df2 = df.Define(""x"", ""42"").Vary(""x"", ""ROOT::RVecI(5)"", 5).Filter(""x > 0""). s = df2.Sum(""x""). ss = ROOT.RDF.Experimental.VariationsFor(s). ROOT.RDF.SaveGraph(df, ""graph.dot""). ```. yields:. ![image](https://user-images.githubusercontent.com/10999034/171004153-7186726a-7ab5-43f4-a9fd-f4f9eb478a6e.png). which is of course wrong. We should instead hide the filters that are replicated for each systematic variation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10666
https://github.com/root-project/root/issues/10666:42,integrability,Filter,Filters,42,"[DF] SaveGraph output is wrong for varied Filters; Reproducer:. ```python. import ROOT. df = ROOT.RDataFrame(1). df2 = df.Define(""x"", ""42"").Vary(""x"", ""ROOT::RVecI(5)"", 5).Filter(""x > 0""). s = df2.Sum(""x""). ss = ROOT.RDF.Experimental.VariationsFor(s). ROOT.RDF.SaveGraph(df, ""graph.dot""). ```. yields:. ![image](https://user-images.githubusercontent.com/10999034/171004153-7186726a-7ab5-43f4-a9fd-f4f9eb478a6e.png). which is of course wrong. We should instead hide the filters that are replicated for each systematic variation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10666
https://github.com/root-project/root/issues/10666:171,integrability,Filter,Filter,171,"[DF] SaveGraph output is wrong for varied Filters; Reproducer:. ```python. import ROOT. df = ROOT.RDataFrame(1). df2 = df.Define(""x"", ""42"").Vary(""x"", ""ROOT::RVecI(5)"", 5).Filter(""x > 0""). s = df2.Sum(""x""). ss = ROOT.RDF.Experimental.VariationsFor(s). ROOT.RDF.SaveGraph(df, ""graph.dot""). ```. yields:. ![image](https://user-images.githubusercontent.com/10999034/171004153-7186726a-7ab5-43f4-a9fd-f4f9eb478a6e.png). which is of course wrong. We should instead hide the filters that are replicated for each systematic variation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10666
https://github.com/root-project/root/issues/10666:468,integrability,filter,filters,468,"[DF] SaveGraph output is wrong for varied Filters; Reproducer:. ```python. import ROOT. df = ROOT.RDataFrame(1). df2 = df.Define(""x"", ""42"").Vary(""x"", ""ROOT::RVecI(5)"", 5).Filter(""x > 0""). s = df2.Sum(""x""). ss = ROOT.RDF.Experimental.VariationsFor(s). ROOT.RDF.SaveGraph(df, ""graph.dot""). ```. yields:. ![image](https://user-images.githubusercontent.com/10999034/171004153-7186726a-7ab5-43f4-a9fd-f4f9eb478a6e.png). which is of course wrong. We should instead hide the filters that are replicated for each systematic variation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10666
https://github.com/root-project/root/issues/10666:319,usability,user,user-images,319,"[DF] SaveGraph output is wrong for varied Filters; Reproducer:. ```python. import ROOT. df = ROOT.RDataFrame(1). df2 = df.Define(""x"", ""42"").Vary(""x"", ""ROOT::RVecI(5)"", 5).Filter(""x > 0""). s = df2.Sum(""x""). ss = ROOT.RDF.Experimental.VariationsFor(s). ROOT.RDF.SaveGraph(df, ""graph.dot""). ```. yields:. ![image](https://user-images.githubusercontent.com/10999034/171004153-7186726a-7ab5-43f4-a9fd-f4f9eb478a6e.png). which is of course wrong. We should instead hide the filters that are replicated for each systematic variation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10666
https://github.com/root-project/root/pull/10667:48,deployability,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 15; This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10553. 2. https://github.com/root-project/root/pull/10627.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10667
https://github.com/root-project/root/pull/10667:175,deployability,patch,patches,175,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 15; This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10553. 2. https://github.com/root-project/root/pull/10627.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10667
https://github.com/root-project/root/pull/10667:48,safety,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 15; This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10553. 2. https://github.com/root-project/root/pull/10627.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10667
https://github.com/root-project/root/pull/10667:175,safety,patch,patches,175,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 15; This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10553. 2. https://github.com/root-project/root/pull/10627.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10667
https://github.com/root-project/root/pull/10667:48,security,patch,patches,48,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 15; This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10553. 2. https://github.com/root-project/root/pull/10627.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10667
https://github.com/root-project/root/pull/10667:175,security,patch,patches,175,"[v626][RF] Backports of RooFit PRs to `v6-26-00-patches`: Part 15; This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10553. 2. https://github.com/root-project/root/pull/10627.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10667
https://github.com/root-project/root/pull/10669:39,deployability,build,building,39,Fix running with macOS 12.0+ SDK after building with an older SDK [v6.26]; When building with a macOS SDK before 12.0 and running with 12.0+ the validation of private modulemaps fails due to a change in layout. This change disables the check when DisablePCHValidation is active. (cherry picked from commit 85c757ad962e609779dcf8171e37cf70f611d238). Backport of PR #10555,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10669
https://github.com/root-project/root/pull/10669:80,deployability,build,building,80,Fix running with macOS 12.0+ SDK after building with an older SDK [v6.26]; When building with a macOS SDK before 12.0 and running with 12.0+ the validation of private modulemaps fails due to a change in layout. This change disables the check when DisablePCHValidation is active. (cherry picked from commit 85c757ad962e609779dcf8171e37cf70f611d238). Backport of PR #10555,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10669
https://github.com/root-project/root/pull/10669:167,deployability,modul,modulemaps,167,Fix running with macOS 12.0+ SDK after building with an older SDK [v6.26]; When building with a macOS SDK before 12.0 and running with 12.0+ the validation of private modulemaps fails due to a change in layout. This change disables the check when DisablePCHValidation is active. (cherry picked from commit 85c757ad962e609779dcf8171e37cf70f611d238). Backport of PR #10555,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10669
https://github.com/root-project/root/pull/10669:178,deployability,fail,fails,178,Fix running with macOS 12.0+ SDK after building with an older SDK [v6.26]; When building with a macOS SDK before 12.0 and running with 12.0+ the validation of private modulemaps fails due to a change in layout. This change disables the check when DisablePCHValidation is active. (cherry picked from commit 85c757ad962e609779dcf8171e37cf70f611d238). Backport of PR #10555,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10669
https://github.com/root-project/root/pull/10669:167,modifiability,modul,modulemaps,167,Fix running with macOS 12.0+ SDK after building with an older SDK [v6.26]; When building with a macOS SDK before 12.0 and running with 12.0+ the validation of private modulemaps fails due to a change in layout. This change disables the check when DisablePCHValidation is active. (cherry picked from commit 85c757ad962e609779dcf8171e37cf70f611d238). Backport of PR #10555,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10669
https://github.com/root-project/root/pull/10669:178,reliability,fail,fails,178,Fix running with macOS 12.0+ SDK after building with an older SDK [v6.26]; When building with a macOS SDK before 12.0 and running with 12.0+ the validation of private modulemaps fails due to a change in layout. This change disables the check when DisablePCHValidation is active. (cherry picked from commit 85c757ad962e609779dcf8171e37cf70f611d238). Backport of PR #10555,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10669
https://github.com/root-project/root/pull/10669:145,safety,valid,validation,145,Fix running with macOS 12.0+ SDK after building with an older SDK [v6.26]; When building with a macOS SDK before 12.0 and running with 12.0+ the validation of private modulemaps fails due to a change in layout. This change disables the check when DisablePCHValidation is active. (cherry picked from commit 85c757ad962e609779dcf8171e37cf70f611d238). Backport of PR #10555,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10669
https://github.com/root-project/root/pull/10669:167,safety,modul,modulemaps,167,Fix running with macOS 12.0+ SDK after building with an older SDK [v6.26]; When building with a macOS SDK before 12.0 and running with 12.0+ the validation of private modulemaps fails due to a change in layout. This change disables the check when DisablePCHValidation is active. (cherry picked from commit 85c757ad962e609779dcf8171e37cf70f611d238). Backport of PR #10555,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10669
https://github.com/root-project/root/pull/10669:145,security,validat,validation,145,Fix running with macOS 12.0+ SDK after building with an older SDK [v6.26]; When building with a macOS SDK before 12.0 and running with 12.0+ the validation of private modulemaps fails due to a change in layout. This change disables the check when DisablePCHValidation is active. (cherry picked from commit 85c757ad962e609779dcf8171e37cf70f611d238). Backport of PR #10555,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10669
https://github.com/root-project/root/pull/10670:5,integrability,Sub,Substitute,5,[RF] Substitute some coding antipatterns in RooFit; 1. Replace `this->_*` pattern with `_*` in RooFit. 2. Replace `IsA()->GetName()` pattern with `ClassName()` in RooFit. 3. Use `empty()` to check for empty collections instead of `getSize()`. 4. Replace `NULL` with `nullptr` in RooFit. 5. Use `empty()` to check for empty collections instead of `size()`. More detail in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10670
https://github.com/root-project/root/pull/10671:167,integrability,batch,batch,167,"[RF] Some speedups in RooIntegralMorph and RooNDKeysPdf; Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10671:271,integrability,batch,batch,271,"[RF] Some speedups in RooIntegralMorph and RooNDKeysPdf; Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10671:330,integrability,messag,messages,330,"[RF] Some speedups in RooIntegralMorph and RooNDKeysPdf; Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10671:330,interoperability,messag,messages,330,"[RF] Some speedups in RooIntegralMorph and RooNDKeysPdf; Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10671:290,modifiability,scal,scalar,290,"[RF] Some speedups in RooIntegralMorph and RooNDKeysPdf; Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10671:141,performance,perform,performance,141,"[RF] Some speedups in RooIntegralMorph and RooNDKeysPdf; Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10671:167,performance,batch,batch,167,"[RF] Some speedups in RooIntegralMorph and RooNDKeysPdf; Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10671:239,performance,overhead,overhead,239,"[RF] Some speedups in RooIntegralMorph and RooNDKeysPdf; Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10671:271,performance,batch,batch,271,"[RF] Some speedups in RooIntegralMorph and RooNDKeysPdf; Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10671:121,safety,test,tests,121,"[RF] Some speedups in RooIntegralMorph and RooNDKeysPdf; Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10671:356,safety,test,tested,356,"[RF] Some speedups in RooIntegralMorph and RooNDKeysPdf; Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10671:121,testability,test,tests,121,"[RF] Some speedups in RooIntegralMorph and RooNDKeysPdf; Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10671:356,testability,test,tested,356,"[RF] Some speedups in RooIntegralMorph and RooNDKeysPdf; Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10671:141,usability,perform,performance,141,"[RF] Some speedups in RooIntegralMorph and RooNDKeysPdf; Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10672:73,availability,error,error,73,Fix invalid preprocessor command 'warning' on Windows; Fix the following error when compiling code using ROOT on Windows with the wrong `-std:c++` version or without the the `-Zc:__cplusplus` compilation flag:. ```. RConfigure.h(27): fatal error C1021: invalid preprocessor command 'warning'. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10672
https://github.com/root-project/root/pull/10672:240,availability,error,error,240,Fix invalid preprocessor command 'warning' on Windows; Fix the following error when compiling code using ROOT on Windows with the wrong `-std:c++` version or without the the `-Zc:__cplusplus` compilation flag:. ```. RConfigure.h(27): fatal error C1021: invalid preprocessor command 'warning'. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10672
https://github.com/root-project/root/pull/10672:147,deployability,version,version,147,Fix invalid preprocessor command 'warning' on Windows; Fix the following error when compiling code using ROOT on Windows with the wrong `-std:c++` version or without the the `-Zc:__cplusplus` compilation flag:. ```. RConfigure.h(27): fatal error C1021: invalid preprocessor command 'warning'. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10672
https://github.com/root-project/root/pull/10672:147,integrability,version,version,147,Fix invalid preprocessor command 'warning' on Windows; Fix the following error when compiling code using ROOT on Windows with the wrong `-std:c++` version or without the the `-Zc:__cplusplus` compilation flag:. ```. RConfigure.h(27): fatal error C1021: invalid preprocessor command 'warning'. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10672
https://github.com/root-project/root/pull/10672:147,modifiability,version,version,147,Fix invalid preprocessor command 'warning' on Windows; Fix the following error when compiling code using ROOT on Windows with the wrong `-std:c++` version or without the the `-Zc:__cplusplus` compilation flag:. ```. RConfigure.h(27): fatal error C1021: invalid preprocessor command 'warning'. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10672
https://github.com/root-project/root/pull/10672:73,performance,error,error,73,Fix invalid preprocessor command 'warning' on Windows; Fix the following error when compiling code using ROOT on Windows with the wrong `-std:c++` version or without the the `-Zc:__cplusplus` compilation flag:. ```. RConfigure.h(27): fatal error C1021: invalid preprocessor command 'warning'. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10672
https://github.com/root-project/root/pull/10672:240,performance,error,error,240,Fix invalid preprocessor command 'warning' on Windows; Fix the following error when compiling code using ROOT on Windows with the wrong `-std:c++` version or without the the `-Zc:__cplusplus` compilation flag:. ```. RConfigure.h(27): fatal error C1021: invalid preprocessor command 'warning'. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10672
https://github.com/root-project/root/pull/10672:73,safety,error,error,73,Fix invalid preprocessor command 'warning' on Windows; Fix the following error when compiling code using ROOT on Windows with the wrong `-std:c++` version or without the the `-Zc:__cplusplus` compilation flag:. ```. RConfigure.h(27): fatal error C1021: invalid preprocessor command 'warning'. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10672
https://github.com/root-project/root/pull/10672:240,safety,error,error,240,Fix invalid preprocessor command 'warning' on Windows; Fix the following error when compiling code using ROOT on Windows with the wrong `-std:c++` version or without the the `-Zc:__cplusplus` compilation flag:. ```. RConfigure.h(27): fatal error C1021: invalid preprocessor command 'warning'. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10672
https://github.com/root-project/root/pull/10672:25,usability,command,command,25,Fix invalid preprocessor command 'warning' on Windows; Fix the following error when compiling code using ROOT on Windows with the wrong `-std:c++` version or without the the `-Zc:__cplusplus` compilation flag:. ```. RConfigure.h(27): fatal error C1021: invalid preprocessor command 'warning'. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10672
https://github.com/root-project/root/pull/10672:73,usability,error,error,73,Fix invalid preprocessor command 'warning' on Windows; Fix the following error when compiling code using ROOT on Windows with the wrong `-std:c++` version or without the the `-Zc:__cplusplus` compilation flag:. ```. RConfigure.h(27): fatal error C1021: invalid preprocessor command 'warning'. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10672
https://github.com/root-project/root/pull/10672:240,usability,error,error,240,Fix invalid preprocessor command 'warning' on Windows; Fix the following error when compiling code using ROOT on Windows with the wrong `-std:c++` version or without the the `-Zc:__cplusplus` compilation flag:. ```. RConfigure.h(27): fatal error C1021: invalid preprocessor command 'warning'. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10672
https://github.com/root-project/root/pull/10672:274,usability,command,command,274,Fix invalid preprocessor command 'warning' on Windows; Fix the following error when compiling code using ROOT on Windows with the wrong `-std:c++` version or without the the `-Zc:__cplusplus` compilation flag:. ```. RConfigure.h(27): fatal error C1021: invalid preprocessor command 'warning'. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10672
https://github.com/root-project/root/pull/10673:333,deployability,automat,automatically,333,"Improve RBrowser cleanup; Include `RBrowserData` and created `TCanvas` into `gROOT` list of cleanups. In case if any object is deleted, check if it also appears in list. of cached object in RBrowserData. Tries to catch situation when . closing TFile let objects like histograms disappear. Also special handling of TFile which do not automatically has cleanup bit set and. therefore can be deleted without any notice for RBrowser. Update jsroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10673
https://github.com/root-project/root/pull/10673:430,deployability,Updat,Update,430,"Improve RBrowser cleanup; Include `RBrowserData` and created `TCanvas` into `gROOT` list of cleanups. In case if any object is deleted, check if it also appears in list. of cached object in RBrowserData. Tries to catch situation when . closing TFile let objects like histograms disappear. Also special handling of TFile which do not automatically has cleanup bit set and. therefore can be deleted without any notice for RBrowser. Update jsroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10673
https://github.com/root-project/root/pull/10673:173,performance,cach,cached,173,"Improve RBrowser cleanup; Include `RBrowserData` and created `TCanvas` into `gROOT` list of cleanups. In case if any object is deleted, check if it also appears in list. of cached object in RBrowserData. Tries to catch situation when . closing TFile let objects like histograms disappear. Also special handling of TFile which do not automatically has cleanup bit set and. therefore can be deleted without any notice for RBrowser. Update jsroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10673
https://github.com/root-project/root/pull/10673:430,safety,Updat,Update,430,"Improve RBrowser cleanup; Include `RBrowserData` and created `TCanvas` into `gROOT` list of cleanups. In case if any object is deleted, check if it also appears in list. of cached object in RBrowserData. Tries to catch situation when . closing TFile let objects like histograms disappear. Also special handling of TFile which do not automatically has cleanup bit set and. therefore can be deleted without any notice for RBrowser. Update jsroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10673
https://github.com/root-project/root/pull/10673:430,security,Updat,Update,430,"Improve RBrowser cleanup; Include `RBrowserData` and created `TCanvas` into `gROOT` list of cleanups. In case if any object is deleted, check if it also appears in list. of cached object in RBrowserData. Tries to catch situation when . closing TFile let objects like histograms disappear. Also special handling of TFile which do not automatically has cleanup bit set and. therefore can be deleted without any notice for RBrowser. Update jsroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10673
https://github.com/root-project/root/pull/10673:333,testability,automat,automatically,333,"Improve RBrowser cleanup; Include `RBrowserData` and created `TCanvas` into `gROOT` list of cleanups. In case if any object is deleted, check if it also appears in list. of cached object in RBrowserData. Tries to catch situation when . closing TFile let objects like histograms disappear. Also special handling of TFile which do not automatically has cleanup bit set and. therefore can be deleted without any notice for RBrowser. Update jsroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10673
https://github.com/root-project/root/pull/10674:93,availability,down,downloading,93,"[v626][cmake] Use lcgpackages@cern, rather than unstable github:; hashes are not stable when downloading release sources from github, see. https://security.stackexchange.com/a/240209. https://github.com/root-project/root/issues/10503. (cherry picked from commit 8f05559cb9d74e5bc6c65bbd39a0dce82b18a3eb).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10674
https://github.com/root-project/root/pull/10674:105,deployability,releas,release,105,"[v626][cmake] Use lcgpackages@cern, rather than unstable github:; hashes are not stable when downloading release sources from github, see. https://security.stackexchange.com/a/240209. https://github.com/root-project/root/issues/10503. (cherry picked from commit 8f05559cb9d74e5bc6c65bbd39a0dce82b18a3eb).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10674
https://github.com/root-project/root/pull/10674:156,deployability,stack,stackexchange,156,"[v626][cmake] Use lcgpackages@cern, rather than unstable github:; hashes are not stable when downloading release sources from github, see. https://security.stackexchange.com/a/240209. https://github.com/root-project/root/issues/10503. (cherry picked from commit 8f05559cb9d74e5bc6c65bbd39a0dce82b18a3eb).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10674
https://github.com/root-project/root/pull/10674:66,security,hash,hashes,66,"[v626][cmake] Use lcgpackages@cern, rather than unstable github:; hashes are not stable when downloading release sources from github, see. https://security.stackexchange.com/a/240209. https://github.com/root-project/root/issues/10503. (cherry picked from commit 8f05559cb9d74e5bc6c65bbd39a0dce82b18a3eb).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10674
https://github.com/root-project/root/pull/10674:147,security,secur,security,147,"[v626][cmake] Use lcgpackages@cern, rather than unstable github:; hashes are not stable when downloading release sources from github, see. https://security.stackexchange.com/a/240209. https://github.com/root-project/root/issues/10503. (cherry picked from commit 8f05559cb9d74e5bc6c65bbd39a0dce82b18a3eb).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10674
https://github.com/root-project/root/pull/10675:53,deployability,patch,patch,53,[cmake] Bump Vc to 1.4.3; fixes macOS warnings:; the patch is now included in the release; remove it. (cherry picked from commit 8e6f7236bc02d28cd5d767fc3d1462b1da211c64).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10675
https://github.com/root-project/root/pull/10675:82,deployability,releas,release,82,[cmake] Bump Vc to 1.4.3; fixes macOS warnings:; the patch is now included in the release; remove it. (cherry picked from commit 8e6f7236bc02d28cd5d767fc3d1462b1da211c64).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10675
https://github.com/root-project/root/pull/10675:53,safety,patch,patch,53,[cmake] Bump Vc to 1.4.3; fixes macOS warnings:; the patch is now included in the release; remove it. (cherry picked from commit 8e6f7236bc02d28cd5d767fc3d1462b1da211c64).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10675
https://github.com/root-project/root/pull/10675:53,security,patch,patch,53,[cmake] Bump Vc to 1.4.3; fixes macOS warnings:; the patch is now included in the release; remove it. (cherry picked from commit 8e6f7236bc02d28cd5d767fc3d1462b1da211c64).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10675
https://github.com/root-project/root/issues/10676:283,availability,error,error,283,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:431,availability,error,error,431,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:3868,availability,operat,operate,3868,"475 in TCling::Initialize() () from /home/rebrobles/root/lib/libCling.so. #20 0x00007ffa50ab8c2f in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:3876,availability,operat,operate,3876,"Cling::Initialize() () from /home/rebrobles/root/lib/libCling.so. #20 0x00007ffa50ab8c2f in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:3961,availability,error,error-skeleton,3961," in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b0691",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4165,availability,operat,operate,4165,"y_root_env/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_ru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4173,availability,operat,operate,4173,"nv/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (opera",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4260,availability,error,error-skeleton,4260,"uction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4731,availability,operat,operate,4731,"f519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynami",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4739,availability,operat,operate,4739,"8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleW",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4823,availability,error,error-skeleton,4823,"tion (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/impo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5018,availability,operat,operate,5018,"r (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5026,availability,operat,operate,5026,"entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5110,availability,error,error-skeleton,5110,"ion (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5172,availability,operat,operate,5172,"rate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5180,availability,operat,operate,5180,"try=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:244,deployability,instal,installation,244,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:266,deployability,modul,module,266,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:727,deployability,stack,stack,727,"Accessing pyROOT ; I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5872,deployability,modul,module,5872,"__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6024,deployability,modul,module,6024,"perate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7167,deployability,stack,stack,7167,"055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8473,deployability,stack,stack,8473,"onda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9779,deployability,stack,stack,9779,"onda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11085,deployability,stack,stack,11085,"onda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12391,deployability,stack,stack,12391,"onda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13697,deployability,stack,stack,13697,"onda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15003,deployability,stack,stack,15003,"onda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16309,deployability,stack,stack,16309,"onda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17810,deployability,modul,module,17810,"4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17988,deployability,modul,module,17988,"local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19142,deployability,stack,stack,19142,"6807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20455,deployability,stack,stack,20455,"ython-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21768,deployability,stack,stack,21768,"ython-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23081,deployability,stack,stack,23081,"ython-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24394,deployability,stack,stack,24394,"ython-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26458,deployability,modul,module,26458,"142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26636,deployability,modul,module,26636,"al/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27790,deployability,stack,stack,27790,"6807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29103,deployability,stack,stack,29103,"ython-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30416,deployability,stack,stack,30416,"ython-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31729,deployability,stack,stack,31729,"ython-3.10.4/Include/cpython/abstract.h:114. #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33042,deployability,stack,stack,33042,"ython-3.10.4/Include/cpython/abstract.h:114. #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36417,deployability,Modul,Modules,36417,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36524,deployability,Modul,Modules,36524,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36601,deployability,Modul,Modules,36601,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36744,deployability,Modul,Modules,36744,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291. #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312. #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277. #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148. #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84. #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116. #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506. #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594. #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670. #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090. #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308. #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39. ===========================================================. I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:1038,energy efficiency,alloc,allocator,1038,"is tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6.24. #13 0x00007ffa4feecde6 in TClassEdit::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:1521,energy efficiency,alloc,allocator,1521,"y get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6.24. #13 0x00007ffa4feecde6 in TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::experimental::fundamentals_v1::basic_string_view<char, std::char_traits<char> >) () from /home/rebrobles/root/lib/libCore.so.6.24. #14 0x00007ffa4ff370b4 in ROOT::TSchemaRule::SetTargetClass(TString const&) () from /home/rebrobles/root/lib/libCore.so.6.24. #15 0x00007ffa4ff3a7f0 in ROOT::TSchemaRule::SetFromRule(char const*) () from /home/rebrobles/root/lib/libCore.so.6.24. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:1609,energy efficiency,alloc,allocator,1609,"y convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6.24. #13 0x00007ffa4feecde6 in TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::experimental::fundamentals_v1::basic_string_view<char, std::char_traits<char> >) () from /home/rebrobles/root/lib/libCore.so.6.24. #14 0x00007ffa4ff370b4 in ROOT::TSchemaRule::SetTargetClass(TString const&) () from /home/rebrobles/root/lib/libCore.so.6.24. #15 0x00007ffa4ff3a7f0 in ROOT::TSchemaRule::SetFromRule(char const*) () from /home/rebrobles/root/lib/libCore.so.6.24. #16 0x00007ffa4ff0ba65 in TClass::AddRule(char const*) () from /home/rebrobles/root/lib/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:1930,energy efficiency,alloc,allocator,1930,"namicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so. #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6.24. #13 0x00007ffa4feecde6 in TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::experimental::fundamentals_v1::basic_string_view<char, std::char_traits<char> >) () from /home/rebrobles/root/lib/libCore.so.6.24. #14 0x00007ffa4ff370b4 in ROOT::TSchemaRule::SetTargetClass(TString const&) () from /home/rebrobles/root/lib/libCore.so.6.24. #15 0x00007ffa4ff3a7f0 in ROOT::TSchemaRule::SetFromRule(char const*) () from /home/rebrobles/root/lib/libCore.so.6.24. #16 0x00007ffa4ff0ba65 in TClass::AddRule(char const*) () from /home/rebrobles/root/lib/libCore.so.6.24. #17 0x00007ffa4ff0bd0f in (anonymous namespace)::ReadRulesContent(_IO_FILE*) () from /home/rebrobles/root/lib/libCore.so.6.24. #18 0x00007ffa4ff0c02c in TClass::ReadRules() () from /home/rebrobles/root/lib/libCore.so.6.24. #19 0x00007ffa4bf59475 in TCling::Initialize() () from /home/rebrobles/root/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:2123,energy efficiency,alloc,allocator,2123," CreateInterpreter () from /home/rebrobles/root/lib/libCling.so. #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24. #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24. #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so. #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24. #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6.24. #13 0x00007ffa4feecde6 in TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::experimental::fundamentals_v1::basic_string_view<char, std::char_traits<char> >) () from /home/rebrobles/root/lib/libCore.so.6.24. #14 0x00007ffa4ff370b4 in ROOT::TSchemaRule::SetTargetClass(TString const&) () from /home/rebrobles/root/lib/libCore.so.6.24. #15 0x00007ffa4ff3a7f0 in ROOT::TSchemaRule::SetFromRule(char const*) () from /home/rebrobles/root/lib/libCore.so.6.24. #16 0x00007ffa4ff0ba65 in TClass::AddRule(char const*) () from /home/rebrobles/root/lib/libCore.so.6.24. #17 0x00007ffa4ff0bd0f in (anonymous namespace)::ReadRulesContent(_IO_FILE*) () from /home/rebrobles/root/lib/libCore.so.6.24. #18 0x00007ffa4ff0c02c in TClass::ReadRules() () from /home/rebrobles/root/lib/libCore.so.6.24. #19 0x00007ffa4bf59475 in TCling::Initialize() () from /home/rebrobles/root/lib/libCling.so. #20 0x00007ffa50ab8c2f in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:3439,energy efficiency,optim,optimized,3439,"Rule::SetFromRule(char const*) () from /home/rebrobles/root/lib/libCore.so.6.24. #16 0x00007ffa4ff0ba65 in TClass::AddRule(char const*) () from /home/rebrobles/root/lib/libCore.so.6.24. #17 0x00007ffa4ff0bd0f in (anonymous namespace)::ReadRulesContent(_IO_FILE*) () from /home/rebrobles/root/lib/libCore.so.6.24. #18 0x00007ffa4ff0c02c in TClass::ReadRules() () from /home/rebrobles/root/lib/libCore.so.6.24. #19 0x00007ffa4bf59475 in TCling::Initialize() () from /home/rebrobles/root/lib/libCling.so. #20 0x00007ffa50ab8c2f in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-214748364",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:3645,energy efficiency,optim,optimized,3645,"0f in (anonymous namespace)::ReadRulesContent(_IO_FILE*) () from /home/rebrobles/root/lib/libCore.so.6.24. #18 0x00007ffa4ff0c02c in TClass::ReadRules() () from /home/rebrobles/root/lib/libCore.so.6.24. #19 0x00007ffa4bf59475 in TCling::Initialize() () from /home/rebrobles/root/lib/libCling.so. #20 0x00007ffa50ab8c2f in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26. #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26. #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc. entry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4462,energy efficiency,optim,optimized,4462,"ntry=1, argv=argv. entry=0x7fff519cefe8, env=env. entry=0x55b069205280) at dl-init.c:72. #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30. #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119. #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception. entry=0x0, operate=operate. entry=0x7ffa51cba2c0 <call_dl_init>, args=args. entry=0x7fff519cb890) at dl-error-skeleton.c:182. #27 0x00007ffa51cbb0bf in dl_open_worker (a=a. entry=0x7fff519cba40) at dl-open.c:758. #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cba20, operate=operate. entry=0x7ffa51cbac10 <dl_open_worker>, args=args. entry=0x7fff519cba40) at dl-error-skeleton.c:208. #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortnam",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5318,energy efficiency,optim,optimized,5318,"0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5340,energy efficiency,optim,optimized,5340,"rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837. #30 0x00007ffa51c5d34c in dlopen_doit (a=a. entry=0x7fff519cbc60) at dlopen.c:66. #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception. entry=0x7fff519cbc00, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:208. #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5880,energy efficiency,optim,optimized,5880,"_error (objname=objname. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5902,energy efficiency,optim,optimized,5902,"e. entry=0x55b06913d600, errstring=errstring. entry=0x55b06913d608, mallocedp=mallocedp. entry=0x55b06913d5f8, operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:50",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6032,energy efficiency,optim,optimized,6032,"try=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6054,energy efficiency,optim,optimized,6054,"open_doit>, args=args. entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6077,energy efficiency,optim,optimized,6077,"entry=0x7fff519cbc60) at dl-error-skeleton.c:227. #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate. entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args. entry=0x7fff519cbc60) at dlerror.c:170. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6268,energy efficiency,optim,optimized,6268,"0. #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6293,energy efficiency,optim,optimized,6293," in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87. #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6519,energy efficiency,optim,optimized,6519,"""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6632,energy efficiency,optim,optimized,6632,"src/conda/python-3.10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6651,energy efficiency,optim,optimized,6651,"10.4/Python/dynload_shlib.c:100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6678,energy efficiency,optim,optimized,6678,":100. #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137. #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6940,energy efficiency,optim,optimized,6940,"r/local/src/conda/python-3.10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6966,energy efficiency,optim,optimized,6966,".10.4/Python/import.c:2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6988,energy efficiency,optim,optimized,6988,"2049. #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330. #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7174,energy efficiency,optim,optimized,7174,"e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7198,energy efficiency,optim,optimized,7198,"call_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7223,energy efficiency,optim,optimized,7223,"a51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7372,energy efficiency,optim,optimized,7372,"0 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7573,energy efficiency,optim,optimized,7573,"n/ceval.c:5891. #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7744,energy efficiency,optim,optimized,7744,"77. #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7825,energy efficiency,optim,optimized,7825,"state=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7938,energy efficiency,optim,optimized,7938,"imized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7957,energy efficiency,optim,optimized,7957,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7984,energy efficiency,optim,optimized,7984,"ptimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8246,energy efficiency,optim,optimized,8246,"l/src/conda/python-3.10.4/Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8272,energy efficiency,optim,optimized,8272,"Objects/call.c:342. #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8294,energy efficiency,optim,optimized,8294,"5 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8480,energy efficiency,optim,optimized,8480,"on-3.10.4/Include/cpython/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8504,energy efficiency,optim,optimized,8504,"n/abstract.h:114. #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8529,energy efficiency,optim,optimized,8529,"bject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8678,energy efficiency,optim,optimized,8678,"ython/abstract.h:123. #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8879,energy efficiency,optim,optimized,8879,"n/ceval.c:5867. #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9050,energy efficiency,optim,optimized,9050,"81. #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9131,energy efficiency,optim,optimized,9131,"state=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9244,energy efficiency,optim,optimized,9244,"imized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9263,energy efficiency,optim,optimized,9263,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9290,energy efficiency,optim,optimized,9290,"ptimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9552,energy efficiency,optim,optimized,9552,"l/src/conda/python-3.10.4/Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9578,energy efficiency,optim,optimized,9578,"Objects/call.c:342. #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9600,energy efficiency,optim,optimized,9600,"2 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9786,energy efficiency,optim,optimized,9786,"on-3.10.4/Include/cpython/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9810,energy efficiency,optim,optimized,9810,"n/abstract.h:114. #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9835,energy efficiency,optim,optimized,9835,"bject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9984,energy efficiency,optim,optimized,9984,"ython/abstract.h:123. #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10185,energy efficiency,optim,optimized,10185,"n/ceval.c:5867. #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10356,energy efficiency,optim,optimized,10356,"98. #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10437,energy efficiency,optim,optimized,10437,"state=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10550,energy efficiency,optim,optimized,10550,"imized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10569,energy efficiency,optim,optimized,10569,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10596,energy efficiency,optim,optimized,10596,"ptimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10858,energy efficiency,optim,optimized,10858,"l/src/conda/python-3.10.4/Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10884,energy efficiency,optim,optimized,10884,"Objects/call.c:342. #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10906,energy efficiency,optim,optimized,10906,"9 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11092,energy efficiency,optim,optimized,11092,"on-3.10.4/Include/cpython/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11116,energy efficiency,optim,optimized,11116,"n/abstract.h:114. #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11141,energy efficiency,optim,optimized,11141,"bject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11290,energy efficiency,optim,optimized,11290,"ython/abstract.h:123. #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11491,energy efficiency,optim,optimized,11491,"n/ceval.c:5867. #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11662,energy efficiency,optim,optimized,11662,"13. #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11743,energy efficiency,optim,optimized,11743,"state=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11856,energy efficiency,optim,optimized,11856,"imized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11875,energy efficiency,optim,optimized,11875,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11902,energy efficiency,optim,optimized,11902,"ptimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12164,energy efficiency,optim,optimized,12164,"l/src/conda/python-3.10.4/Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12190,energy efficiency,optim,optimized,12190,"Objects/call.c:342. #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12212,energy efficiency,optim,optimized,12212,"6 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12398,energy efficiency,optim,optimized,12398,"on-3.10.4/Include/cpython/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12422,energy efficiency,optim,optimized,12422,"n/abstract.h:114. #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12447,energy efficiency,optim,optimized,12447,"bject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12596,energy efficiency,optim,optimized,12596,"ython/abstract.h:123. #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12797,energy efficiency,optim,optimized,12797,"n/ceval.c:5867. #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12968,energy efficiency,optim,optimized,12968,"13. #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13049,energy efficiency,optim,optimized,13049,"state=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13162,energy efficiency,optim,optimized,13162,"imized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13181,energy efficiency,optim,optimized,13181,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13208,energy efficiency,optim,optimized,13208,"ptimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13470,energy efficiency,optim,optimized,13470,"l/src/conda/python-3.10.4/Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13496,energy efficiency,optim,optimized,13496,"Objects/call.c:342. #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13518,energy efficiency,optim,optimized,13518,"3 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13704,energy efficiency,optim,optimized,13704,"on-3.10.4/Include/cpython/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13728,energy efficiency,optim,optimized,13728,"n/abstract.h:114. #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13753,energy efficiency,optim,optimized,13753,"bject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13902,energy efficiency,optim,optimized,13902,"ython/abstract.h:123. #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14103,energy efficiency,optim,optimized,14103,"n/ceval.c:5867. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14274,energy efficiency,optim,optimized,14274,"13. #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14355,energy efficiency,optim,optimized,14355,"state=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14468,energy efficiency,optim,optimized,14468,"imized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14487,energy efficiency,optim,optimized,14487,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14514,energy efficiency,optim,optimized,14514,"ptimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14776,energy efficiency,optim,optimized,14776,"l/src/conda/python-3.10.4/Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14802,energy efficiency,optim,optimized,14802,"Objects/call.c:342. #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14824,energy efficiency,optim,optimized,14824,"0 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15010,energy efficiency,optim,optimized,15010,"on-3.10.4/Include/cpython/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15034,energy efficiency,optim,optimized,15034,"n/abstract.h:114. #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15059,energy efficiency,optim,optimized,15059,"bject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15208,energy efficiency,optim,optimized,15208,"ython/abstract.h:123. #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15409,energy efficiency,optim,optimized,15409,"n/ceval.c:5867. #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15580,energy efficiency,optim,optimized,15580,"13. #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15661,energy efficiency,optim,optimized,15661,"state=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15774,energy efficiency,optim,optimized,15774,"imized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15793,energy efficiency,optim,optimized,15793,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15820,energy efficiency,optim,optimized,15820,"ptimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16082,energy efficiency,optim,optimized,16082,"l/src/conda/python-3.10.4/Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16108,energy efficiency,optim,optimized,16108,"Objects/call.c:342. #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16130,energy efficiency,optim,optimized,16130,"7 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16316,energy efficiency,optim,optimized,16316,"on-3.10.4/Include/cpython/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16340,energy efficiency,optim,optimized,16340,"n/abstract.h:114. #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16365,energy efficiency,optim,optimized,16365,"bject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16514,energy efficiency,optim,optimized,16514,"ython/abstract.h:123. #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16715,energy efficiency,optim,optimized,16715,"n/ceval.c:5867. #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16886,energy efficiency,optim,optimized,16886,"81. #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16967,energy efficiency,optim,optimized,16967,"state=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17080,energy efficiency,optim,optimized,17080,"imized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17099,energy efficiency,optim,optimized,17099,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17126,energy efficiency,optim,optimized,17126,"ptimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17422,energy efficiency,optim,optimized,17422,"call.c:342. #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17446,energy efficiency,optim,optimized,17446,"b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17468,energy efficiency,optim,optimized,17468,"t_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17494,energy efficiency,optim,optimized,17494,"s=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17519,energy efficiency,optim,optimized,17519,"out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17689,energy efficiency,optim,optimized,17689,"kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17818,energy efficiency,optim,optimized,17818,"cpython/abstract.h:123. #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17996,energy efficiency,optim,optimized,17996,"conda/python-3.10.4/Python/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18018,energy efficiency,optim,optimized,18018,"thon/ceval.c:5867. #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18041,energy efficiency,optim,optimized,18041,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18238,energy efficiency,optim,optimized,18238,"e (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18263,energy efficiency,optim,optimized,18263,"1075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18490,energy efficiency,optim,optimized,18490,"ptimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18604,energy efficiency,optim,optimized,18604,"68124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f951",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18623,energy efficiency,optim,optimized,18623,"EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18650,energy efficiency,optim,optimized,18650,", globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18914,energy efficiency,optim,optimized,18914,"rc/conda/python-3.10.4/Python/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18940,energy efficiency,optim,optimized,18940,"hon/bltinmodule.c:1003. #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18962,energy efficiency,optim,optimized,18962,". #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19149,energy efficiency,optim,optimized,19149,"in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19173,energy efficiency,optim,optimized,19173,"FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19198,energy efficiency,optim,optimized,19198,"ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19348,energy efficiency,optim,optimized,19348,"00055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19550,energy efficiency,optim,optimized,19550,"l.c:5891. #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19722,energy efficiency,optim,optimized,19722,"06 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19803,energy efficiency,optim,optimized,19803,"=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19917,energy efficiency,optim,optimized,19917,"d out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d63",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19936,energy efficiency,optim,optimized,19936,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19963,energy efficiency,optim,optimized,19963,"zed out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20227,energy efficiency,optim,optimized,20227,"conda/python-3.10.4/Objects/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20253,energy efficiency,optim,optimized,20253,"s/call.c:342. #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20275,energy efficiency,optim,optimized,20275,"00055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20462,energy efficiency,optim,optimized,20462,"0.4/Include/cpython/abstract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20486,energy efficiency,optim,optimized,20486,"ract.h:114. #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20511,energy efficiency,optim,optimized,20511,"_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20661,energy efficiency,optim,optimized,20661,"abstract.h:123. #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20863,energy efficiency,optim,optimized,20863,"l.c:5867. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21035,energy efficiency,optim,optimized,21035,"13 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21116,energy efficiency,optim,optimized,21116,"=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21230,energy efficiency,optim,optimized,21230,"d out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21249,energy efficiency,optim,optimized,21249,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21276,energy efficiency,optim,optimized,21276,"zed out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21540,energy efficiency,optim,optimized,21540,"conda/python-3.10.4/Objects/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21566,energy efficiency,optim,optimized,21566,"s/call.c:342. #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21588,energy efficiency,optim,optimized,21588,"00055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21775,energy efficiency,optim,optimized,21775,"0.4/Include/cpython/abstract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21799,energy efficiency,optim,optimized,21799,"ract.h:114. #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21824,energy efficiency,optim,optimized,21824,"_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21974,energy efficiency,optim,optimized,21974,"abstract.h:123. #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22176,energy efficiency,optim,optimized,22176,"l.c:5867. #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22348,energy efficiency,optim,optimized,22348,"20 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22429,energy efficiency,optim,optimized,22429,"=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22543,energy efficiency,optim,optimized,22543,"d out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22562,energy efficiency,optim,optimized,22562,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22589,energy efficiency,optim,optimized,22589,"zed out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22853,energy efficiency,optim,optimized,22853,"conda/python-3.10.4/Objects/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22879,energy efficiency,optim,optimized,22879,"s/call.c:342. #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22901,energy efficiency,optim,optimized,22901,"00055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23088,energy efficiency,optim,optimized,23088,"0.4/Include/cpython/abstract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23112,energy efficiency,optim,optimized,23112,"ract.h:114. #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23137,energy efficiency,optim,optimized,23137,"_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23287,energy efficiency,optim,optimized,23287,"abstract.h:123. #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23489,energy efficiency,optim,optimized,23489,"l.c:5867. #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23661,energy efficiency,optim,optimized,23661,"27 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23742,energy efficiency,optim,optimized,23742,"=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23856,energy efficiency,optim,optimized,23856,"d out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23875,energy efficiency,optim,optimized,23875,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23902,energy efficiency,optim,optimized,23902,"zed out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Ob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24166,energy efficiency,optim,optimized,24166,"conda/python-3.10.4/Objects/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b06",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24192,energy efficiency,optim,optimized,24192,"s/call.c:342. #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24214,energy efficiency,optim,optimized,24214,"00055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24401,energy efficiency,optim,optimized,24401,"0.4/Include/cpython/abstract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24425,energy efficiency,optim,optimized,24425,"ract.h:114. #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24450,energy efficiency,optim,optimized,24450,"_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24600,energy efficiency,optim,optimized,24600,"abstract.h:123. #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24803,energy efficiency,optim,optimized,24803,".c:5867. #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24851,energy efficiency,optim,optimized,24851,"optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213. #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25009,energy efficiency,optim,optimized,25009,"alFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25309,energy efficiency,optim,optimized,25309,"n-3.10.4/Python/ceval.c:5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25333,energy efficiency,optim,optimized,25333,"5065. #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25588,energy efficiency,optim,optimized,25588,"argsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Pyt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25612,energy efficiency,optim,optimized,25612,"rgs=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25726,energy efficiency,optim,optimized,25726,"cpython/abstract.h:99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25745,energy efficiency,optim,optimized,25745,"99. #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25772,energy efficiency,optim,optimized,25772,"ate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734. #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26070,energy efficiency,optim,optimized,26070,".c:825. #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa512",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26094,energy efficiency,optim,optimized,26094,"808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26116,energy efficiency,optim,optimized,26116,"_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26142,energy efficiency,optim,optimized,26142,"510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26167,energy efficiency,optim,optimized,26167,"159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521. #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26337,energy efficiency,optim,optimized,26337," out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622. #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26466,energy efficiency,optim,optimized,26466,"55b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26644,energy efficiency,optim,optimized,26644,"da/python-3.10.4/Python/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26666,energy efficiency,optim,optimized,26666,"n/ceval.c:5992. #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26689,energy efficiency,optim,optimized,26689,"yEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695. #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26886,energy efficiency,optim,optimized,26886," (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26911,energy efficiency,optim,optimized,26911,"2c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46. #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27138,energy efficiency,optim,optimized,27138,"ptimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27252,energy efficiency,optim,optimized,27252,"68124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f951",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27271,energy efficiency,optim,optimized,27271,"EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27298,energy efficiency,optim,optimized,27298,", globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134. #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27562,energy efficiency,optim,optimized,27562,"rc/conda/python-3.10.4/Python/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27588,energy efficiency,optim,optimized,27588,"hon/bltinmodule.c:1003. #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27610,energy efficiency,optim,optimized,27610,". #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371. #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27797,energy efficiency,optim,optimized,27797,"in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27821,energy efficiency,optim,optimized,27821,"FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27846,energy efficiency,optim,optimized,27846,"ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430. #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27996,energy efficiency,optim,optimized,27996,"00055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28198,energy efficiency,optim,optimized,28198,"l.c:5891. #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277. #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28370,energy efficiency,optim,optimized,28370,"52 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28451,energy efficiency,optim,optimized,28451,"=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28565,energy efficiency,optim,optimized,28565,"d out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d63",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28584,energy efficiency,optim,optimized,28584,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28611,energy efficiency,optim,optimized,28611,"zed out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28875,energy efficiency,optim,optimized,28875,"conda/python-3.10.4/Objects/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28901,energy efficiency,optim,optimized,28901,"s/call.c:342. #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28923,energy efficiency,optim,optimized,28923,"00055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29110,energy efficiency,optim,optimized,29110,"0.4/Include/cpython/abstract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29134,energy efficiency,optim,optimized,29134,"ract.h:114. #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29159,energy efficiency,optim,optimized,29159,"_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29309,energy efficiency,optim,optimized,29309,"abstract.h:123. #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29511,energy efficiency,optim,optimized,29511,"l.c:5867. #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181. #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29683,energy efficiency,optim,optimized,29683,"59 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tsta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29764,energy efficiency,optim,optimized,29764,"=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114. #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123. #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867. #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198. #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052. #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065. #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342. #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
